GCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.is_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/optim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [01:02<22:55:15, 62.09s/it]  0%|          | 2/1330 [03:00<35:13:43, 95.50s/it]  0%|          | 3/1330 [03:59<28:58:18, 78.60s/it]  0%|          | 4/1330 [04:54<25:33:52, 69.41s/it]  0%|          | 5/1330 [05:45<23:05:09, 62.72s/it]  0%|          | 6/1330 [06:26<20:23:30, 55.45s/it]  1%|          | 7/1330 [07:19<20:02:08, 54.52s/it]  1%|          | 8/1330 [08:01<18:35:42, 50.64s/it]  1%|          | 9/1330 [08:51<18:27:01, 50.28s/it]  1%|          | 10/1330 [10:22<23:00:30, 62.75s/it]  1%|          | 11/1330 [11:15<21:53:25, 59.75s/it]  1%|          | 12/1330 [12:02<20:28:08, 55.91s/it]  1%|          | 13/1330 [12:48<19:22:45, 52.97s/it]  1%|          | 14/1330 [13:36<18:48:54, 51.47s/it]  1%|          | 15/1330 [14:21<18:03:35, 49.44s/it]  1%|          | 16/1330 [16:29<26:46:00, 73.33s/it]  1%|▏         | 17/1330 [17:25<24:51:10, 68.14s/it]  1%|▏         | 18/1330 [18:23<23:43:01, 65.08s/it]  1%|▏         | 19/1330 [19:26<23:27:44, 64.43s/it]  2%|▏         | 20/1330 [20:51<25:42:28, 70.65s/it]  2%|▏         | 21/1330 [23:03<32:22:29, 89.04s/it]  2%|▏         | 22/1330 [26:36<45:51:36, 126.22s/it]  2%|▏         | 23/1330 [27:19<36:46:22, 101.29s/it]  2%|▏         | 24/1330 [27:59<29:59:52, 82.69s/it]   2%|▏         | 25/1330 [28:35<24:53:30, 68.67s/it]  2%|▏         | 26/1330 [29:37<24:13:49, 66.89s/it]  2%|▏         | 27/1330 [30:26<22:13:12, 61.39s/it]  2%|▏         | 28/1330 [31:10<20:18:57, 56.17s/it]  2%|▏         | 29/1330 [32:34<23:20:08, 64.57s/it]  2%|▏         | 30/1330 [33:47<24:13:59, 67.11s/it]  2%|▏         | 31/1330 [34:55<24:14:51, 67.20s/it]  2%|▏         | 32/1330 [35:42<22:03:47, 61.19s/it]  2%|▏         | 33/1330 [36:25<20:08:26, 55.90s/it]  3%|▎         | 34/1330 [37:04<18:18:08, 50.84s/it]  3%|▎         | 35/1330 [37:46<17:16:55, 48.04s/it]  3%|▎         | 36/1330 [38:21<15:49:10, 44.01s/it]  3%|▎         | 37/1330 [38:57<15:00:13, 41.77s/it]  3%|▎         | 38/1330 [39:43<15:24:39, 42.94s/it]  3%|▎         | 39/1330 [40:18<14:37:08, 40.77s/it]  3%|▎         | 40/1330 [41:02<14:51:57, 41.49s/it]  3%|▎         | 41/1330 [41:56<16:13:41, 45.32s/it]  3%|▎         | 42/1330 [45:27<34:03:47, 95.21s/it]  3%|▎         | 43/1330 [46:11<28:30:21, 79.74s/it]  3%|▎         | 44/1330 [47:54<31:00:19, 86.80s/it]  3%|▎         | 45/1330 [48:57<28:22:15, 79.48s/it]  3%|▎         | 46/1330 [49:34<23:51:38, 66.90s/it]  4%|▎         | 47/1330 [58:35<74:31:06, 209.09s/it]  4%|▎         | 48/1330 [1:00:02<61:22:53, 172.37s/it]  4%|▎         | 49/1330 [1:01:17<50:56:20, 143.15s/it]  4%|▍         | 50/1330 [1:02:50<45:31:55, 128.06s/it]  4%|▍         | 51/1330 [1:03:45<37:45:25, 106.27s/it]  4%|▍         | 52/1330 [1:04:43<32:35:09, 91.79s/it]   4%|▍         | 53/1330 [1:05:52<30:07:08, 84.91s/it]  4%|▍         | 54/1330 [1:06:41<26:18:04, 74.20s/it]  4%|▍         | 55/1330 [1:07:23<22:47:07, 64.34s/it]  4%|▍         | 56/1330 [1:08:19<21:56:18, 61.99s/it]  4%|▍         | 57/1330 [1:09:48<24:47:51, 70.13s/it]  4%|▍         | 58/1330 [1:10:46<23:25:59, 66.32s/it]  4%|▍         | 59/1330 [1:11:29<21:01:27, 59.55s/it]  5%|▍         | 60/1330 [1:13:05<24:50:59, 70.44s/it]  5%|▍         | 61/1330 [1:13:50<22:08:14, 62.80s/it]  5%|▍         | 62/1330 [1:14:55<22:17:58, 63.31s/it]  5%|▍         | 63/1330 [1:17:30<32:01:45, 91.01s/it]  5%|▍         | 64/1330 [1:18:48<30:38:27, 87.13s/it]  5%|▍         | 65/1330 [1:19:30<25:50:15, 73.53s/it]  5%|▍         | 66/1330 [1:20:36<25:00:10, 71.21s/it]  5%|▌         | 67/1330 [1:22:26<29:00:54, 82.70s/it]  5%|▌         | 68/1330 [1:23:17<25:39:36, 73.20s/it]  5%|▌         | 69/1330 [1:24:11<23:40:56, 67.61s/it]  5%|▌         | 70/1330 [1:24:59<21:36:49, 61.75s/it]  5%|▌         | 71/1330 [1:25:48<20:13:19, 57.82s/it]  5%|▌         | 72/1330 [1:27:21<23:57:21, 68.55s/it]  5%|▌         | 73/1330 [1:28:25<23:26:53, 67.16s/it]  6%|▌         | 74/1330 [1:29:24<22:34:49, 64.72s/it]  6%|▌         | 75/1330 [1:30:17<21:15:16, 60.97s/it]  6%|▌         | 76/1330 [1:31:10<20:27:41, 58.74s/it]  6%|▌         | 77/1330 [1:32:43<23:58:54, 68.90s/it]  6%|▌         | 78/1330 [1:33:35<22:14:18, 63.94s/it]  6%|▌         | 79/1330 [1:35:09<25:21:35, 72.98s/it]  6%|▌         | 80/1330 [1:36:03<23:17:39, 67.09s/it]  6%|▌         | 81/1330 [1:36:46<20:51:06, 60.10s/it]  6%|▌         | 82/1330 [1:37:29<19:04:00, 55.00s/it]  6%|▌         | 83/1330 [1:39:04<23:07:41, 66.77s/it]  6%|▋         | 84/1330 [1:39:42<20:10:10, 58.28s/it]  6%|▋         | 85/1330 [1:40:17<17:46:09, 51.38s/it]  6%|▋         | 86/1330 [1:41:01<16:54:02, 48.91s/it]  7%|▋         | 87/1330 [1:41:52<17:05:57, 49.52s/it]  7%|▋         | 88/1330 [1:43:16<20:41:29, 59.98s/it]  7%|▋         | 89/1330 [1:44:03<19:23:42, 56.26s/it]  7%|▋         | 90/1330 [1:51:46<61:24:26, 178.28s/it]  7%|▋         | 91/1330 [1:53:25<53:09:41, 154.46s/it]  7%|▋         | 92/1330 [1:54:11<41:55:09, 121.90s/it]  7%|▋         | 93/1330 [1:55:15<35:52:09, 104.39s/it]  7%|▋         | 94/1330 [1:56:01<29:49:17, 86.86s/it]   7%|▋         | 95/1330 [1:56:52<26:05:24, 76.05s/it]  7%|▋         | 96/1330 [1:57:46<23:51:01, 69.58s/it]  7%|▋         | 97/1330 [1:58:56<23:54:30, 69.81s/it]  7%|▋         | 98/1330 [2:00:53<28:42:40, 83.90s/it]  7%|▋         | 99/1330 [2:01:46<25:30:38, 74.60s/it]  8%|▊         | 100/1330 [2:02:50<24:24:52, 71.46s/it]  8%|▊         | 101/1330 [2:05:54<35:56:25, 105.28s/it]  8%|▊         | 102/1330 [2:06:55<31:19:01, 91.81s/it]   8%|▊         | 103/1330 [2:11:07<47:40:58, 139.90s/it]  8%|▊         | 104/1330 [2:11:59<38:43:24, 113.71s/it]  8%|▊         | 105/1330 [2:13:15<34:50:29, 102.39s/it]  8%|▊         | 106/1330 [2:14:08<29:43:05, 87.41s/it]   8%|▊         | 107/1330 [2:17:42<42:37:34, 125.47s/it]  8%|▊         | 108/1330 [2:18:38<35:27:50, 104.48s/it]  8%|▊         | 109/1330 [2:19:31<30:11:08, 89.00s/it]   8%|▊         | 110/1330 [2:20:22<26:17:53, 77.60s/it]  8%|▊         | 111/1330 [2:22:10<29:26:57, 86.97s/it]  8%|▊         | 112/1330 [2:26:12<45:08:38, 133.43s/it]  8%|▊         | 113/1330 [2:27:13<37:46:43, 111.75s/it]  9%|▊         | 114/1330 [2:28:38<34:58:25, 103.54s/it]  9%|▊         | 115/1330 [2:29:56<32:21:16, 95.87s/it]   9%|▊         | 116/1330 [2:32:04<35:34:46, 105.51s/it]  9%|▉         | 117/1330 [2:33:04<31:01:15, 92.07s/it]   9%|▉         | 118/1330 [2:33:56<26:51:13, 79.76s/it]  9%|▉         | 119/1330 [2:34:48<24:02:02, 71.45s/it]  9%|▉         | 120/1330 [2:39:05<42:43:45, 127.13s/it]  9%|▉         | 121/1330 [2:40:04<35:50:07, 106.71s/it]  9%|▉         | 122/1330 [2:41:02<30:56:27, 92.21s/it]   9%|▉         | 123/1330 [2:42:08<28:15:22, 84.28s/it]  9%|▉         | 124/1330 [2:45:29<39:57:24, 119.27s/it]  9%|▉         | 125/1330 [2:46:45<35:37:50, 106.45s/it]  9%|▉         | 126/1330 [2:47:28<29:09:24, 87.18s/it]  10%|▉         | 127/1330 [2:48:16<25:15:22, 75.58s/it] 10%|▉         | 128/1330 [2:51:00<34:07:19, 102.20s/it] 10%|▉         | 129/1330 [2:51:49<28:42:51, 86.07s/it]  10%|▉         | 130/1330 [2:52:57<26:52:18, 80.62s/it] 10%|▉         | 131/1330 [2:53:52<24:19:52, 73.05s/it] 10%|▉         | 132/1330 [2:56:51<34:51:43, 104.76s/it] 10%|█         | 133/1330 [3:04:09<68:05:43, 204.80s/it] 10%|█         | 134/1330 [3:05:37<56:23:39, 169.75s/it] 10%|█         | 135/1330 [3:06:39<45:37:29, 137.45s/it] 10%|█         | 136/1330 [3:07:43<38:14:04, 115.28s/it] 10%|█         | 137/1330 [3:09:10<35:27:50, 107.02s/it] 10%|█         | 138/1330 [3:10:51<34:46:46, 105.04s/it] 10%|█         | 139/1330 [3:12:02<31:25:46, 95.00s/it]  11%|█         | 140/1330 [3:12:57<27:23:54, 82.89s/it] 11%|█         | 141/1330 [3:13:55<24:56:41, 75.53s/it] 11%|█         | 142/1330 [3:15:00<23:50:41, 72.26s/it] 11%|█         | 143/1330 [3:16:01<22:43:15, 68.91s/it] 11%|█         | 144/1330 [3:17:17<23:24:43, 71.07s/it] 11%|█         | 145/1330 [3:21:10<39:21:18, 119.56s/it] 11%|█         | 146/1330 [3:22:35<35:56:04, 109.26s/it] 11%|█         | 147/1330 [3:24:29<36:21:24, 110.64s/it] 11%|█         | 148/1330 [3:25:53<33:39:56, 102.53s/it] 11%|█         | 149/1330 [3:28:05<36:34:02, 111.47s/it] 11%|█▏        | 150/1330 [3:30:02<37:05:49, 113.18s/it] 11%|█▏        | 151/1330 [3:31:03<31:54:05, 97.41s/it]  11%|█▏        | 152/1330 [3:31:56<27:30:45, 84.08s/it] 12%|█▏        | 153/1330 [3:32:42<23:45:05, 72.65s/it] 12%|█▏        | 154/1330 [3:33:29<21:15:46, 65.09s/it] 12%|█▏        | 155/1330 [3:34:24<20:13:03, 61.94s/it] 12%|█▏        | 156/1330 [3:36:11<24:36:37, 75.47s/it] 12%|█▏        | 157/1330 [3:37:11<23:07:16, 70.96s/it] 12%|█▏        | 158/1330 [3:38:45<25:23:10, 77.98s/it] 12%|█▏        | 159/1330 [3:40:13<26:16:34, 80.78s/it] 12%|█▏        | 160/1330 [3:41:08<23:44:30, 73.05s/it] 12%|█▏        | 161/1330 [3:42:06<22:14:27, 68.49s/it] 12%|█▏        | 162/1330 [3:42:59<20:46:08, 64.01s/it] 12%|█▏        | 163/1330 [3:51:45<65:40:10, 202.58s/it] 12%|█▏        | 164/1330 [3:53:45<57:32:29, 177.66s/it] 12%|█▏        | 165/1330 [3:55:34<50:54:14, 157.30s/it] 12%|█▏        | 166/1330 [3:57:31<46:56:40, 145.19s/it] 13%|█▎        | 167/1330 [3:58:30<38:31:03, 119.23s/it] 13%|█▎        | 168/1330 [3:59:25<32:16:45, 100.00s/it] 13%|█▎        | 169/1330 [4:00:29<28:47:50, 89.29s/it]  13%|█▎        | 170/1330 [4:01:55<28:25:04, 88.19s/it] 13%|█▎        | 171/1330 [4:03:07<26:49:10, 83.31s/it] 13%|█▎        | 172/1330 [4:05:37<33:11:25, 103.18s/it] 13%|█▎        | 173/1330 [4:06:35<28:53:01, 89.87s/it]  13%|█▎        | 174/1330 [4:08:05<28:51:02, 89.85s/it] 13%|█▎        | 175/1330 [4:08:57<25:07:02, 78.29s/it] 13%|█▎        | 176/1330 [4:09:58<23:28:38, 73.24s/it] 13%|█▎        | 177/1330 [4:10:55<21:53:00, 68.33s/it] 13%|█▎        | 178/1330 [4:11:54<20:56:51, 65.46s/it] 13%|█▎        | 179/1330 [4:13:51<25:52:40, 80.94s/it] 14%|█▎        | 180/1330 [4:14:47<23:30:32, 73.59s/it] 14%|█▎        | 181/1330 [4:15:43<21:48:22, 68.32s/it] 14%|█▎        | 182/1330 [4:16:50<21:37:03, 67.79s/it] 14%|█▍        | 183/1330 [4:19:50<32:19:20, 101.45s/it] 14%|█▍        | 184/1330 [4:20:50<28:22:08, 89.12s/it]  14%|█▍        | 185/1330 [4:21:37<24:18:06, 76.41s/it] 14%|█▍        | 186/1330 [4:22:39<22:57:16, 72.23s/it] 14%|█▍        | 187/1330 [4:23:46<22:25:11, 70.61s/it] 14%|█▍        | 188/1330 [4:24:36<20:24:07, 64.31s/it] 14%|█▍        | 189/1330 [4:25:31<19:29:26, 61.50s/it] 14%|█▍        | 190/1330 [4:26:28<19:07:27, 60.39s/it] 14%|█▍        | 191/1330 [4:27:48<20:53:46, 66.05s/it] 14%|█▍        | 192/1330 [4:28:39<19:29:34, 61.66s/it] 15%|█▍        | 193/1330 [4:30:59<26:52:31, 85.09s/it] 15%|█▍        | 194/1330 [4:31:54<24:02:55, 76.21s/it] 15%|█▍        | 195/1330 [4:32:42<21:17:51, 67.55s/it] 15%|█▍        | 196/1330 [4:33:27<19:07:43, 60.73s/it] 15%|█▍        | 197/1330 [4:35:07<22:53:50, 72.75s/it] 15%|█▍        | 198/1330 [4:35:56<20:34:15, 65.42s/it] 15%|█▍        | 199/1330 [4:43:38<57:58:05, 184.51s/it] 15%|█▌        | 200/1330 [4:47:14<60:52:24, 193.93s/it] 15%|█▌        | 201/1330 [4:48:58<52:23:18, 167.05s/it] 15%|█▌        | 202/1330 [4:50:53<47:27:24, 151.46s/it] 15%|█▌        | 203/1330 [4:51:51<38:38:51, 123.45s/it] 15%|█▌        | 204/1330 [4:52:42<31:48:02, 101.67s/it] 15%|█▌        | 205/1330 [4:53:25<26:15:18, 84.02s/it]  15%|█▌        | 206/1330 [4:54:07<22:17:46, 71.41s/it] 16%|█▌        | 207/1330 [4:59:51<47:46:57, 153.18s/it] 16%|█▌        | 208/1330 [5:00:51<38:59:04, 125.08s/it] 16%|█▌        | 209/1330 [5:01:30<30:54:32, 99.26s/it]  16%|█▌        | 210/1330 [5:02:06<25:03:05, 80.52s/it] 16%|█▌        | 211/1330 [5:03:15<23:54:26, 76.91s/it] 16%|█▌        | 212/1330 [5:04:00<20:54:26, 67.32s/it] 16%|█▌        | 213/1330 [5:04:45<18:48:29, 60.62s/it] 16%|█▌        | 214/1330 [5:05:34<17:41:43, 57.08s/it] 16%|█▌        | 215/1330 [5:06:12<15:55:10, 51.40s/it] 16%|█▌        | 216/1330 [5:07:16<17:04:27, 55.18s/it] 16%|█▋        | 217/1330 [5:08:13<17:14:01, 55.74s/it] 16%|█▋        | 218/1330 [5:09:16<17:52:08, 57.85s/it] 16%|█▋        | 219/1330 [5:16:03<50:11:49, 162.66s/it] 17%|█▋        | 220/1330 [5:16:57<40:08:31, 130.19s/it] 17%|█▋        | 221/1330 [5:19:18<41:02:07, 133.21s/it] 17%|█▋        | 222/1330 [5:20:17<34:09:35, 110.99s/it] 17%|█▋        | 223/1330 [5:24:07<45:10:33, 146.91s/it] 17%|█▋        | 224/1330 [5:25:00<36:29:16, 118.77s/it] 17%|█▋        | 225/1330 [5:25:49<29:58:15, 97.64s/it]  17%|█▋        | 226/1330 [5:29:54<43:32:18, 141.97s/it] 17%|█▋        | 227/1330 [5:31:18<38:10:47, 124.61s/it] 17%|█▋        | 228/1330 [5:32:51<35:13:20, 115.06s/it] 17%|█▋        | 229/1330 [5:34:04<31:21:25, 102.53s/it] 17%|█▋        | 230/1330 [5:34:59<26:57:02, 88.20s/it]  17%|█▋        | 231/1330 [5:35:47<23:15:00, 76.16s/it] 17%|█▋        | 232/1330 [5:36:35<20:39:52, 67.75s/it] 18%|█▊        | 233/1330 [5:43:11<50:38:53, 166.21s/it] 18%|█▊        | 234/1330 [5:43:59<39:46:08, 130.63s/it] 18%|█▊        | 235/1330 [5:44:51<32:31:09, 106.91s/it] 18%|█▊        | 236/1330 [5:45:50<28:09:35, 92.66s/it]  18%|█▊        | 237/1330 [5:46:34<23:42:36, 78.09s/it] 18%|█▊        | 238/1330 [5:48:43<28:19:24, 93.37s/it] 18%|█▊        | 239/1330 [5:49:53<26:08:43, 86.27s/it] 18%|█▊        | 240/1330 [5:50:59<24:20:18, 80.38s/it] 18%|█▊        | 241/1330 [5:51:48<21:24:03, 70.75s/it] 18%|█▊        | 242/1330 [5:53:23<23:39:12, 78.27s/it] 18%|█▊        | 243/1330 [5:54:14<21:05:47, 69.87s/it] 18%|█▊        | 244/1330 [5:54:59<18:49:49, 62.42s/it] 18%|█▊        | 245/1330 [5:55:53<18:03:48, 59.93s/it] 18%|█▊        | 246/1330 [5:57:21<20:34:54, 68.35s/it] 19%|█▊        | 247/1330 [5:58:33<20:52:59, 69.42s/it] 19%|█▊        | 248/1330 [5:59:32<19:56:34, 66.35s/it] 19%|█▊        | 249/1330 [6:00:34<19:32:57, 65.10s/it] 19%|█▉        | 250/1330 [6:01:29<18:38:46, 62.15s/it] 19%|█▉        | 251/1330 [6:03:55<26:07:08, 87.14s/it] 19%|█▉        | 252/1330 [6:12:51<66:27:23, 221.93s/it] 19%|█▉        | 253/1330 [6:14:46<56:47:56, 189.86s/it] 19%|█▉        | 254/1330 [6:18:01<57:12:37, 191.41s/it] 19%|█▉        | 255/1330 [6:19:06<45:46:45, 153.31s/it] 19%|█▉        | 256/1330 [6:20:13<38:00:04, 127.38s/it] 19%|█▉        | 257/1330 [6:27:35<66:08:11, 221.89s/it] 19%|█▉        | 258/1330 [6:28:38<51:49:24, 174.03s/it] 19%|█▉        | 259/1330 [6:29:20<40:01:26, 134.53s/it] 20%|█▉        | 260/1330 [6:30:03<31:48:49, 107.04s/it] 20%|█▉        | 261/1330 [6:30:44<25:54:50, 87.27s/it]  20%|█▉        | 262/1330 [6:31:30<22:11:39, 74.81s/it] 20%|█▉        | 263/1330 [6:33:13<24:42:14, 83.35s/it] 20%|█▉        | 264/1330 [6:34:17<22:57:24, 77.53s/it] 20%|█▉        | 265/1330 [6:35:20<21:38:34, 73.16s/it] 20%|██        | 266/1330 [6:36:10<19:33:49, 66.19s/it] 20%|██        | 267/1330 [6:37:04<18:30:50, 62.70s/it] 20%|██        | 268/1330 [6:41:32<36:40:44, 124.34s/it] 20%|██        | 269/1330 [6:42:38<31:28:34, 106.80s/it] 20%|██        | 270/1330 [6:43:28<26:25:59, 89.77s/it]  20%|██        | 271/1330 [6:44:48<25:30:17, 86.70s/it] 20%|██        | 272/1330 [6:45:50<23:20:38, 79.43s/it] 21%|██        | 273/1330 [6:48:28<30:10:08, 102.75s/it] 21%|██        | 274/1330 [6:49:37<27:10:28, 92.64s/it]  21%|██        | 275/1330 [6:50:41<24:42:16, 84.30s/it] 21%|██        | 276/1330 [6:53:16<30:52:50, 105.47s/it] 21%|██        | 277/1330 [6:55:21<32:29:44, 111.10s/it] 21%|██        | 278/1330 [6:56:24<28:18:43, 96.89s/it]  21%|██        | 279/1330 [6:57:32<25:45:31, 88.23s/it] 21%|██        | 280/1330 [6:59:24<27:49:17, 95.39s/it] 21%|██        | 281/1330 [7:00:25<24:47:09, 85.06s/it] 21%|██        | 282/1330 [7:01:29<22:52:38, 78.59s/it] 21%|██▏       | 283/1330 [7:02:28<21:08:43, 72.71s/it] 21%|██▏       | 284/1330 [7:03:33<20:28:40, 70.48s/it] 21%|██▏       | 285/1330 [7:04:53<21:15:27, 73.23s/it] 22%|██▏       | 286/1330 [7:06:19<22:23:23, 77.21s/it] 22%|██▏       | 287/1330 [7:07:43<22:56:22, 79.18s/it] 22%|██▏       | 288/1330 [7:08:40<20:59:41, 72.53s/it] 22%|██▏       | 289/1330 [7:09:47<20:29:49, 70.88s/it] 22%|██▏       | 290/1330 [7:13:17<32:29:19, 112.46s/it] 22%|██▏       | 291/1330 [7:14:39<29:52:17, 103.50s/it] 22%|██▏       | 292/1330 [7:15:43<26:26:50, 91.72s/it]  22%|██▏       | 293/1330 [7:17:24<27:08:53, 94.25s/it] 22%|██▏       | 294/1330 [7:19:11<28:17:17, 98.30s/it] 22%|██▏       | 295/1330 [7:20:04<24:17:14, 84.48s/it] 22%|██▏       | 296/1330 [7:20:53<21:16:18, 74.06s/it] 22%|██▏       | 297/1330 [7:21:40<18:55:26, 65.95s/it] 22%|██▏       | 298/1330 [7:22:29<17:26:36, 60.85s/it] 22%|██▏       | 299/1330 [7:23:37<18:01:47, 62.96s/it] 23%|██▎       | 300/1330 [7:24:46<18:29:53, 64.65s/it] 23%|██▎       | 301/1330 [7:25:38<17:22:48, 60.81s/it] 23%|██▎       | 302/1330 [7:26:58<19:02:28, 66.68s/it] 23%|██▎       | 303/1330 [7:28:19<20:12:42, 70.85s/it] 23%|██▎       | 304/1330 [7:29:11<18:38:18, 65.40s/it] 23%|██▎       | 305/1330 [7:30:03<17:28:28, 61.37s/it] 23%|██▎       | 306/1330 [7:31:46<21:01:02, 73.89s/it] 23%|██▎       | 307/1330 [7:32:39<19:11:06, 67.51s/it] 23%|██▎       | 308/1330 [7:33:50<19:28:01, 68.57s/it] 23%|██▎       | 309/1330 [7:36:23<26:35:38, 93.77s/it] 23%|██▎       | 310/1330 [7:37:15<23:03:28, 81.38s/it] 23%|██▎       | 311/1330 [7:38:17<21:23:42, 75.59s/it] 23%|██▎       | 312/1330 [7:39:59<23:37:31, 83.55s/it] 24%|██▎       | 313/1330 [7:40:48<20:40:59, 73.21s/it] 24%|██▎       | 314/1330 [7:41:52<19:50:09, 70.29s/it] 24%|██▎       | 315/1330 [7:43:48<23:39:51, 83.93s/it] 24%|██▍       | 316/1330 [7:44:54<22:12:20, 78.84s/it] 24%|██▍       | 317/1330 [7:45:56<20:43:58, 73.68s/it] 24%|██▍       | 318/1330 [7:48:52<29:19:12, 104.30s/it] 24%|██▍       | 319/1330 [7:50:23<28:12:23, 100.44s/it] 24%|██▍       | 320/1330 [7:53:00<32:57:09, 117.45s/it] 24%|██▍       | 321/1330 [7:53:56<27:45:17, 99.03s/it]  24%|██▍       | 322/1330 [7:55:38<27:54:14, 99.66s/it] 24%|██▍       | 323/1330 [7:56:47<25:22:23, 90.71s/it] 24%|██▍       | 324/1330 [7:58:09<24:32:48, 87.84s/it] 24%|██▍       | 325/1330 [7:59:53<25:56:14, 92.91s/it] 25%|██▍       | 326/1330 [8:01:59<28:38:19, 102.69s/it] 25%|██▍       | 327/1330 [8:02:59<25:01:35, 89.83s/it]  25%|██▍       | 328/1330 [8:03:57<22:24:21, 80.50s/it] 25%|██▍       | 329/1330 [8:04:45<19:37:36, 70.59s/it] 25%|██▍       | 330/1330 [8:06:20<21:41:14, 78.07s/it] 25%|██▍       | 331/1330 [8:07:22<20:19:23, 73.24s/it] 25%|██▍       | 332/1330 [8:09:32<24:57:19, 90.02s/it] 25%|██▌       | 333/1330 [8:18:23<61:34:22, 222.33s/it] 25%|██▌       | 334/1330 [8:19:26<48:18:14, 174.59s/it] 25%|██▌       | 335/1330 [8:20:31<39:11:46, 141.82s/it] 25%|██▌       | 336/1330 [8:21:43<33:19:55, 120.72s/it] 25%|██▌       | 337/1330 [8:22:32<27:25:45, 99.44s/it]  25%|██▌       | 338/1330 [8:23:11<22:20:11, 81.06s/it] 25%|██▌       | 339/1330 [8:24:00<19:42:12, 71.58s/it] 26%|██▌       | 340/1330 [8:25:05<19:08:25, 69.60s/it] 26%|██▌       | 341/1330 [8:25:57<17:39:19, 64.27s/it] 26%|██▌       | 342/1330 [8:27:04<17:53:47, 65.21s/it] 26%|██▌       | 343/1330 [8:27:56<16:46:17, 61.17s/it] 26%|██▌       | 344/1330 [8:29:12<18:00:08, 65.73s/it] 26%|██▌       | 345/1330 [8:30:19<18:05:20, 66.11s/it] 26%|██▌       | 346/1330 [8:31:25<18:01:02, 65.92s/it] 26%|██▌       | 347/1330 [8:32:37<18:32:29, 67.90s/it] 26%|██▌       | 348/1330 [8:34:59<24:34:51, 90.11s/it] 26%|██▌       | 349/1330 [8:36:18<23:36:06, 86.61s/it] 26%|██▋       | 350/1330 [8:37:43<23:25:54, 86.08s/it] 26%|██▋       | 351/1330 [8:38:45<21:28:15, 78.95s/it] 26%|██▋       | 352/1330 [8:39:53<20:34:43, 75.75s/it] 27%|██▋       | 353/1330 [8:41:25<21:53:38, 80.67s/it] 27%|██▋       | 354/1330 [8:42:39<21:17:39, 78.54s/it] 27%|██▋       | 355/1330 [8:52:34<63:13:57, 233.47s/it] 27%|██▋       | 356/1330 [8:53:35<49:10:50, 181.78s/it] 27%|██▋       | 357/1330 [8:55:54<45:40:52, 169.02s/it] 27%|██▋       | 358/1330 [8:56:53<36:44:23, 136.07s/it] 27%|██▋       | 359/1330 [8:59:01<35:59:03, 133.41s/it] 27%|██▋       | 360/1330 [9:00:09<30:40:20, 113.84s/it] 27%|██▋       | 361/1330 [9:01:36<28:27:25, 105.72s/it] 27%|██▋       | 362/1330 [9:03:51<30:51:14, 114.75s/it] 27%|██▋       | 363/1330 [9:05:31<29:38:19, 110.34s/it] 27%|██▋       | 364/1330 [9:07:00<27:50:52, 103.78s/it] 27%|██▋       | 365/1330 [9:10:25<35:59:27, 134.27s/it] 28%|██▊       | 366/1330 [9:14:02<42:33:17, 158.92s/it] 28%|██▊       | 367/1330 [9:15:07<35:00:28, 130.87s/it] 28%|██▊       | 368/1330 [9:16:27<30:51:13, 115.46s/it] 28%|██▊       | 369/1330 [9:17:25<26:13:31, 98.24s/it]  28%|██▊       | 370/1330 [9:18:23<22:57:21, 86.08s/it] 28%|██▊       | 371/1330 [9:23:21<39:54:59, 149.84s/it] 28%|██▊       | 372/1330 [9:25:13<36:52:18, 138.56s/it] 28%|██▊       | 373/1330 [9:26:46<33:12:36, 124.93s/it] 28%|██▊       | 374/1330 [9:28:07<29:40:08, 111.72s/it] 28%|██▊       | 375/1330 [9:29:07<25:28:41, 96.04s/it]  28%|██▊       | 376/1330 [9:30:16<23:20:14, 88.07s/it] 28%|██▊       | 377/1330 [9:31:34<22:31:19, 85.08s/it] 28%|██▊       | 378/1330 [9:32:53<21:57:29, 83.03s/it] 28%|██▊       | 379/1330 [9:34:58<25:19:15, 95.85s/it] 29%|██▊       | 380/1330 [9:36:00<22:37:04, 85.71s/it] 29%|██▊       | 381/1330 [9:37:06<20:57:38, 79.51s/it] 29%|██▊       | 382/1330 [9:42:27<40:03:48, 152.14s/it] 29%|██▉       | 383/1330 [9:43:26<32:37:15, 124.01s/it] 29%|██▉       | 384/1330 [9:44:57<29:59:31, 114.13s/it] 29%|██▉       | 385/1330 [9:56:08<73:48:30, 281.18s/it] 29%|██▉       | 386/1330 [10:02:12<80:15:13, 306.05s/it] 29%|██▉       | 387/1330 [10:03:13<60:57:19, 232.70s/it] 29%|██▉       | 388/1330 [10:04:19<47:47:52, 182.67s/it] 29%|██▉       | 389/1330 [10:05:17<37:55:51, 145.11s/it] 29%|██▉       | 390/1330 [10:09:09<44:45:55, 171.44s/it] 29%|██▉       | 391/1330 [10:10:37<38:11:01, 146.39s/it] 29%|██▉       | 392/1330 [10:12:33<35:42:22, 137.04s/it] 30%|██▉       | 393/1330 [10:13:33<29:41:14, 114.06s/it] 30%|██▉       | 394/1330 [10:14:36<25:39:49, 98.71s/it]  30%|██▉       | 395/1330 [10:15:23<21:37:25, 83.26s/it] 30%|██▉       | 396/1330 [10:16:43<21:17:54, 82.09s/it] 30%|██▉       | 397/1330 [10:18:01<20:57:58, 80.90s/it] 30%|██▉       | 398/1330 [10:19:15<20:26:46, 78.98s/it] 30%|███       | 399/1330 [10:21:55<26:40:34, 103.15s/it] 30%|███       | 400/1330 [10:22:52<23:04:41, 89.33s/it]  30%|███       | 401/1330 [10:24:07<21:58:53, 85.18s/it] 30%|███       | 402/1330 [10:25:10<20:14:19, 78.51s/it] 30%|███       | 403/1330 [10:26:31<20:23:26, 79.19s/it] 30%|███       | 404/1330 [10:27:37<19:23:04, 75.36s/it] 30%|███       | 405/1330 [10:30:10<25:16:53, 98.39s/it] 31%|███       | 406/1330 [10:31:05<21:57:24, 85.55s/it] 31%|███       | 407/1330 [10:32:21<21:10:07, 82.57s/it] 31%|███       | 408/1330 [10:33:29<20:04:09, 78.36s/it] 31%|███       | 409/1330 [10:35:04<21:18:19, 83.28s/it] 31%|███       | 410/1330 [10:36:25<21:08:26, 82.72s/it] 31%|███       | 411/1330 [10:37:31<19:49:31, 77.66s/it] 31%|███       | 412/1330 [10:39:27<22:41:34, 88.99s/it] 31%|███       | 413/1330 [10:41:11<23:50:36, 93.61s/it] 31%|███       | 414/1330 [10:42:09<21:04:29, 82.83s/it] 31%|███       | 415/1330 [10:43:15<19:47:45, 77.89s/it] 31%|███▏      | 416/1330 [10:44:14<18:18:20, 72.10s/it] 31%|███▏      | 417/1330 [10:45:25<18:14:43, 71.94s/it] 31%|███▏      | 418/1330 [10:46:17<16:41:31, 65.89s/it] 32%|███▏      | 419/1330 [10:47:19<16:21:20, 64.63s/it] 32%|███▏      | 420/1330 [10:48:33<17:03:48, 67.50s/it] 32%|███▏      | 421/1330 [10:49:29<16:11:46, 64.14s/it] 32%|███▏      | 422/1330 [10:50:25<15:31:23, 61.55s/it] 32%|███▏      | 423/1330 [10:51:14<14:36:22, 57.97s/it] 32%|███▏      | 424/1330 [10:52:03<13:53:45, 55.22s/it] 32%|███▏      | 425/1330 [10:53:35<16:36:45, 66.08s/it] 32%|███▏      | 426/1330 [10:55:03<18:14:05, 72.62s/it] 32%|███▏      | 427/1330 [10:56:00<17:03:06, 67.98s/it] 32%|███▏      | 428/1330 [11:02:42<42:11:17, 168.38s/it] 32%|███▏      | 429/1330 [11:06:19<45:47:26, 182.96s/it] 32%|███▏      | 430/1330 [11:07:24<36:52:57, 147.53s/it] 32%|███▏      | 431/1330 [11:08:37<31:14:16, 125.09s/it] 32%|███▏      | 432/1330 [11:10:06<28:32:48, 114.44s/it] 33%|███▎      | 433/1330 [11:15:44<45:11:14, 181.35s/it] 33%|███▎      | 434/1330 [11:16:50<36:30:22, 146.68s/it] 33%|███▎      | 435/1330 [11:17:41<29:19:05, 117.93s/it] 33%|███▎      | 436/1330 [11:18:43<25:09:19, 101.30s/it] 33%|███▎      | 437/1330 [11:22:59<36:36:47, 147.60s/it] 33%|███▎      | 438/1330 [11:24:07<30:41:04, 123.84s/it] 33%|███▎      | 439/1330 [11:24:59<25:18:26, 102.25s/it] 33%|███▎      | 440/1330 [11:25:56<21:54:27, 88.61s/it]  33%|███▎      | 441/1330 [11:26:51<19:23:14, 78.51s/it] 33%|███▎      | 442/1330 [11:27:41<17:17:33, 70.10s/it] 33%|███▎      | 443/1330 [11:29:21<19:25:55, 78.87s/it] 33%|███▎      | 444/1330 [11:30:26<18:27:27, 75.00s/it] 33%|███▎      | 445/1330 [11:31:18<16:42:07, 67.94s/it] 34%|███▎      | 446/1330 [11:32:26<16:42:09, 68.02s/it] 34%|███▎      | 447/1330 [11:33:24<15:56:39, 65.01s/it] 34%|███▎      | 448/1330 [11:34:15<14:53:44, 60.80s/it] 34%|███▍      | 449/1330 [11:39:45<34:38:06, 141.53s/it] 34%|███▍      | 450/1330 [11:40:33<27:45:20, 113.55s/it] 34%|███▍      | 451/1330 [11:41:32<23:43:16, 97.15s/it]  34%|███▍      | 452/1330 [11:42:51<22:23:19, 91.80s/it] 34%|███▍      | 453/1330 [11:43:59<20:35:32, 84.53s/it] 34%|███▍      | 454/1330 [11:44:55<18:29:24, 75.99s/it] 34%|███▍      | 455/1330 [11:46:30<19:50:45, 81.65s/it] 34%|███▍      | 456/1330 [11:47:26<17:55:47, 73.85s/it] 34%|███▍      | 457/1330 [11:48:26<16:54:00, 69.69s/it] 34%|███▍      | 458/1330 [11:49:21<15:50:19, 65.39s/it] 35%|███▍      | 459/1330 [11:51:17<19:30:30, 80.63s/it] 35%|███▍      | 460/1330 [11:52:16<17:52:53, 73.99s/it] 35%|███▍      | 461/1330 [12:01:55<54:27:57, 225.64s/it] 35%|███▍      | 462/1330 [12:02:55<42:25:35, 175.96s/it] 35%|███▍      | 463/1330 [12:03:51<33:41:49, 139.92s/it] 35%|███▍      | 464/1330 [12:05:01<28:34:42, 118.80s/it] 35%|███▍      | 465/1330 [12:05:57<24:01:45, 100.01s/it] 35%|███▌      | 466/1330 [12:06:48<20:31:44, 85.54s/it]  35%|███▌      | 467/1330 [12:10:19<29:30:48, 123.11s/it] 35%|███▌      | 468/1330 [12:11:34<26:00:36, 108.63s/it] 35%|███▌      | 469/1330 [12:13:39<27:08:00, 113.45s/it] 35%|███▌      | 470/1330 [12:15:02<24:55:50, 104.36s/it] 35%|███▌      | 471/1330 [12:16:00<21:35:26, 90.48s/it]  35%|███▌      | 472/1330 [12:16:47<18:25:20, 77.30s/it] 36%|███▌      | 473/1330 [12:18:37<20:46:41, 87.28s/it] 36%|███▌      | 474/1330 [12:19:34<18:33:09, 78.02s/it] 36%|███▌      | 475/1330 [12:20:27<16:46:06, 70.60s/it] 36%|███▌      | 476/1330 [12:21:36<16:37:21, 70.07s/it] 36%|███▌      | 477/1330 [12:22:26<15:10:15, 64.03s/it] 36%|███▌      | 478/1330 [12:23:56<17:02:04, 71.98s/it] 36%|███▌      | 479/1330 [12:25:19<17:48:14, 75.32s/it] 36%|███▌      | 480/1330 [12:26:30<17:25:35, 73.81s/it] 36%|███▌      | 481/1330 [12:29:21<24:17:27, 103.00s/it] 36%|███▌      | 482/1330 [12:30:11<20:33:03, 87.24s/it]  36%|███▋      | 483/1330 [12:31:48<21:14:21, 90.27s/it] 36%|███▋      | 484/1330 [12:32:37<18:14:19, 77.61s/it] 36%|███▋      | 485/1330 [12:34:19<19:57:16, 85.01s/it] 37%|███▋      | 486/1330 [12:35:28<18:49:50, 80.32s/it] 37%|███▋      | 487/1330 [12:36:49<18:49:38, 80.40s/it] 37%|███▋      | 488/1330 [12:37:49<17:21:17, 74.20s/it] 37%|███▋      | 489/1330 [12:43:06<34:24:56, 147.32s/it] 37%|███▋      | 490/1330 [12:44:23<29:23:43, 125.98s/it] 37%|███▋      | 491/1330 [12:45:25<24:53:56, 106.84s/it] 37%|███▋      | 492/1330 [12:46:37<22:26:55, 96.44s/it]  37%|███▋      | 493/1330 [12:47:24<18:58:54, 81.64s/it] 37%|███▋      | 494/1330 [12:49:06<20:21:39, 87.68s/it] 37%|███▋      | 495/1330 [12:50:06<18:27:04, 79.55s/it] 37%|███▋      | 496/1330 [12:51:06<17:03:33, 73.64s/it] 37%|███▋      | 497/1330 [12:52:52<19:15:15, 83.21s/it] 37%|███▋      | 498/1330 [12:53:39<16:43:43, 72.38s/it] 38%|███▊      | 499/1330 [12:58:25<31:29:14, 136.41s/it] 38%|███▊      | 500/1330 [12:59:59<28:29:55, 123.61s/it] 38%|███▊      | 501/1330 [13:03:42<35:23:18, 153.68s/it] 38%|███▊      | 502/1330 [13:04:37<28:30:28, 123.95s/it] 38%|███▊      | 503/1330 [13:10:08<42:44:56, 186.09s/it] 38%|███▊      | 504/1330 [13:11:03<33:42:18, 146.90s/it] 38%|███▊      | 505/1330 [13:11:59<27:23:31, 119.53s/it] 38%|███▊      | 506/1330 [13:13:14<24:18:33, 106.21s/it] 38%|███▊      | 507/1330 [13:14:13<20:59:56, 91.85s/it]  38%|███▊      | 508/1330 [13:16:15<23:04:38, 101.07s/it] 38%|███▊      | 509/1330 [13:17:17<20:23:34, 89.42s/it]  38%|███▊      | 510/1330 [13:18:09<17:45:31, 77.97s/it] 38%|███▊      | 511/1330 [13:18:54<15:28:38, 68.03s/it] 38%|███▊      | 512/1330 [13:20:21<16:45:20, 73.74s/it] 39%|███▊      | 513/1330 [13:21:37<16:55:52, 74.60s/it] 39%|███▊      | 514/1330 [13:24:08<22:05:39, 97.47s/it] 39%|███▊      | 515/1330 [13:25:14<19:55:41, 88.03s/it] 39%|███▉      | 516/1330 [13:26:44<20:00:24, 88.48s/it] 39%|███▉      | 517/1330 [13:27:37<17:37:15, 78.03s/it] 39%|███▉      | 518/1330 [13:28:51<17:17:07, 76.64s/it] 39%|███▉      | 519/1330 [13:30:20<18:08:30, 80.53s/it] 39%|███▉      | 520/1330 [13:34:05<27:53:25, 123.96s/it] 39%|███▉      | 521/1330 [13:37:51<34:42:07, 154.42s/it] 39%|███▉      | 522/1330 [13:39:24<30:32:26, 136.07s/it] 39%|███▉      | 523/1330 [13:40:39<26:21:48, 117.61s/it] 39%|███▉      | 524/1330 [13:41:20<21:11:19, 94.64s/it]  39%|███▉      | 525/1330 [13:42:25<19:11:29, 85.83s/it] 40%|███▉      | 526/1330 [13:43:13<16:36:32, 74.37s/it] 40%|███▉      | 527/1330 [13:45:13<19:38:07, 88.03s/it] 40%|███▉      | 528/1330 [13:46:14<17:48:41, 79.95s/it] 40%|███▉      | 529/1330 [13:47:15<16:32:37, 74.35s/it] 40%|███▉      | 530/1330 [13:48:33<16:46:34, 75.49s/it] 40%|███▉      | 531/1330 [13:49:18<14:41:43, 66.21s/it] 40%|████      | 532/1330 [13:50:35<15:25:19, 69.57s/it] 40%|████      | 533/1330 [13:51:32<14:33:55, 65.79s/it] 40%|████      | 534/1330 [13:52:25<13:41:44, 61.94s/it] 40%|████      | 535/1330 [13:53:18<13:05:21, 59.27s/it] 40%|████      | 536/1330 [14:01:57<43:27:05, 197.01s/it] 40%|████      | 537/1330 [14:02:51<33:58:19, 154.22s/it] 40%|████      | 538/1330 [14:04:23<29:49:31, 135.57s/it] 41%|████      | 539/1330 [14:06:00<27:14:34, 123.99s/it] 41%|████      | 540/1330 [14:06:54<22:35:31, 102.95s/it] 41%|████      | 541/1330 [14:10:10<28:43:44, 131.08s/it] 41%|████      | 542/1330 [14:11:07<23:46:12, 108.59s/it] 41%|████      | 543/1330 [14:12:10<20:45:29, 94.95s/it]  41%|████      | 544/1330 [14:14:09<22:20:26, 102.32s/it] 41%|████      | 545/1330 [14:15:20<20:14:13, 92.81s/it]  41%|████      | 546/1330 [14:16:16<17:49:36, 81.86s/it] 41%|████      | 547/1330 [14:17:41<17:58:35, 82.65s/it] 41%|████      | 548/1330 [14:19:21<19:05:50, 87.92s/it] 41%|████▏     | 549/1330 [14:20:31<17:54:50, 82.57s/it] 41%|████▏     | 550/1330 [14:21:25<16:02:51, 74.07s/it] 41%|████▏     | 551/1330 [14:22:09<14:03:45, 64.99s/it] 42%|████▏     | 552/1330 [14:23:25<14:46:34, 68.37s/it] 42%|████▏     | 553/1330 [14:24:26<14:16:55, 66.17s/it] 42%|████▏     | 554/1330 [14:25:22<13:35:30, 63.05s/it] 42%|████▏     | 555/1330 [14:28:06<20:03:51, 93.20s/it] 42%|████▏     | 556/1330 [14:30:48<24:30:40, 114.01s/it] 42%|████▏     | 557/1330 [14:31:32<19:56:48, 92.90s/it]  42%|████▏     | 558/1330 [14:33:09<20:11:49, 94.18s/it] 42%|████▏     | 559/1330 [14:36:10<25:44:24, 120.19s/it] 42%|████▏     | 560/1330 [14:37:06<21:34:03, 100.84s/it] 42%|████▏     | 561/1330 [14:37:38<17:10:34, 80.41s/it]  42%|████▏     | 562/1330 [14:38:19<14:37:19, 68.54s/it] 42%|████▏     | 563/1330 [14:39:00<12:49:05, 60.16s/it] 42%|████▏     | 564/1330 [14:40:17<13:54:54, 65.40s/it] 42%|████▏     | 565/1330 [14:44:45<26:48:33, 126.16s/it] 43%|████▎     | 566/1330 [14:45:46<22:34:51, 106.40s/it] 43%|████▎     | 567/1330 [14:46:18<17:50:31, 84.18s/it]  43%|████▎     | 568/1330 [14:48:01<19:00:48, 89.83s/it] 43%|████▎     | 569/1330 [14:48:36<15:29:46, 73.31s/it] 43%|████▎     | 570/1330 [14:49:12<13:09:22, 62.32s/it] 43%|████▎     | 571/1330 [14:49:58<12:03:14, 57.17s/it] 43%|████▎     | 572/1330 [14:50:20<9:52:26, 46.90s/it]  43%|████▎     | 573/1330 [14:50:50<8:44:46, 41.59s/it] 43%|████▎     | 574/1330 [14:51:20<8:00:33, 38.14s/it] 43%|████▎     | 575/1330 [14:52:06<8:28:56, 40.45s/it] 43%|████▎     | 576/1330 [14:52:41<8:10:45, 39.05s/it] 43%|████▎     | 577/1330 [14:53:02<6:58:59, 33.39s/it] 43%|████▎     | 578/1330 [14:53:25<6:19:54, 30.31s/it] 44%|████▎     | 579/1330 [14:53:49<5:57:17, 28.55s/it] 44%|████▎     | 580/1330 [14:54:07<5:17:04, 25.37s/it] 44%|████▎     | 581/1330 [14:55:07<7:26:52, 35.80s/it] 44%|████▍     | 582/1330 [14:55:35<6:57:14, 33.47s/it] 44%|████▍     | 583/1330 [14:56:01<6:29:28, 31.28s/it] 44%|████▍     | 584/1330 [14:56:17<5:30:09, 26.55s/it] 44%|████▍     | 585/1330 [14:56:47<5:42:01, 27.55s/it] 44%|████▍     | 586/1330 [14:56:58<4:40:54, 22.65s/it] 44%|████▍     | 587/1330 [14:57:10<4:02:02, 19.55s/it] 44%|████▍     | 588/1330 [14:57:31<4:05:26, 19.85s/it] 44%|████▍     | 589/1330 [14:57:53<4:12:32, 20.45s/it] 44%|████▍     | 590/1330 [14:58:14<4:14:20, 20.62s/it] 44%|████▍     | 591/1330 [14:58:36<4:21:23, 21.22s/it] 45%|████▍     | 592/1330 [14:58:51<3:56:34, 19.23s/it] 45%|████▍     | 593/1330 [14:59:09<3:53:32, 19.01s/it] 45%|████▍     | 594/1330 [14:59:27<3:47:38, 18.56s/it] 45%|████▍     | 595/1330 [15:00:01<4:42:42, 23.08s/it] 45%|████▍     | 596/1330 [15:00:16<4:12:17, 20.62s/it] 45%|████▍     | 597/1330 [15:00:46<4:49:18, 23.68s/it] 45%|████▍     | 598/1330 [15:01:13<4:58:46, 24.49s/it] 45%|████▌     | 599/1330 [15:01:33<4:41:55, 23.14s/it] 45%|████▌     | 600/1330 [15:01:51<4:23:05, 21.62s/it] 45%|████▌     | 601/1330 [15:02:07<4:01:35, 19.88s/it] 45%|████▌     | 602/1330 [15:02:33<4:26:25, 21.96s/it] 45%|████▌     | 603/1330 [15:02:56<4:27:24, 22.07s/it] 45%|████▌     | 604/1330 [15:03:21<4:39:56, 23.14s/it] 45%|████▌     | 605/1330 [15:03:46<4:44:14, 23.52s/it] 46%|████▌     | 606/1330 [15:04:04<4:25:17, 21.99s/it] 46%|████▌     | 607/1330 [15:04:29<4:36:13, 22.92s/it] 46%|████▌     | 608/1330 [15:04:53<4:39:10, 23.20s/it] 46%|████▌     | 609/1330 [15:05:06<4:03:09, 20.24s/it] 46%|████▌     | 610/1330 [15:05:19<3:34:38, 17.89s/it] 46%|████▌     | 611/1330 [15:05:37<3:34:39, 17.91s/it] 46%|████▌     | 612/1330 [15:05:56<3:38:23, 18.25s/it] 46%|████▌     | 613/1330 [15:06:10<3:23:08, 17.00s/it] 46%|████▌     | 614/1330 [15:06:28<3:25:28, 17.22s/it] 46%|████▌     | 615/1330 [15:07:18<5:25:09, 27.29s/it] 46%|████▋     | 616/1330 [15:07:37<4:55:07, 24.80s/it] 46%|████▋     | 617/1330 [15:07:55<4:27:13, 22.49s/it] 46%|████▋     | 618/1330 [15:08:12<4:07:44, 20.88s/it] 47%|████▋     | 619/1330 [15:09:21<7:00:34, 35.49s/it] 47%|████▋     | 620/1330 [15:09:40<6:00:23, 30.46s/it] 47%|████▋     | 621/1330 [15:09:52<4:55:56, 25.04s/it] 47%|████▋     | 622/1330 [15:10:02<4:01:09, 20.44s/it] 47%|████▋     | 623/1330 [15:10:19<3:49:09, 19.45s/it] 47%|████▋     | 624/1330 [15:10:33<3:27:13, 17.61s/it] 47%|████▋     | 625/1330 [15:10:40<2:51:23, 14.59s/it] 47%|████▋     | 626/1330 [15:10:52<2:42:04, 13.81s/it] 47%|████▋     | 627/1330 [15:11:09<2:53:46, 14.83s/it] 47%|████▋     | 628/1330 [15:11:42<3:57:28, 20.30s/it] 47%|████▋     | 629/1330 [15:11:54<3:26:55, 17.71s/it] 47%|████▋     | 630/1330 [15:12:07<3:10:29, 16.33s/it] 47%|████▋     | 631/1330 [15:12:25<3:15:00, 16.74s/it] 48%|████▊     | 632/1330 [15:12:44<3:23:28, 17.49s/it] 48%|████▊     | 633/1330 [15:13:01<3:22:31, 17.43s/it] 48%|████▊     | 634/1330 [15:13:15<3:07:48, 16.19s/it] 48%|████▊     | 635/1330 [15:13:28<2:56:22, 15.23s/it] 48%|████▊     | 636/1330 [15:13:50<3:22:28, 17.50s/it] 48%|████▊     | 637/1330 [15:14:08<3:23:10, 17.59s/it] 48%|████▊     | 638/1330 [15:14:23<3:13:36, 16.79s/it] 48%|████▊     | 639/1330 [15:14:39<3:08:38, 16.38s/it] 48%|████▊     | 640/1330 [15:14:51<2:54:51, 15.20s/it] 48%|████▊     | 641/1330 [15:15:05<2:48:59, 14.72s/it] 48%|████▊     | 642/1330 [15:15:15<2:33:19, 13.37s/it] 48%|████▊     | 643/1330 [15:15:32<2:46:27, 14.54s/it] 48%|████▊     | 644/1330 [15:15:47<2:49:01, 14.78s/it] 48%|████▊     | 645/1330 [15:16:02<2:49:06, 14.81s/it] 49%|████▊     | 646/1330 [15:16:23<3:09:58, 16.66s/it] 49%|████▊     | 647/1330 [15:16:58<4:10:11, 21.98s/it] 49%|████▊     | 648/1330 [15:17:13<3:46:42, 19.94s/it] 49%|████▉     | 649/1330 [15:17:27<3:26:40, 18.21s/it] 49%|████▉     | 650/1330 [15:17:40<3:08:21, 16.62s/it] 49%|████▉     | 651/1330 [15:17:51<2:49:00, 14.93s/it] 49%|████▉     | 652/1330 [15:18:06<2:47:37, 14.83s/it] 49%|████▉     | 653/1330 [15:18:19<2:43:30, 14.49s/it] 49%|████▉     | 654/1330 [15:18:43<3:14:08, 17.23s/it] 49%|████▉     | 655/1330 [15:18:56<2:58:43, 15.89s/it] 49%|████▉     | 656/1330 [15:19:08<2:47:44, 14.93s/it] 49%|████▉     | 657/1330 [15:19:33<3:19:56, 17.83s/it] 49%|████▉     | 658/1330 [15:19:47<3:06:35, 16.66s/it] 50%|████▉     | 659/1330 [15:20:02<3:00:32, 16.14s/it] 50%|████▉     | 660/1330 [15:20:13<2:42:45, 14.58s/it] 50%|████▉     | 661/1330 [15:20:36<3:10:02, 17.04s/it] 50%|████▉     | 662/1330 [15:20:48<2:54:41, 15.69s/it] 50%|████▉     | 663/1330 [15:21:12<3:21:42, 18.14s/it] 50%|████▉     | 664/1330 [15:21:32<3:28:09, 18.75s/it] 50%|█████     | 665/1330 [15:21:50<3:26:23, 18.62s/it] 50%|█████     | 666/1330 [15:21:59<2:52:13, 15.56s/it] 50%|█████     | 667/1330 [15:22:07<2:28:07, 13.40s/it] 50%|█████     | 668/1330 [15:22:23<2:34:59, 14.05s/it] 50%|█████     | 669/1330 [15:22:36<2:31:55, 13.79s/it] 50%|█████     | 670/1330 [15:24:13<7:07:14, 38.84s/it] 50%|█████     | 671/1330 [15:24:28<5:46:28, 31.55s/it] 51%|█████     | 672/1330 [15:25:07<6:11:56, 33.92s/it] 51%|█████     | 673/1330 [15:25:17<4:52:18, 26.69s/it] 51%|█████     | 674/1330 [15:25:37<4:31:10, 24.80s/it] 51%|█████     | 675/1330 [15:25:47<3:40:25, 20.19s/it] 51%|█████     | 676/1330 [15:26:00<3:15:45, 17.96s/it] 51%|█████     | 677/1330 [15:26:18<3:17:37, 18.16s/it] 51%|█████     | 678/1330 [15:26:29<2:54:28, 16.06s/it] 51%|█████     | 679/1330 [15:26:45<2:51:31, 15.81s/it] 51%|█████     | 680/1330 [15:26:56<2:37:00, 14.49s/it] 51%|█████     | 681/1330 [15:27:05<2:18:41, 12.82s/it] 51%|█████▏    | 682/1330 [15:27:22<2:33:33, 14.22s/it] 51%|█████▏    | 683/1330 [15:27:32<2:18:34, 12.85s/it] 51%|█████▏    | 684/1330 [15:27:57<2:57:54, 16.52s/it] 52%|█████▏    | 685/1330 [15:28:10<2:45:28, 15.39s/it] 52%|█████▏    | 686/1330 [15:29:10<5:08:51, 28.77s/it] 52%|█████▏    | 687/1330 [15:29:19<4:04:28, 22.81s/it] 52%|█████▏    | 688/1330 [15:29:53<4:40:02, 26.17s/it] 52%|█████▏    | 689/1330 [15:30:09<4:07:25, 23.16s/it] 52%|█████▏    | 690/1330 [15:30:25<3:45:33, 21.15s/it] 52%|█████▏    | 691/1330 [15:30:42<3:29:51, 19.71s/it] 52%|█████▏    | 692/1330 [15:30:54<3:06:13, 17.51s/it] 52%|█████▏    | 693/1330 [15:31:11<3:02:57, 17.23s/it] 52%|█████▏    | 694/1330 [15:31:24<2:51:02, 16.14s/it] 52%|█████▏    | 695/1330 [15:31:38<2:43:51, 15.48s/it] 52%|█████▏    | 696/1330 [15:32:18<4:01:36, 22.86s/it] 52%|█████▏    | 697/1330 [15:32:30<3:26:31, 19.58s/it] 52%|█████▏    | 698/1330 [15:32:45<3:11:59, 18.23s/it] 53%|█████▎    | 699/1330 [15:32:57<2:52:03, 16.36s/it] 53%|█████▎    | 700/1330 [15:33:08<2:32:09, 14.49s/it] 53%|█████▎    | 701/1330 [15:33:23<2:34:04, 14.70s/it] 53%|█████▎    | 702/1330 [15:33:35<2:25:02, 13.86s/it] 53%|█████▎    | 703/1330 [15:33:47<2:19:18, 13.33s/it] 53%|█████▎    | 704/1330 [15:33:57<2:08:35, 12.33s/it] 53%|█████▎    | 705/1330 [15:34:08<2:05:59, 12.09s/it] 53%|█████▎    | 706/1330 [15:35:11<4:43:32, 27.26s/it] 53%|█████▎    | 707/1330 [15:35:19<3:44:05, 21.58s/it] 53%|█████▎    | 708/1330 [15:35:30<3:09:33, 18.29s/it] 53%|█████▎    | 709/1330 [15:35:46<3:03:52, 17.77s/it] 53%|█████▎    | 710/1330 [15:35:58<2:44:00, 15.87s/it] 53%|█████▎    | 711/1330 [15:36:15<2:48:22, 16.32s/it] 54%|█████▎    | 712/1330 [15:36:32<2:48:46, 16.39s/it] 54%|█████▎    | 713/1330 [15:36:42<2:29:03, 14.50s/it] 54%|█████▎    | 714/1330 [15:36:59<2:35:59, 15.19s/it] 54%|█████▍    | 715/1330 [15:37:51<4:30:06, 26.35s/it] 54%|█████▍    | 716/1330 [15:38:02<3:41:06, 21.61s/it] 54%|█████▍    | 717/1330 [15:38:13<3:10:03, 18.60s/it] 54%|█████▍    | 718/1330 [15:38:21<2:38:05, 15.50s/it] 54%|█████▍    | 719/1330 [15:38:32<2:22:34, 14.00s/it] 54%|█████▍    | 720/1330 [15:38:46<2:21:44, 13.94s/it] 54%|█████▍    | 721/1330 [15:39:04<2:33:55, 15.17s/it] 54%|█████▍    | 722/1330 [15:39:22<2:43:24, 16.13s/it] 54%|█████▍    | 723/1330 [15:39:33<2:27:18, 14.56s/it] 54%|█████▍    | 724/1330 [15:39:54<2:47:07, 16.55s/it] 55%|█████▍    | 725/1330 [15:40:17<3:06:18, 18.48s/it] 55%|█████▍    | 726/1330 [15:40:24<2:31:11, 15.02s/it] 55%|█████▍    | 727/1330 [15:40:38<2:28:47, 14.80s/it] 55%|█████▍    | 728/1330 [15:40:50<2:18:31, 13.81s/it] 55%|█████▍    | 729/1330 [15:41:04<2:19:16, 13.90s/it] 55%|█████▍    | 730/1330 [15:41:22<2:32:34, 15.26s/it] 55%|█████▍    | 731/1330 [15:41:33<2:16:54, 13.71s/it] 55%|█████▌    | 732/1330 [15:41:49<2:24:38, 14.51s/it] 55%|█████▌    | 733/1330 [15:42:02<2:20:43, 14.14s/it] 55%|█████▌    | 734/1330 [15:42:09<1:58:19, 11.91s/it] 55%|█████▌    | 735/1330 [15:42:17<1:47:17, 10.82s/it] 55%|█████▌    | 736/1330 [15:42:37<2:14:06, 13.55s/it] 55%|█████▌    | 737/1330 [15:42:54<2:24:17, 14.60s/it] 55%|█████▌    | 738/1330 [15:43:11<2:31:14, 15.33s/it] 56%|█████▌    | 739/1330 [15:43:18<2:06:20, 12.83s/it] 56%|█████▌    | 740/1330 [15:43:29<2:00:51, 12.29s/it] 56%|█████▌    | 741/1330 [15:43:37<1:48:38, 11.07s/it] 56%|█████▌    | 742/1330 [15:43:55<2:08:34, 13.12s/it] 56%|█████▌    | 743/1330 [15:44:07<2:03:35, 12.63s/it] 56%|█████▌    | 744/1330 [15:44:17<1:56:06, 11.89s/it] 56%|█████▌    | 745/1330 [15:44:26<1:48:51, 11.17s/it] 56%|█████▌    | 746/1330 [15:44:45<2:11:06, 13.47s/it] 56%|█████▌    | 747/1330 [15:45:02<2:21:15, 14.54s/it] 56%|█████▌    | 748/1330 [15:45:14<2:12:28, 13.66s/it] 56%|█████▋    | 749/1330 [15:45:31<2:20:56, 14.56s/it] 56%|█████▋    | 750/1330 [15:45:46<2:22:37, 14.75s/it] 56%|█████▋    | 751/1330 [15:45:58<2:13:32, 13.84s/it] 57%|█████▋    | 752/1330 [15:46:11<2:11:25, 13.64s/it] 57%|█████▋    | 753/1330 [15:46:21<2:00:09, 12.49s/it] 57%|█████▋    | 754/1330 [15:46:28<1:45:43, 11.01s/it] 57%|█████▋    | 755/1330 [15:47:12<3:20:38, 20.94s/it] 57%|█████▋    | 756/1330 [15:47:16<2:31:33, 15.84s/it] 57%|█████▋    | 757/1330 [15:47:39<2:52:07, 18.02s/it] 57%|█████▋    | 758/1330 [15:47:49<2:27:52, 15.51s/it] 57%|█████▋    | 759/1330 [15:48:02<2:21:53, 14.91s/it] 57%|█████▋    | 760/1330 [15:48:19<2:25:26, 15.31s/it] 57%|█████▋    | 761/1330 [15:48:35<2:28:46, 15.69s/it] 57%|█████▋    | 762/1330 [15:48:59<2:50:22, 18.00s/it] 57%|█████▋    | 763/1330 [15:49:08<2:24:30, 15.29s/it] 57%|█████▋    | 764/1330 [15:49:14<1:58:30, 12.56s/it] 58%|█████▊    | 765/1330 [15:49:30<2:09:36, 13.76s/it] 58%|█████▊    | 766/1330 [15:49:40<1:58:38, 12.62s/it] 58%|█████▊    | 767/1330 [15:50:37<4:01:28, 25.73s/it] 58%|█████▊    | 768/1330 [15:50:48<3:19:21, 21.28s/it] 58%|█████▊    | 769/1330 [15:51:04<3:06:22, 19.93s/it] 58%|█████▊    | 770/1330 [15:51:16<2:41:36, 17.32s/it] 58%|█████▊    | 771/1330 [15:51:25<2:18:44, 14.89s/it] 58%|█████▊    | 772/1330 [15:51:42<2:25:51, 15.68s/it] 58%|█████▊    | 773/1330 [15:52:03<2:38:27, 17.07s/it] 58%|█████▊    | 774/1330 [15:52:12<2:16:30, 14.73s/it] 58%|█████▊    | 775/1330 [15:52:19<1:54:28, 12.38s/it] 58%|█████▊    | 776/1330 [15:52:26<1:40:24, 10.87s/it] 58%|█████▊    | 777/1330 [15:52:42<1:54:57, 12.47s/it] 58%|█████▊    | 778/1330 [15:52:55<1:55:57, 12.60s/it] 59%|█████▊    | 779/1330 [15:53:11<2:04:29, 13.56s/it] 59%|█████▊    | 780/1330 [15:53:35<2:33:15, 16.72s/it] 59%|█████▊    | 781/1330 [15:53:42<2:05:14, 13.69s/it] 59%|█████▉    | 782/1330 [15:53:58<2:11:57, 14.45s/it] 59%|█████▉    | 783/1330 [15:54:15<2:19:26, 15.29s/it] 59%|█████▉    | 784/1330 [15:54:25<2:03:44, 13.60s/it] 59%|█████▉    | 785/1330 [15:54:45<2:21:34, 15.59s/it] 59%|█████▉    | 786/1330 [15:54:49<1:50:23, 12.18s/it] 59%|█████▉    | 787/1330 [15:54:59<1:44:32, 11.55s/it] 59%|█████▉    | 788/1330 [15:55:13<1:48:49, 12.05s/it] 59%|█████▉    | 789/1330 [15:55:18<1:29:57,  9.98s/it] 59%|█████▉    | 790/1330 [15:56:16<3:39:51, 24.43s/it] 59%|█████▉    | 791/1330 [15:56:24<2:56:36, 19.66s/it] 60%|█████▉    | 792/1330 [15:56:42<2:50:56, 19.06s/it] 60%|█████▉    | 793/1330 [15:56:52<2:24:47, 16.18s/it] 60%|█████▉    | 794/1330 [15:56:58<1:57:10, 13.12s/it] 60%|█████▉    | 795/1330 [15:57:15<2:08:26, 14.41s/it] 60%|█████▉    | 796/1330 [15:57:22<1:48:06, 12.15s/it] 60%|█████▉    | 797/1330 [15:57:31<1:40:46, 11.34s/it] 60%|██████    | 798/1330 [15:57:37<1:24:25,  9.52s/it] 60%|██████    | 799/1330 [15:57:55<1:48:41, 12.28s/it] 60%|██████    | 800/1330 [15:58:03<1:35:24, 10.80s/it] 60%|██████    | 801/1330 [15:58:09<1:24:13,  9.55s/it] 60%|██████    | 802/1330 [15:59:08<3:32:55, 24.20s/it] 60%|██████    | 803/1330 [15:59:26<3:17:46, 22.52s/it] 60%|██████    | 804/1330 [15:59:35<2:40:48, 18.34s/it] 61%|██████    | 805/1330 [15:59:52<2:36:57, 17.94s/it] 61%|██████    | 806/1330 [16:00:07<2:29:51, 17.16s/it] 61%|██████    | 807/1330 [16:00:17<2:10:10, 14.93s/it] 61%|██████    | 808/1330 [16:00:22<1:43:10, 11.86s/it] 61%|██████    | 809/1330 [16:00:27<1:25:20,  9.83s/it] 61%|██████    | 810/1330 [16:00:38<1:30:09, 10.40s/it] 61%|██████    | 811/1330 [16:00:54<1:43:39, 11.98s/it] 61%|██████    | 812/1330 [16:01:14<2:04:35, 14.43s/it] 61%|██████    | 813/1330 [16:01:34<2:18:49, 16.11s/it] 61%|██████    | 814/1330 [16:01:51<2:19:47, 16.25s/it] 61%|██████▏   | 815/1330 [16:02:02<2:05:20, 14.60s/it] 61%|██████▏   | 816/1330 [16:02:18<2:09:30, 15.12s/it] 61%|██████▏   | 817/1330 [16:02:27<1:53:37, 13.29s/it] 62%|██████▏   | 818/1330 [16:02:45<2:05:42, 14.73s/it] 62%|██████▏   | 819/1330 [16:02:53<1:48:25, 12.73s/it] 62%|██████▏   | 820/1330 [16:03:02<1:39:09, 11.67s/it] 62%|██████▏   | 821/1330 [16:03:13<1:37:17, 11.47s/it] 62%|██████▏   | 822/1330 [16:03:38<2:09:47, 15.33s/it] 62%|██████▏   | 823/1330 [16:03:52<2:06:08, 14.93s/it] 62%|██████▏   | 824/1330 [16:04:28<3:00:02, 21.35s/it] 62%|██████▏   | 825/1330 [16:04:44<2:46:37, 19.80s/it] 62%|██████▏   | 826/1330 [16:04:52<2:16:41, 16.27s/it] 62%|██████▏   | 827/1330 [16:05:06<2:10:06, 15.52s/it] 62%|██████▏   | 828/1330 [16:05:17<1:58:35, 14.17s/it] 62%|██████▏   | 829/1330 [16:05:40<2:20:06, 16.78s/it] 62%|██████▏   | 830/1330 [16:05:50<2:03:31, 14.82s/it] 62%|██████▏   | 831/1330 [16:05:59<1:49:27, 13.16s/it] 63%|██████▎   | 832/1330 [16:06:08<1:37:31, 11.75s/it] 63%|██████▎   | 833/1330 [16:06:18<1:32:52, 11.21s/it] 63%|██████▎   | 834/1330 [16:06:28<1:29:17, 10.80s/it] 63%|██████▎   | 835/1330 [16:06:36<1:23:38, 10.14s/it] 63%|██████▎   | 836/1330 [16:06:42<1:12:42,  8.83s/it] 63%|██████▎   | 837/1330 [16:06:49<1:08:10,  8.30s/it] 63%|██████▎   | 838/1330 [16:06:57<1:08:04,  8.30s/it] 63%|██████▎   | 839/1330 [16:07:22<1:46:59, 13.07s/it] 63%|██████▎   | 840/1330 [16:07:34<1:44:28, 12.79s/it] 63%|██████▎   | 841/1330 [16:07:53<1:59:22, 14.65s/it] 63%|██████▎   | 842/1330 [16:07:59<1:39:32, 12.24s/it] 63%|██████▎   | 843/1330 [16:08:12<1:40:52, 12.43s/it] 63%|██████▎   | 844/1330 [16:08:39<2:16:09, 16.81s/it] 64%|██████▎   | 845/1330 [16:08:56<2:17:01, 16.95s/it] 64%|██████▎   | 846/1330 [16:09:03<1:52:21, 13.93s/it] 64%|██████▎   | 847/1330 [16:09:16<1:47:58, 13.41s/it] 64%|██████▍   | 848/1330 [16:09:26<1:39:51, 12.43s/it] 64%|██████▍   | 849/1330 [16:09:45<1:55:38, 14.43s/it] 64%|██████▍   | 850/1330 [16:09:54<1:42:48, 12.85s/it] 64%|██████▍   | 851/1330 [16:10:10<1:50:46, 13.88s/it] 64%|██████▍   | 852/1330 [16:10:21<1:43:16, 12.96s/it] 64%|██████▍   | 853/1330 [16:10:36<1:48:52, 13.70s/it] 64%|██████▍   | 854/1330 [16:10:51<1:49:43, 13.83s/it] 64%|██████▍   | 855/1330 [16:11:05<1:51:23, 14.07s/it] 64%|██████▍   | 856/1330 [16:11:13<1:37:13, 12.31s/it] 64%|██████▍   | 857/1330 [16:11:24<1:33:03, 11.81s/it] 65%|██████▍   | 858/1330 [16:12:18<3:11:09, 24.30s/it] 65%|██████▍   | 859/1330 [16:12:27<2:35:40, 19.83s/it] 65%|██████▍   | 860/1330 [16:12:34<2:04:55, 15.95s/it] 65%|██████▍   | 861/1330 [16:12:50<2:04:31, 15.93s/it] 65%|██████▍   | 862/1330 [16:13:00<1:50:26, 14.16s/it] 65%|██████▍   | 863/1330 [16:13:11<1:43:55, 13.35s/it] 65%|██████▍   | 864/1330 [16:13:18<1:28:44, 11.43s/it] 65%|██████▌   | 865/1330 [16:13:37<1:44:44, 13.52s/it] 65%|██████▌   | 866/1330 [16:13:43<1:28:59, 11.51s/it] 65%|██████▌   | 867/1330 [16:14:00<1:41:02, 13.09s/it] 65%|██████▌   | 868/1330 [16:14:08<1:29:49, 11.67s/it] 65%|██████▌   | 869/1330 [16:14:25<1:39:59, 13.01s/it] 65%|██████▌   | 870/1330 [16:14:40<1:44:35, 13.64s/it] 65%|██████▌   | 871/1330 [16:14:48<1:33:06, 12.17s/it] 66%|██████▌   | 872/1330 [16:15:03<1:39:11, 13.00s/it] 66%|██████▌   | 873/1330 [16:15:14<1:33:20, 12.25s/it] 66%|██████▌   | 874/1330 [16:15:50<2:26:30, 19.28s/it] 66%|██████▌   | 875/1330 [16:15:58<2:02:09, 16.11s/it] 66%|██████▌   | 876/1330 [16:16:09<1:48:44, 14.37s/it] 66%|██████▌   | 877/1330 [16:16:24<1:50:22, 14.62s/it] 66%|██████▌   | 878/1330 [16:16:41<1:56:54, 15.52s/it] 66%|██████▌   | 879/1330 [16:17:10<2:25:10, 19.31s/it] 66%|██████▌   | 880/1330 [16:17:30<2:26:44, 19.56s/it] 66%|██████▌   | 881/1330 [16:17:45<2:17:25, 18.37s/it] 66%|██████▋   | 882/1330 [16:17:55<1:57:35, 15.75s/it] 66%|██████▋   | 883/1330 [16:19:08<4:05:25, 32.94s/it] 66%|██████▋   | 884/1330 [16:19:49<4:23:16, 35.42s/it] 67%|██████▋   | 885/1330 [16:20:02<3:32:35, 28.66s/it] 67%|██████▋   | 886/1330 [16:20:20<3:09:04, 25.55s/it] 67%|██████▋   | 887/1330 [16:20:29<2:31:43, 20.55s/it] 67%|██████▋   | 888/1330 [16:20:46<2:22:47, 19.38s/it] 67%|██████▋   | 889/1330 [16:20:51<1:51:09, 15.12s/it] 67%|██████▋   | 890/1330 [16:21:03<1:43:04, 14.05s/it] 67%|██████▋   | 891/1330 [16:21:21<1:52:42, 15.40s/it] 67%|██████▋   | 892/1330 [16:21:35<1:49:41, 15.03s/it] 67%|██████▋   | 893/1330 [16:22:00<2:11:17, 18.03s/it] 67%|██████▋   | 894/1330 [16:22:15<2:02:34, 16.87s/it] 67%|██████▋   | 895/1330 [16:22:25<1:48:20, 14.94s/it] 67%|██████▋   | 896/1330 [16:22:33<1:32:54, 12.84s/it] 67%|██████▋   | 897/1330 [16:22:42<1:23:40, 11.60s/it] 68%|██████▊   | 898/1330 [16:22:51<1:19:09, 10.99s/it] 68%|██████▊   | 899/1330 [16:24:04<3:31:45, 29.48s/it] 68%|██████▊   | 900/1330 [16:24:12<2:44:34, 22.96s/it] 68%|██████▊   | 901/1330 [16:24:30<2:34:07, 21.55s/it] 68%|██████▊   | 902/1330 [16:24:38<2:05:43, 17.62s/it] 68%|██████▊   | 903/1330 [16:25:05<2:24:54, 20.36s/it] 68%|██████▊   | 904/1330 [16:25:18<2:08:48, 18.14s/it] 68%|██████▊   | 905/1330 [16:25:28<1:50:35, 15.61s/it] 68%|██████▊   | 906/1330 [16:25:42<1:46:44, 15.11s/it] 68%|██████▊   | 907/1330 [16:25:56<1:44:55, 14.88s/it] 68%|██████▊   | 908/1330 [16:26:06<1:33:47, 13.34s/it] 68%|██████▊   | 909/1330 [16:26:12<1:18:09, 11.14s/it] 68%|██████▊   | 910/1330 [16:26:19<1:09:52,  9.98s/it] 68%|██████▊   | 911/1330 [16:26:31<1:14:11, 10.62s/it] 69%|██████▊   | 912/1330 [16:26:41<1:12:13, 10.37s/it] 69%|██████▊   | 913/1330 [16:26:56<1:21:08, 11.67s/it] 69%|██████▊   | 914/1330 [16:27:06<1:18:42, 11.35s/it] 69%|██████▉   | 915/1330 [16:27:21<1:25:19, 12.34s/it] 69%|██████▉   | 916/1330 [16:27:36<1:30:47, 13.16s/it] 69%|██████▉   | 917/1330 [16:27:49<1:30:11, 13.10s/it] 69%|██████▉   | 918/1330 [16:28:04<1:33:22, 13.60s/it] 69%|██████▉   | 919/1330 [16:28:13<1:24:07, 12.28s/it] 69%|██████▉   | 920/1330 [16:28:18<1:08:41, 10.05s/it] 69%|██████▉   | 921/1330 [16:28:35<1:23:56, 12.31s/it] 69%|██████▉   | 922/1330 [16:28:43<1:14:07, 10.90s/it] 69%|██████▉   | 923/1330 [16:28:57<1:19:54, 11.78s/it] 69%|██████▉   | 924/1330 [16:29:14<1:31:16, 13.49s/it] 70%|██████▉   | 925/1330 [16:29:22<1:19:46, 11.82s/it] 70%|██████▉   | 926/1330 [16:29:35<1:21:46, 12.14s/it] 70%|██████▉   | 927/1330 [16:30:00<1:46:49, 15.90s/it] 70%|██████▉   | 928/1330 [16:30:18<1:51:28, 16.64s/it] 70%|██████▉   | 929/1330 [16:30:31<1:43:35, 15.50s/it] 70%|██████▉   | 930/1330 [16:30:42<1:34:54, 14.24s/it] 70%|███████   | 931/1330 [16:30:57<1:36:00, 14.44s/it] 70%|███████   | 932/1330 [16:31:06<1:25:26, 12.88s/it] 70%|███████   | 933/1330 [16:31:20<1:25:37, 12.94s/it] 70%|███████   | 934/1330 [16:31:54<2:08:22, 19.45s/it] 70%|███████   | 935/1330 [16:32:38<2:56:01, 26.74s/it] 70%|███████   | 936/1330 [16:34:19<5:22:39, 49.14s/it] 70%|███████   | 937/1330 [16:34:30<4:07:11, 37.74s/it] 71%|███████   | 938/1330 [16:34:40<3:11:11, 29.27s/it] 71%|███████   | 939/1330 [16:35:00<2:51:56, 26.39s/it] 71%|███████   | 940/1330 [16:35:12<2:23:29, 22.08s/it] 71%|███████   | 941/1330 [16:35:30<2:15:59, 20.98s/it] 71%|███████   | 942/1330 [16:35:40<1:54:11, 17.66s/it] 71%|███████   | 943/1330 [16:36:03<2:04:53, 19.36s/it] 71%|███████   | 944/1330 [16:36:15<1:49:36, 17.04s/it] 71%|███████   | 945/1330 [16:36:28<1:42:17, 15.94s/it] 71%|███████   | 946/1330 [16:36:40<1:33:37, 14.63s/it] 71%|███████   | 947/1330 [16:36:58<1:39:54, 15.65s/it] 71%|███████▏  | 948/1330 [16:38:40<4:25:08, 41.65s/it] 71%|███████▏  | 949/1330 [16:38:54<3:31:23, 33.29s/it] 71%|███████▏  | 950/1330 [16:39:09<2:55:52, 27.77s/it] 72%|███████▏  | 951/1330 [16:39:22<2:27:28, 23.35s/it] 72%|███████▏  | 952/1330 [16:39:50<2:35:14, 24.64s/it] 72%|███████▏  | 953/1330 [16:40:04<2:14:54, 21.47s/it] 72%|███████▏  | 954/1330 [16:40:15<1:54:40, 18.30s/it] 72%|███████▏  | 955/1330 [16:40:28<1:45:03, 16.81s/it] 72%|███████▏  | 956/1330 [16:40:41<1:37:31, 15.65s/it] 72%|███████▏  | 957/1330 [16:41:02<1:47:39, 17.32s/it] 72%|███████▏  | 958/1330 [16:41:21<1:51:10, 17.93s/it] 72%|███████▏  | 959/1330 [16:41:34<1:40:07, 16.19s/it] 72%|███████▏  | 960/1330 [16:41:55<1:50:22, 17.90s/it] 72%|███████▏  | 961/1330 [16:42:15<1:52:27, 18.29s/it] 72%|███████▏  | 962/1330 [16:42:26<1:39:45, 16.27s/it] 72%|███████▏  | 963/1330 [16:42:37<1:29:11, 14.58s/it] 72%|███████▏  | 964/1330 [16:42:47<1:21:14, 13.32s/it] 73%|███████▎  | 965/1330 [16:42:56<1:12:14, 11.88s/it] 73%|███████▎  | 966/1330 [16:43:13<1:21:37, 13.45s/it] 73%|███████▎  | 967/1330 [16:43:32<1:30:55, 15.03s/it] 73%|███████▎  | 968/1330 [16:43:38<1:14:34, 12.36s/it] 73%|███████▎  | 969/1330 [16:43:50<1:13:53, 12.28s/it] 73%|███████▎  | 970/1330 [16:44:01<1:11:58, 12.00s/it] 73%|███████▎  | 971/1330 [16:44:12<1:10:18, 11.75s/it] 73%|███████▎  | 972/1330 [16:44:21<1:04:35, 10.83s/it] 73%|███████▎  | 973/1330 [16:44:27<56:04,  9.43s/it]   73%|███████▎  | 974/1330 [16:44:45<1:11:18, 12.02s/it] 73%|███████▎  | 975/1330 [16:44:58<1:12:48, 12.31s/it] 73%|███████▎  | 976/1330 [16:45:57<2:34:25, 26.17s/it] 73%|███████▎  | 977/1330 [16:46:17<2:22:55, 24.29s/it] 74%|███████▎  | 978/1330 [16:46:23<1:50:23, 18.82s/it] 74%|███████▎  | 979/1330 [16:46:37<1:42:08, 17.46s/it] 74%|███████▎  | 980/1330 [16:46:52<1:37:07, 16.65s/it] 74%|███████▍  | 981/1330 [16:47:02<1:25:37, 14.72s/it] 74%|███████▍  | 982/1330 [16:47:18<1:28:20, 15.23s/it] 74%|███████▍  | 983/1330 [16:47:29<1:20:53, 13.99s/it] 74%|███████▍  | 984/1330 [16:47:44<1:21:38, 14.16s/it] 74%|███████▍  | 985/1330 [16:47:52<1:10:22, 12.24s/it] 74%|███████▍  | 986/1330 [16:48:04<1:10:52, 12.36s/it] 74%|███████▍  | 987/1330 [16:48:15<1:08:35, 12.00s/it] 74%|███████▍  | 988/1330 [16:48:40<1:29:38, 15.73s/it] 74%|███████▍  | 989/1330 [16:48:51<1:20:59, 14.25s/it] 74%|███████▍  | 990/1330 [16:49:00<1:12:46, 12.84s/it] 75%|███████▍  | 991/1330 [16:49:07<1:01:21, 10.86s/it] 75%|███████▍  | 992/1330 [16:49:19<1:04:45, 11.49s/it] 75%|███████▍  | 993/1330 [16:49:26<56:27, 10.05s/it]   75%|███████▍  | 994/1330 [16:49:46<1:12:38, 12.97s/it] 75%|███████▍  | 995/1330 [16:49:55<1:05:26, 11.72s/it] 75%|███████▍  | 996/1330 [16:50:07<1:05:46, 11.82s/it] 75%|███████▍  | 997/1330 [16:50:19<1:05:47, 11.85s/it] 75%|███████▌  | 998/1330 [16:50:28<1:01:04, 11.04s/it] 75%|███████▌  | 999/1330 [16:50:47<1:13:38, 13.35s/it] 75%|███████▌  | 1000/1330 [16:51:04<1:19:38, 14.48s/it] 75%|███████▌  | 1001/1330 [16:51:18<1:18:41, 14.35s/it] 75%|███████▌  | 1002/1330 [16:51:32<1:18:47, 14.41s/it] 75%|███████▌  | 1003/1330 [16:51:48<1:20:11, 14.71s/it] 75%|███████▌  | 1004/1330 [16:52:10<1:31:29, 16.84s/it] 76%|███████▌  | 1005/1330 [16:52:21<1:22:05, 15.15s/it] 76%|███████▌  | 1006/1330 [16:52:40<1:28:47, 16.44s/it] 76%|███████▌  | 1007/1330 [16:53:36<2:32:02, 28.24s/it] 76%|███████▌  | 1008/1330 [16:53:56<2:18:26, 25.80s/it] 76%|███████▌  | 1009/1330 [16:54:08<1:55:41, 21.63s/it] 76%|███████▌  | 1010/1330 [16:54:18<1:36:04, 18.01s/it] 76%|███████▌  | 1011/1330 [16:54:36<1:36:23, 18.13s/it] 76%|███████▌  | 1012/1330 [16:54:48<1:27:02, 16.42s/it] 76%|███████▌  | 1013/1330 [16:55:08<1:31:57, 17.41s/it] 76%|███████▌  | 1014/1330 [16:55:19<1:21:06, 15.40s/it] 76%|███████▋  | 1015/1330 [16:55:30<1:13:36, 14.02s/it] 76%|███████▋  | 1016/1330 [16:55:37<1:02:56, 12.03s/it] 76%|███████▋  | 1017/1330 [16:56:11<1:36:42, 18.54s/it] 77%|███████▋  | 1018/1330 [16:56:27<1:33:02, 17.89s/it] 77%|███████▋  | 1019/1330 [16:57:05<2:04:19, 23.99s/it] 77%|███████▋  | 1020/1330 [16:57:16<1:44:00, 20.13s/it] 77%|███████▋  | 1021/1330 [16:57:30<1:33:26, 18.14s/it] 77%|███████▋  | 1022/1330 [16:58:00<1:51:19, 21.69s/it] 77%|███████▋  | 1023/1330 [16:58:13<1:37:30, 19.06s/it] 77%|███████▋  | 1024/1330 [16:58:21<1:20:43, 15.83s/it] 77%|███████▋  | 1025/1330 [16:58:31<1:10:51, 13.94s/it] 77%|███████▋  | 1026/1330 [16:58:40<1:03:10, 12.47s/it] 77%|███████▋  | 1027/1330 [16:59:12<1:33:42, 18.55s/it] 77%|███████▋  | 1028/1330 [17:00:46<3:26:04, 40.94s/it] 77%|███████▋  | 1029/1330 [17:00:55<2:38:12, 31.54s/it] 77%|███████▋  | 1030/1330 [17:01:20<2:27:10, 29.43s/it] 78%|███████▊  | 1031/1330 [17:01:33<2:02:06, 24.50s/it] 78%|███████▊  | 1032/1330 [17:01:46<1:45:09, 21.17s/it] 78%|███████▊  | 1033/1330 [17:01:59<1:33:05, 18.81s/it] 78%|███████▊  | 1034/1330 [17:02:12<1:23:14, 16.87s/it] 78%|███████▊  | 1035/1330 [17:02:19<1:09:21, 14.11s/it] 78%|███████▊  | 1036/1330 [17:02:27<59:21, 12.11s/it]   78%|███████▊  | 1037/1330 [17:02:36<55:19, 11.33s/it] 78%|███████▊  | 1038/1330 [17:02:48<56:13, 11.55s/it] 78%|███████▊  | 1039/1330 [17:03:01<57:53, 11.94s/it] 78%|███████▊  | 1040/1330 [17:03:15<1:00:48, 12.58s/it] 78%|███████▊  | 1041/1330 [17:03:26<57:23, 11.92s/it]   78%|███████▊  | 1042/1330 [17:03:43<1:04:32, 13.45s/it] 78%|███████▊  | 1043/1330 [17:03:56<1:04:35, 13.50s/it] 78%|███████▊  | 1044/1330 [17:04:15<1:11:44, 15.05s/it] 79%|███████▊  | 1045/1330 [17:04:32<1:14:26, 15.67s/it] 79%|███████▊  | 1046/1330 [17:04:53<1:20:59, 17.11s/it] 79%|███████▊  | 1047/1330 [17:05:43<2:07:30, 27.03s/it] 79%|███████▉  | 1048/1330 [17:05:53<1:43:51, 22.10s/it] 79%|███████▉  | 1049/1330 [17:06:00<1:21:48, 17.47s/it] 79%|███████▉  | 1050/1330 [17:06:10<1:11:31, 15.33s/it] 79%|███████▉  | 1051/1330 [17:06:23<1:07:41, 14.56s/it] 79%|███████▉  | 1052/1330 [17:06:35<1:03:16, 13.66s/it] 79%|███████▉  | 1053/1330 [17:08:12<2:59:10, 38.81s/it] 79%|███████▉  | 1054/1330 [17:08:23<2:19:42, 30.37s/it] 79%|███████▉  | 1055/1330 [17:08:37<1:57:24, 25.62s/it] 79%|███████▉  | 1056/1330 [17:08:44<1:31:21, 20.01s/it] 79%|███████▉  | 1057/1330 [17:08:58<1:22:21, 18.10s/it] 80%|███████▉  | 1058/1330 [17:09:07<1:09:38, 15.36s/it] 80%|███████▉  | 1059/1330 [17:09:29<1:18:51, 17.46s/it] 80%|███████▉  | 1060/1330 [17:09:45<1:16:13, 16.94s/it] 80%|███████▉  | 1061/1330 [17:10:00<1:12:37, 16.20s/it] 80%|███████▉  | 1062/1330 [17:10:07<1:00:29, 13.54s/it] 80%|███████▉  | 1063/1330 [17:10:16<53:59, 12.13s/it]   80%|████████  | 1064/1330 [17:10:30<57:16, 12.92s/it] 80%|████████  | 1065/1330 [17:10:36<47:05, 10.66s/it] 80%|████████  | 1066/1330 [17:10:51<53:06, 12.07s/it] 80%|████████  | 1067/1330 [17:11:18<1:12:10, 16.47s/it] 80%|████████  | 1068/1330 [17:11:32<1:08:11, 15.62s/it] 80%|████████  | 1069/1330 [17:11:41<1:00:18, 13.86s/it] 80%|████████  | 1070/1330 [17:11:52<56:27, 13.03s/it]   81%|████████  | 1071/1330 [17:12:15<1:08:05, 15.77s/it] 81%|████████  | 1072/1330 [17:12:28<1:04:16, 14.95s/it] 81%|████████  | 1073/1330 [17:12:47<1:09:33, 16.24s/it] 81%|████████  | 1074/1330 [17:12:57<1:01:33, 14.43s/it] 81%|████████  | 1075/1330 [17:13:07<55:42, 13.11s/it]   81%|████████  | 1076/1330 [17:13:31<1:08:55, 16.28s/it] 81%|████████  | 1077/1330 [17:13:44<1:04:17, 15.25s/it] 81%|████████  | 1078/1330 [17:13:59<1:04:35, 15.38s/it] 81%|████████  | 1079/1330 [17:14:10<57:59, 13.86s/it]   81%|████████  | 1080/1330 [17:14:20<53:51, 12.93s/it] 81%|████████▏ | 1081/1330 [17:14:29<47:48, 11.52s/it] 81%|████████▏ | 1082/1330 [17:14:40<47:38, 11.53s/it] 81%|████████▏ | 1083/1330 [17:14:51<46:22, 11.27s/it] 82%|████████▏ | 1084/1330 [17:15:14<1:01:16, 14.95s/it] 82%|████████▏ | 1085/1330 [17:15:30<1:01:20, 15.02s/it] 82%|████████▏ | 1086/1330 [17:15:42<57:58, 14.26s/it]   82%|████████▏ | 1087/1330 [17:16:00<1:01:46, 15.25s/it] 82%|████████▏ | 1088/1330 [17:16:30<1:19:34, 19.73s/it] 82%|████████▏ | 1089/1330 [17:16:45<1:13:35, 18.32s/it] 82%|████████▏ | 1090/1330 [17:16:52<59:24, 14.85s/it]   82%|████████▏ | 1091/1330 [17:17:15<1:09:51, 17.54s/it] 82%|████████▏ | 1092/1330 [17:17:28<1:03:21, 15.97s/it] 82%|████████▏ | 1093/1330 [17:17:57<1:18:17, 19.82s/it] 82%|████████▏ | 1094/1330 [17:18:16<1:17:01, 19.58s/it] 82%|████████▏ | 1095/1330 [17:18:29<1:09:20, 17.70s/it] 82%|████████▏ | 1096/1330 [17:18:43<1:04:36, 16.56s/it] 82%|████████▏ | 1097/1330 [17:18:52<56:04, 14.44s/it]   83%|████████▎ | 1098/1330 [17:19:07<55:36, 14.38s/it] 83%|████████▎ | 1099/1330 [17:19:27<1:02:30, 16.24s/it] 83%|████████▎ | 1100/1330 [17:19:38<56:42, 14.79s/it]   83%|████████▎ | 1101/1330 [17:19:47<48:50, 12.80s/it] 83%|████████▎ | 1102/1330 [17:20:02<51:07, 13.45s/it] 83%|████████▎ | 1103/1330 [17:21:01<1:43:06, 27.25s/it] 83%|████████▎ | 1104/1330 [17:21:17<1:29:22, 23.73s/it] 83%|████████▎ | 1105/1330 [17:21:30<1:17:40, 20.71s/it] 83%|████████▎ | 1106/1330 [17:21:45<1:10:34, 18.90s/it] 83%|████████▎ | 1107/1330 [17:21:56<1:01:38, 16.59s/it] 83%|████████▎ | 1108/1330 [17:22:18<1:07:14, 18.17s/it] 83%|████████▎ | 1109/1330 [17:22:33<1:03:03, 17.12s/it] 83%|████████▎ | 1110/1330 [17:23:15<1:30:07, 24.58s/it] 84%|████████▎ | 1111/1330 [17:23:30<1:19:51, 21.88s/it] 84%|████████▎ | 1112/1330 [17:23:53<1:19:58, 22.01s/it] 84%|████████▎ | 1113/1330 [17:24:04<1:08:38, 18.98s/it] 84%|████████▍ | 1114/1330 [17:24:21<1:05:57, 18.32s/it] 84%|████████▍ | 1115/1330 [17:24:35<1:01:00, 17.03s/it] 84%|████████▍ | 1116/1330 [17:24:47<54:38, 15.32s/it]   84%|████████▍ | 1117/1330 [17:25:02<54:50, 15.45s/it] 84%|████████▍ | 1118/1330 [17:25:12<48:06, 13.62s/it] 84%|████████▍ | 1119/1330 [17:25:24<46:23, 13.19s/it] 84%|████████▍ | 1120/1330 [17:25:41<50:01, 14.29s/it] 84%|████████▍ | 1121/1330 [17:25:54<48:18, 13.87s/it] 84%|████████▍ | 1122/1330 [17:26:21<1:02:36, 18.06s/it] 84%|████████▍ | 1123/1330 [17:26:38<1:01:12, 17.74s/it] 85%|████████▍ | 1124/1330 [17:26:54<58:16, 16.97s/it]   85%|████████▍ | 1125/1330 [17:28:23<2:11:43, 38.55s/it] 85%|████████▍ | 1126/1330 [17:28:31<1:40:27, 29.55s/it] 85%|████████▍ | 1127/1330 [17:28:41<1:20:17, 23.73s/it] 85%|████████▍ | 1128/1330 [17:28:53<1:08:09, 20.24s/it] 85%|████████▍ | 1129/1330 [17:29:01<54:55, 16.39s/it]   85%|████████▍ | 1130/1330 [17:29:12<49:03, 14.72s/it] 85%|████████▌ | 1131/1330 [17:29:31<53:46, 16.22s/it] 85%|████████▌ | 1132/1330 [17:29:42<48:17, 14.63s/it] 85%|████████▌ | 1133/1330 [17:30:02<52:50, 16.10s/it] 85%|████████▌ | 1134/1330 [17:30:09<43:27, 13.30s/it] 85%|████████▌ | 1135/1330 [17:30:26<47:33, 14.63s/it] 85%|████████▌ | 1136/1330 [17:31:13<1:18:44, 24.35s/it] 85%|████████▌ | 1137/1330 [17:31:25<1:05:48, 20.46s/it] 86%|████████▌ | 1138/1330 [17:31:55<1:14:37, 23.32s/it] 86%|████████▌ | 1139/1330 [17:32:03<1:00:22, 18.97s/it] 86%|████████▌ | 1140/1330 [17:32:21<58:44, 18.55s/it]   86%|████████▌ | 1141/1330 [17:32:43<1:01:40, 19.58s/it] 86%|████████▌ | 1142/1330 [17:32:54<53:24, 17.05s/it]   86%|████████▌ | 1143/1330 [17:33:14<56:04, 17.99s/it] 86%|████████▌ | 1144/1330 [17:33:22<45:43, 14.75s/it] 86%|████████▌ | 1145/1330 [17:33:37<46:07, 14.96s/it] 86%|████████▌ | 1146/1330 [17:34:17<1:09:06, 22.54s/it] 86%|████████▌ | 1147/1330 [17:35:09<1:35:23, 31.28s/it] 86%|████████▋ | 1148/1330 [17:36:51<2:39:28, 52.57s/it] 86%|████████▋ | 1149/1330 [17:37:17<2:14:19, 44.53s/it] 86%|████████▋ | 1150/1330 [17:37:23<1:39:00, 33.00s/it] 87%|████████▋ | 1151/1330 [17:37:34<1:18:51, 26.43s/it] 87%|████████▋ | 1152/1330 [17:37:52<1:11:09, 23.99s/it] 87%|████████▋ | 1153/1330 [17:38:06<1:01:39, 20.90s/it] 87%|████████▋ | 1154/1330 [17:38:15<50:25, 17.19s/it]   87%|████████▋ | 1155/1330 [17:38:56<1:11:14, 24.43s/it] 87%|████████▋ | 1156/1330 [17:39:09<1:00:35, 20.90s/it] 87%|████████▋ | 1157/1330 [17:39:23<54:21, 18.85s/it]   87%|████████▋ | 1158/1330 [17:39:32<45:27, 15.85s/it] 87%|████████▋ | 1159/1330 [17:39:48<45:18, 15.90s/it] 87%|████████▋ | 1160/1330 [17:39:59<41:35, 14.68s/it] 87%|████████▋ | 1161/1330 [17:40:09<36:56, 13.12s/it] 87%|████████▋ | 1162/1330 [17:40:19<34:07, 12.19s/it] 87%|████████▋ | 1163/1330 [17:40:37<39:10, 14.07s/it] 88%|████████▊ | 1164/1330 [17:41:10<54:01, 19.53s/it] 88%|████████▊ | 1165/1330 [17:41:22<48:07, 17.50s/it] 88%|████████▊ | 1166/1330 [17:41:32<41:19, 15.12s/it] 88%|████████▊ | 1167/1330 [17:41:41<36:26, 13.41s/it] 88%|████████▊ | 1168/1330 [17:41:52<34:20, 12.72s/it] 88%|████████▊ | 1169/1330 [17:42:07<35:59, 13.41s/it] 88%|████████▊ | 1170/1330 [17:42:18<33:39, 12.62s/it] 88%|████████▊ | 1171/1330 [17:42:32<34:33, 13.04s/it] 88%|████████▊ | 1172/1330 [17:42:46<34:38, 13.15s/it] 88%|████████▊ | 1173/1330 [17:43:03<37:38, 14.38s/it] 88%|████████▊ | 1174/1330 [17:43:13<33:54, 13.04s/it] 88%|████████▊ | 1175/1330 [17:43:24<32:08, 12.44s/it] 88%|████████▊ | 1176/1330 [17:43:32<28:36, 11.15s/it] 88%|████████▊ | 1177/1330 [17:43:50<33:21, 13.08s/it] 89%|████████▊ | 1178/1330 [17:44:03<33:37, 13.28s/it] 89%|████████▊ | 1179/1330 [17:44:21<36:42, 14.59s/it] 89%|████████▊ | 1180/1330 [17:44:53<49:29, 19.79s/it] 89%|████████▉ | 1181/1330 [17:45:03<41:54, 16.87s/it] 89%|████████▉ | 1182/1330 [17:45:17<39:31, 16.02s/it] 89%|████████▉ | 1183/1330 [17:45:29<35:55, 14.66s/it] 89%|████████▉ | 1184/1330 [17:45:40<33:18, 13.69s/it] 89%|████████▉ | 1185/1330 [17:45:49<29:38, 12.27s/it] 89%|████████▉ | 1186/1330 [17:46:11<36:11, 15.08s/it] 89%|████████▉ | 1187/1330 [17:46:22<33:11, 13.93s/it] 89%|████████▉ | 1188/1330 [17:46:28<27:50, 11.76s/it] 89%|████████▉ | 1189/1330 [17:46:50<34:37, 14.74s/it] 89%|████████▉ | 1190/1330 [17:47:04<33:29, 14.36s/it] 90%|████████▉ | 1191/1330 [17:47:17<32:54, 14.20s/it] 90%|████████▉ | 1192/1330 [17:47:34<34:34, 15.03s/it] 90%|████████▉ | 1193/1330 [17:47:46<31:49, 13.94s/it] 90%|████████▉ | 1194/1330 [17:48:21<46:17, 20.42s/it] 90%|████████▉ | 1195/1330 [17:48:33<40:05, 17.82s/it] 90%|████████▉ | 1196/1330 [17:48:44<35:21, 15.83s/it] 90%|█████████ | 1197/1330 [17:49:04<37:43, 17.02s/it] 90%|█████████ | 1198/1330 [17:49:13<32:14, 14.66s/it] 90%|█████████ | 1199/1330 [17:49:23<28:53, 13.23s/it] 90%|█████████ | 1200/1330 [17:49:35<27:40, 12.77s/it] 90%|█████████ | 1201/1330 [17:49:44<25:13, 11.74s/it] 90%|█████████ | 1202/1330 [17:50:28<45:24, 21.28s/it] 90%|█████████ | 1203/1330 [17:50:37<37:41, 17.81s/it] 91%|█████████ | 1204/1330 [17:50:45<30:53, 14.71s/it] 91%|█████████ | 1205/1330 [17:50:54<27:14, 13.07s/it] 91%|█████████ | 1206/1330 [17:51:05<25:29, 12.33s/it] 91%|█████████ | 1207/1330 [17:51:16<24:35, 12.00s/it] 91%|█████████ | 1208/1330 [17:51:44<34:03, 16.75s/it] 91%|█████████ | 1209/1330 [17:51:55<30:13, 14.99s/it] 91%|█████████ | 1210/1330 [17:52:12<31:06, 15.55s/it] 91%|█████████ | 1211/1330 [17:52:25<29:43, 14.99s/it] 91%|█████████ | 1212/1330 [17:52:40<29:34, 15.04s/it] 91%|█████████ | 1213/1330 [17:52:54<28:43, 14.73s/it] 91%|█████████▏| 1214/1330 [17:53:04<25:17, 13.08s/it] 91%|█████████▏| 1215/1330 [17:53:17<25:20, 13.23s/it] 91%|█████████▏| 1216/1330 [17:53:28<23:29, 12.36s/it] 92%|█████████▏| 1217/1330 [17:54:31<52:00, 27.62s/it] 92%|█████████▏| 1218/1330 [17:54:51<47:28, 25.44s/it] 92%|█████████▏| 1219/1330 [17:55:08<42:31, 22.99s/it] 92%|█████████▏| 1220/1330 [17:55:16<33:50, 18.46s/it] 92%|█████████▏| 1221/1330 [17:55:30<30:47, 16.95s/it] 92%|█████████▏| 1222/1330 [17:55:37<25:11, 13.99s/it] 92%|█████████▏| 1223/1330 [17:55:54<26:26, 14.82s/it] 92%|█████████▏| 1224/1330 [17:56:14<29:25, 16.66s/it] 92%|█████████▏| 1225/1330 [17:58:42<1:37:50, 55.91s/it] 92%|█████████▏| 1226/1330 [17:58:57<1:15:50, 43.76s/it] 92%|█████████▏| 1227/1330 [17:59:09<58:36, 34.14s/it]   92%|█████████▏| 1228/1330 [17:59:20<46:12, 27.18s/it] 92%|█████████▏| 1229/1330 [17:59:31<37:41, 22.39s/it] 92%|█████████▏| 1230/1330 [17:59:47<34:05, 20.46s/it] 93%|█████████▎| 1231/1330 [18:00:09<34:33, 20.95s/it] 93%|█████████▎| 1232/1330 [18:00:16<27:06, 16.60s/it] 93%|█████████▎| 1233/1330 [18:00:22<22:00, 13.61s/it] 93%|█████████▎| 1234/1330 [18:00:34<20:43, 12.95s/it] 93%|█████████▎| 1235/1330 [18:00:48<20:53, 13.19s/it] 93%|█████████▎| 1236/1330 [18:01:42<40:05, 25.59s/it] 93%|█████████▎| 1237/1330 [18:01:55<33:35, 21.68s/it] 93%|█████████▎| 1238/1330 [18:02:06<28:33, 18.63s/it] 93%|█████████▎| 1239/1330 [18:02:19<25:37, 16.90s/it] 93%|█████████▎| 1240/1330 [18:02:38<26:18, 17.54s/it] 93%|█████████▎| 1241/1330 [18:03:03<29:27, 19.86s/it] 93%|█████████▎| 1242/1330 [18:03:16<25:46, 17.57s/it] 93%|█████████▎| 1243/1330 [18:03:30<24:10, 16.67s/it] 94%|█████████▎| 1244/1330 [18:04:02<30:27, 21.25s/it] 94%|█████████▎| 1245/1330 [18:04:18<27:41, 19.55s/it] 94%|█████████▎| 1246/1330 [18:04:30<24:20, 17.38s/it] 94%|█████████▍| 1247/1330 [18:04:41<21:14, 15.36s/it] 94%|█████████▍| 1248/1330 [18:04:51<18:51, 13.80s/it] 94%|█████████▍| 1249/1330 [18:05:02<17:38, 13.07s/it] 94%|█████████▍| 1250/1330 [18:05:21<19:38, 14.73s/it] 94%|█████████▍| 1251/1330 [18:06:03<30:18, 23.02s/it] 94%|█████████▍| 1252/1330 [18:06:19<27:12, 20.92s/it] 94%|█████████▍| 1253/1330 [18:06:26<21:17, 16.59s/it] 94%|█████████▍| 1254/1330 [18:06:39<19:40, 15.54s/it] 94%|█████████▍| 1255/1330 [18:06:53<18:51, 15.09s/it] 94%|█████████▍| 1256/1330 [18:07:08<18:38, 15.11s/it] 95%|█████████▍| 1257/1330 [18:07:27<19:56, 16.39s/it] 95%|█████████▍| 1258/1330 [18:07:40<18:27, 15.38s/it] 95%|█████████▍| 1259/1330 [18:07:58<19:04, 16.12s/it] 95%|█████████▍| 1260/1330 [18:08:11<17:43, 15.19s/it] 95%|█████████▍| 1261/1330 [18:08:20<15:18, 13.31s/it] 95%|█████████▍| 1262/1330 [18:08:58<23:23, 20.64s/it] 95%|█████████▍| 1263/1330 [18:09:08<19:23, 17.37s/it] 95%|█████████▌| 1264/1330 [18:09:20<17:25, 15.85s/it] 95%|█████████▌| 1265/1330 [18:09:37<17:29, 16.15s/it] 95%|█████████▌| 1266/1330 [18:09:51<16:33, 15.53s/it] 95%|█████████▌| 1267/1330 [18:10:01<14:31, 13.83s/it] 95%|█████████▌| 1268/1330 [18:10:23<16:59, 16.44s/it] 95%|█████████▌| 1269/1330 [18:10:35<15:24, 15.15s/it] 95%|█████████▌| 1270/1330 [18:10:52<15:41, 15.70s/it] 96%|█████████▌| 1271/1330 [18:11:02<13:39, 13.89s/it] 96%|█████████▌| 1272/1330 [18:11:12<12:11, 12.62s/it] 96%|█████████▌| 1273/1330 [18:12:14<26:05, 27.47s/it] 96%|█████████▌| 1274/1330 [18:12:24<20:56, 22.43s/it] 96%|█████████▌| 1275/1330 [18:12:35<17:25, 19.00s/it] 96%|█████████▌| 1276/1330 [18:12:47<15:04, 16.75s/it] 96%|█████████▌| 1277/1330 [18:13:15<17:42, 20.05s/it] 96%|█████████▌| 1278/1330 [18:13:24<14:35, 16.84s/it] 96%|█████████▌| 1279/1330 [18:13:35<12:46, 15.02s/it] 96%|█████████▌| 1280/1330 [18:13:48<12:10, 14.62s/it] 96%|█████████▋| 1281/1330 [18:13:58<10:40, 13.07s/it] 96%|█████████▋| 1282/1330 [18:14:11<10:29, 13.11s/it] 96%|█████████▋| 1283/1330 [18:16:05<33:56, 43.33s/it] 97%|█████████▋| 1284/1330 [18:17:31<43:02, 56.14s/it] 97%|█████████▋| 1285/1330 [18:17:42<31:57, 42.61s/it] 97%|█████████▋| 1286/1330 [18:17:59<25:39, 34.99s/it] 97%|█████████▋| 1287/1330 [18:18:05<18:43, 26.14s/it] 97%|█████████▋| 1288/1330 [18:18:16<15:13, 21.74s/it] 97%|█████████▋| 1289/1330 [18:18:39<14:59, 21.94s/it] 97%|█████████▋| 1290/1330 [18:19:19<18:22, 27.55s/it] 97%|█████████▋| 1291/1330 [18:19:49<18:23, 28.29s/it] 97%|█████████▋| 1292/1330 [18:20:18<18:04, 28.55s/it] 97%|█████████▋| 1293/1330 [18:20:35<15:21, 24.89s/it] 97%|█████████▋| 1294/1330 [18:20:49<13:02, 21.72s/it] 97%|█████████▋| 1295/1330 [18:21:05<11:40, 20.03s/it] 97%|█████████▋| 1296/1330 [18:21:17<09:56, 17.53s/it] 98%|█████████▊| 1297/1330 [18:21:33<09:22, 17.06s/it] 98%|█████████▊| 1298/1330 [18:21:47<08:38, 16.20s/it] 98%|█████████▊| 1299/1330 [18:22:06<08:44, 16.93s/it] 98%|█████████▊| 1300/1330 [18:22:33<09:58, 19.96s/it] 98%|█████████▊| 1301/1330 [18:22:56<10:09, 21.02s/it] 98%|█████████▊| 1302/1330 [18:23:23<10:39, 22.85s/it] 98%|█████████▊| 1303/1330 [18:23:50<10:51, 24.12s/it] 98%|█████████▊| 1304/1330 [18:24:07<09:32, 22.00s/it] 98%|█████████▊| 1305/1330 [18:24:33<09:38, 23.14s/it] 98%|█████████▊| 1306/1330 [18:25:00<09:38, 24.10s/it] 98%|█████████▊| 1307/1330 [18:25:22<09:00, 23.48s/it] 98%|█████████▊| 1308/1330 [18:25:45<08:34, 23.41s/it] 98%|█████████▊| 1309/1330 [18:26:12<08:34, 24.52s/it] 98%|█████████▊| 1310/1330 [18:26:38<08:20, 25.01s/it] 99%|█████████▊| 1311/1330 [18:27:05<08:07, 25.63s/it] 99%|█████████▊| 1312/1330 [18:27:30<07:36, 25.34s/it] 99%|█████████▊| 1313/1330 [18:28:05<08:01, 28.34s/it] 99%|█████████▉| 1314/1330 [18:28:37<07:51, 29.47s/it] 99%|█████████▉| 1315/1330 [18:29:06<07:18, 29.23s/it] 99%|█████████▉| 1316/1330 [18:29:32<06:36, 28.32s/it] 99%|█████████▉| 1317/1330 [18:29:52<05:36, 25.89s/it] 99%|█████████▉| 1318/1330 [18:30:16<05:04, 25.34s/it] 99%|█████████▉| 1319/1330 [18:34:10<16:04, 87.73s/it] 99%|█████████▉| 1320/1330 [18:35:35<14:30, 87.09s/it] 99%|█████████▉| 1321/1330 [18:36:02<10:21, 69.09s/it] 99%|█████████▉| 1322/1330 [18:40:12<16:27, 123.38s/it] 99%|█████████▉| 1323/1330 [18:40:49<11:21, 97.39s/it] 100%|█████████▉| 1324/1330 [18:41:13<07:32, 75.38s/it]100%|█████████▉| 1325/1330 [18:41:44<05:10, 62.01s/it]100%|█████████▉| 1326/1330 [18:42:07<03:21, 50.30s/it]100%|█████████▉| 1327/1330 [18:42:38<02:13, 44.42s/it]100%|█████████▉| 1328/1330 [18:43:03<01:17, 38.78s/it]100%|█████████▉| 1329/1330 [18:43:39<00:37, 37.85s/it]100%|██████████| 1330/1330 [18:44:14<00:00, 36.83s/it]100%|██████████| 1330/1330 [18:44:14<00:00, 50.72s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train with 601,506 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1it [00:00,  5.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4it [00:00, 16.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 10it [00:00, 31.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 17it [00:00, 41.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 22it [00:00, 43.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 27it [00:00, 38.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 34it [00:00, 45.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 39it [00:01, 43.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 45it [00:01, 45.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 50it [00:01, 42.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 55it [00:01, 40.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 60it [00:01, 40.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 65it [00:01, 41.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 70it [00:01, 39.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 76it [00:01, 42.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 81it [00:02, 42.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 86it [00:02, 41.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 91it [00:02, 40.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 96it [00:02, 33.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 102it [00:02, 39.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 107it [00:02, 36.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 111it [00:02, 37.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 116it [00:02, 38.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 122it [00:03, 42.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 127it [00:03, 40.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 135it [00:03, 45.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 140it [00:03, 44.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 146it [00:03, 48.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 152it [00:03, 50.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 158it [00:03, 49.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 164it [00:03, 48.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 170it [00:04, 45.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 177it [00:04, 50.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 183it [00:04, 47.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 190it [00:04, 50.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 199it [00:04, 58.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 206it [00:04, 60.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 213it [00:04, 59.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 220it [00:04, 56.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 228it [00:05, 60.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 236it [00:05, 61.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 243it [00:05, 55.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 249it [00:05, 56.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 255it [00:05, 55.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 263it [00:05, 59.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 270it [00:05, 52.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 276it [00:05, 54.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 285it [00:06, 60.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 292it [00:06, 60.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 299it [00:06, 60.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 306it [00:06, 60.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 313it [00:06, 58.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 320it [00:06, 60.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 327it [00:06, 60.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 334it [00:06, 56.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 341it [00:07, 59.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 350it [00:07, 66.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 357it [00:07, 64.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 364it [00:07, 60.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 371it [00:07, 60.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 381it [00:07, 69.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 389it [00:07, 70.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 397it [00:07, 64.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 406it [00:08, 61.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 414it [00:08, 63.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 421it [00:08, 61.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 430it [00:08, 63.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 437it [00:08, 61.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 444it [00:08, 58.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 450it [00:08, 56.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 456it [00:08, 52.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 462it [00:09, 48.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 469it [00:09, 52.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 475it [00:09, 49.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 481it [00:09, 47.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 487it [00:09, 47.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 495it [00:09, 55.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 501it [00:09, 54.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 509it [00:09, 60.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 517it [00:09, 64.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 524it [00:10, 64.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 533it [00:10, 66.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 543it [00:10, 74.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 551it [00:10, 70.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 559it [00:10, 72.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 569it [00:10, 80.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 578it [00:10, 79.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 589it [00:10, 85.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 601it [00:10, 92.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 611it [00:11, 77.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 620it [00:11, 80.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 631it [00:11, 85.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 642it [00:11, 89.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 652it [00:11, 82.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 661it [00:11, 80.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 673it [00:11, 85.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 682it [00:11, 83.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 694it [00:12, 87.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 703it [00:12, 75.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 711it [00:12, 69.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 728it [00:12, 90.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 738it [00:12, 89.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 748it [00:12, 90.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 758it [00:12, 73.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 768it [00:13, 76.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 777it [00:13, 76.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 785it [00:13, 66.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 795it [00:13, 73.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 804it [00:13, 77.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 817it [00:13, 89.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 829it [00:13, 96.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 841it [00:13, 99.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 852it [00:14, 85.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 862it [00:14, 82.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 871it [00:14, 71.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 883it [00:14, 81.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 896it [00:14, 92.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 906it [00:14, 84.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 915it [00:14, 77.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 924it [00:14, 77.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 933it [00:15, 72.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 941it [00:15, 70.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 956it [00:15, 87.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 971it [00:15, 103.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 986it [00:15, 110.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 998it [00:15, 89.92it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1008it [00:15, 88.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1025it [00:16, 107.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1037it [00:16, 105.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1049it [00:16, 97.75it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1060it [00:16, 95.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1070it [00:16, 86.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1079it [00:16, 77.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1089it [00:16, 82.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1098it [00:16, 69.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1107it [00:17, 73.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1115it [00:17, 72.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1123it [00:17, 68.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1135it [00:17, 79.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1148it [00:17, 92.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1158it [00:17, 91.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1168it [00:17, 85.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1181it [00:17, 96.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1192it [00:18, 90.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1202it [00:18, 85.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1211it [00:18, 84.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1222it [00:18, 88.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1232it [00:18, 88.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1241it [00:18, 88.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1250it [00:18, 85.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1259it [00:18, 74.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1267it [00:19, 65.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1277it [00:19, 70.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1288it [00:19, 80.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1300it [00:19, 90.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1311it [00:19, 93.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1324it [00:19, 102.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1337it [00:19, 109.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1349it [00:19, 109.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1361it [00:19, 111.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1373it [00:20, 99.34it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1384it [00:20, 88.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1394it [00:20, 84.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1405it [00:20, 89.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1415it [00:20, 80.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1430it [00:20, 97.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1442it [00:20, 99.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1453it [00:20, 82.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1462it [00:21, 83.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1474it [00:21, 88.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1488it [00:21, 91.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1500it [00:21, 97.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1514it [00:21, 104.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1525it [00:21, 104.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1540it [00:21, 115.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1552it [00:21, 105.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1563it [00:22, 100.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1575it [00:22, 101.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1586it [00:22, 87.63it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1597it [00:22, 92.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1611it [00:22, 100.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1622it [00:22, 94.52it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1634it [00:22, 96.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1644it [00:22, 91.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1660it [00:23, 103.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1677it [00:23, 114.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1689it [00:23, 99.44it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1700it [00:23, 99.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1711it [00:23, 102.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1722it [00:23, 103.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1733it [00:23, 101.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1748it [00:23, 106.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1759it [00:24, 102.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1770it [00:24, 85.95it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1780it [00:24, 83.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1796it [00:24, 99.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1809it [00:24, 101.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1820it [00:24, 86.68it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1830it [00:24, 88.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1846it [00:24, 103.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1857it [00:25, 84.49it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1868it [00:25, 89.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1878it [00:25, 89.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1891it [00:25, 97.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1902it [00:25, 91.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1916it [00:25, 98.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1929it [00:25, 106.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1940it [00:25, 98.50it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1953it [00:26, 102.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1964it [00:26, 90.05it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1974it [00:26, 87.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1983it [00:26, 82.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1995it [00:26, 88.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2006it [00:26, 93.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2023it [00:26, 107.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2036it [00:26, 113.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2048it [00:27, 115.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2060it [00:27, 105.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2071it [00:27, 93.14it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2081it [00:27, 88.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2096it [00:27, 102.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2108it [00:27, 102.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2121it [00:27, 109.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2133it [00:27, 110.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2145it [00:28, 106.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2158it [00:28, 109.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2170it [00:28, 102.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2181it [00:28, 95.81it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2191it [00:28, 75.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2206it [00:28, 88.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2216it [00:28, 83.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2229it [00:28, 93.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2240it [00:29, 93.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2250it [00:29, 94.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2264it [00:29, 104.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2276it [00:29, 107.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2295it [00:29, 124.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2308it [00:29, 102.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2319it [00:29, 102.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2332it [00:29, 108.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2345it [00:30, 113.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2357it [00:30, 94.50it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2370it [00:30, 102.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2390it [00:30, 126.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2404it [00:30, 127.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2418it [00:30, 124.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2431it [00:30, 121.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2448it [00:30, 132.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2462it [00:31, 113.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2474it [00:31, 99.78it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2485it [00:31, 86.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2499it [00:31, 98.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2510it [00:31, 96.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2528it [00:31, 113.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2540it [00:31, 107.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2554it [00:31, 115.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2566it [00:32, 112.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2587it [00:32, 138.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2602it [00:32, 124.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2627it [00:32, 152.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2643it [00:32, 135.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2658it [00:32, 130.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2672it [00:32, 131.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2686it [00:32, 123.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2699it [00:32, 124.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2712it [00:33, 123.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2728it [00:33, 133.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2745it [00:33, 138.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2760it [00:33, 135.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2776it [00:33, 138.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2790it [00:33, 120.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2803it [00:33, 116.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2818it [00:33, 122.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2831it [00:34, 114.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2848it [00:34, 128.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2873it [00:34, 154.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2889it [00:34, 130.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2903it [00:34, 124.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2916it [00:34, 113.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2928it [00:34, 111.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2940it [00:34, 110.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2952it [00:35, 111.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2964it [00:35, 105.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2977it [00:35, 110.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2989it [00:35, 110.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3009it [00:35, 129.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3037it [00:35, 164.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3054it [00:35, 143.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3073it [00:35, 152.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3089it [00:36, 126.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3103it [00:36, 123.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3123it [00:36, 139.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3138it [00:36, 129.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3153it [00:36, 131.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3167it [00:36, 122.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3181it [00:36, 125.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3194it [00:36, 115.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3208it [00:37, 119.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3224it [00:37, 127.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3238it [00:37, 125.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3251it [00:37, 125.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3264it [00:37, 119.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3277it [00:37, 106.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3289it [00:37, 109.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3310it [00:37, 135.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3325it [00:37, 122.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3341it [00:38, 131.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3355it [00:38, 118.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3371it [00:38, 127.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3385it [00:38, 114.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3400it [00:38, 121.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3413it [00:38, 111.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3431it [00:38, 125.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3445it [00:39, 105.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3458it [00:39, 111.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3470it [00:39, 107.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3487it [00:39, 119.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3511it [00:39, 150.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3530it [00:39, 148.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3546it [00:39, 132.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3562it [00:39, 139.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3579it [00:39, 146.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3595it [00:40, 143.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3610it [00:40, 140.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3628it [00:40, 148.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3644it [00:40, 141.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3659it [00:40, 131.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3676it [00:40, 136.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3690it [00:40, 136.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3711it [00:40, 152.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3732it [00:40, 91.10it/s] INFO:root:Writing test split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [00:46<56:16, 46.26s/it]  3%|▎         | 2/74 [01:21<48:01, 40.02s/it]  4%|▍         | 3/74 [01:45<38:21, 32.41s/it]  5%|▌         | 4/74 [02:14<36:13, 31.05s/it]  7%|▋         | 5/74 [02:51<38:26, 33.43s/it]  8%|▊         | 6/74 [04:01<51:41, 45.62s/it]  9%|▉         | 7/74 [05:03<57:13, 51.25s/it] 11%|█         | 8/74 [05:34<49:09, 44.70s/it] 12%|█▏        | 9/74 [06:08<44:52, 41.43s/it] 14%|█▎        | 10/74 [06:32<38:12, 35.82s/it] 15%|█▍        | 11/74 [06:48<31:14, 29.76s/it] 16%|█▌        | 12/74 [07:11<28:46, 27.85s/it] 18%|█▊        | 13/74 [07:32<26:11, 25.76s/it] 19%|█▉        | 14/74 [07:57<25:28, 25.48s/it] 20%|██        | 15/74 [08:22<24:57, 25.37s/it] 22%|██▏       | 16/74 [09:05<29:45, 30.79s/it] 23%|██▎       | 17/74 [09:30<27:25, 28.87s/it] 24%|██▍       | 18/74 [09:51<24:48, 26.57s/it] 26%|██▌       | 19/74 [10:12<22:42, 24.78s/it] 27%|██▋       | 20/74 [10:28<20:04, 22.30s/it] 28%|██▊       | 21/74 [10:57<21:20, 24.16s/it] 30%|██▉       | 22/74 [13:42<57:34, 66.44s/it] 31%|███       | 23/74 [14:10<46:49, 55.10s/it] 32%|███▏      | 24/74 [14:36<38:37, 46.35s/it] 34%|███▍      | 25/74 [16:35<55:34, 68.05s/it] 35%|███▌      | 26/74 [17:00<44:04, 55.09s/it] 36%|███▋      | 27/74 [17:28<36:45, 46.93s/it] 38%|███▊      | 28/74 [17:47<29:33, 38.54s/it] 39%|███▉      | 29/74 [18:07<24:53, 33.19s/it] 41%|████      | 30/74 [18:33<22:43, 30.98s/it] 42%|████▏     | 31/74 [18:57<20:33, 28.68s/it] 43%|████▎     | 32/74 [19:21<19:15, 27.50s/it] 45%|████▍     | 33/74 [19:42<17:29, 25.59s/it] 46%|████▌     | 34/74 [20:06<16:40, 25.02s/it] 47%|████▋     | 35/74 [20:24<14:50, 22.85s/it] 49%|████▊     | 36/74 [20:50<15:10, 23.97s/it] 50%|█████     | 37/74 [21:10<14:01, 22.73s/it] 51%|█████▏    | 38/74 [21:25<12:13, 20.38s/it] 53%|█████▎    | 39/74 [21:39<10:46, 18.48s/it] 54%|█████▍    | 40/74 [22:00<10:50, 19.13s/it] 55%|█████▌    | 41/74 [22:22<11:01, 20.04s/it] 57%|█████▋    | 42/74 [22:35<09:32, 17.88s/it] 58%|█████▊    | 43/74 [22:54<09:27, 18.30s/it] 59%|█████▉    | 44/74 [23:17<09:48, 19.63s/it] 61%|██████    | 45/74 [23:34<09:09, 18.95s/it] 62%|██████▏   | 46/74 [23:58<09:31, 20.40s/it] 64%|██████▎   | 47/74 [24:15<08:41, 19.31s/it] 65%|██████▍   | 48/74 [24:27<07:27, 17.22s/it] 66%|██████▌   | 49/74 [24:48<07:38, 18.35s/it] 68%|██████▊   | 50/74 [29:25<38:25, 96.04s/it] 69%|██████▉   | 51/74 [29:51<28:40, 74.82s/it] 70%|███████   | 52/74 [30:01<20:19, 55.45s/it] 72%|███████▏  | 53/74 [30:28<16:26, 47.00s/it] 73%|███████▎  | 54/74 [31:18<15:55, 47.75s/it] 74%|███████▍  | 55/74 [31:47<13:23, 42.31s/it] 76%|███████▌  | 56/74 [32:01<10:08, 33.81s/it] 77%|███████▋  | 57/74 [35:09<22:40, 80.00s/it] 78%|███████▊  | 58/74 [35:36<17:03, 63.95s/it] 80%|███████▉  | 59/74 [38:21<23:35, 94.39s/it] 81%|████████  | 60/74 [38:44<17:02, 73.06s/it] 82%|████████▏ | 61/74 [39:10<12:45, 58.86s/it] 84%|████████▍ | 62/74 [39:32<09:34, 47.86s/it] 85%|████████▌ | 63/74 [39:54<07:20, 40.03s/it] 86%|████████▋ | 64/74 [40:10<05:28, 32.90s/it] 88%|████████▊ | 65/74 [40:38<04:40, 31.19s/it] 89%|████████▉ | 66/74 [42:07<06:29, 48.63s/it] 91%|█████████ | 67/74 [42:24<04:35, 39.32s/it] 92%|█████████▏| 68/74 [42:49<03:28, 34.81s/it] 93%|█████████▎| 69/74 [43:13<02:38, 31.79s/it] 95%|█████████▍| 70/74 [43:38<01:58, 29.56s/it] 96%|█████████▌| 71/74 [44:06<01:27, 29.19s/it] 97%|█████████▋| 72/74 [45:11<01:19, 39.79s/it] 99%|█████████▊| 73/74 [45:32<00:34, 34.32s/it]100%|██████████| 74/74 [45:59<00:00, 31.98s/it]100%|██████████| 74/74 [45:59<00:00, 37.29s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test with 37,390 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 5it [00:00, 43.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 10it [00:00, 46.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 21it [00:00, 70.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 31it [00:00, 77.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 39it [00:00, 64.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 49it [00:00, 72.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 62it [00:00, 86.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 71it [00:00, 79.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 80it [00:01, 80.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:01, 73.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 98it [00:01, 78.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 107it [00:01, 73.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 115it [00:01, 72.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 124it [00:01, 76.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 133it [00:01, 77.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 143it [00:01, 82.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 154it [00:02, 86.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 163it [00:02, 79.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 180it [00:02, 99.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 197it [00:02, 111.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 209it [00:02, 111.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 221it [00:02, 112.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 223it [00:02, 85.59it/s] INFO:root:Writing val split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [00:31<38:34, 31.71s/it]  3%|▎         | 2/74 [00:54<32:05, 26.74s/it]  4%|▍         | 3/74 [01:21<31:30, 26.63s/it]  5%|▌         | 4/74 [01:40<27:45, 23.80s/it]  7%|▋         | 5/74 [02:02<26:33, 23.10s/it]  8%|▊         | 6/74 [02:38<31:08, 27.48s/it]  9%|▉         | 7/74 [04:17<56:48, 50.88s/it] 11%|█         | 8/74 [10:15<2:43:31, 148.65s/it] 12%|█▏        | 9/74 [10:52<2:03:10, 113.70s/it] 14%|█▎        | 10/74 [15:02<2:45:57, 155.59s/it] 15%|█▍        | 11/74 [15:41<2:06:03, 120.05s/it] 16%|█▌        | 12/74 [16:11<1:35:48, 92.72s/it]  18%|█▊        | 13/74 [16:45<1:16:06, 74.87s/it] 19%|█▉        | 14/74 [17:15<1:01:10, 61.17s/it] 20%|██        | 15/74 [17:43<50:29, 51.34s/it]   22%|██▏       | 16/74 [18:32<49:03, 50.76s/it] 23%|██▎       | 17/74 [18:58<41:00, 43.16s/it] 24%|██▍       | 18/74 [19:22<35:01, 37.52s/it] 26%|██▌       | 19/74 [22:11<1:10:27, 76.86s/it] 27%|██▋       | 20/74 [22:48<58:22, 64.86s/it]   28%|██▊       | 21/74 [23:07<45:17, 51.27s/it] 30%|██▉       | 22/74 [23:39<39:15, 45.30s/it] 31%|███       | 23/74 [24:08<34:29, 40.58s/it] 32%|███▏      | 24/74 [24:58<36:01, 43.23s/it] 34%|███▍      | 25/74 [25:22<30:42, 37.60s/it] 35%|███▌      | 26/74 [25:56<29:12, 36.51s/it] 36%|███▋      | 27/74 [27:47<46:06, 58.86s/it] 38%|███▊      | 28/74 [28:20<39:11, 51.12s/it] 39%|███▉      | 29/74 [29:03<36:33, 48.76s/it] 41%|████      | 30/74 [30:05<38:33, 52.57s/it] 42%|████▏     | 31/74 [30:43<34:30, 48.15s/it] 43%|████▎     | 32/74 [31:31<33:45, 48.24s/it] 45%|████▍     | 33/74 [32:03<29:34, 43.28s/it] 46%|████▌     | 34/74 [32:39<27:23, 41.08s/it] 47%|████▋     | 35/74 [33:17<26:01, 40.05s/it] 49%|████▊     | 36/74 [33:49<23:56, 37.81s/it] 50%|█████     | 37/74 [34:17<21:30, 34.88s/it] 51%|█████▏    | 38/74 [35:23<26:32, 44.24s/it] 53%|█████▎    | 39/74 [36:11<26:22, 45.20s/it] 54%|█████▍    | 40/74 [36:53<25:03, 44.21s/it] 55%|█████▌    | 41/74 [37:34<23:46, 43.24s/it] 57%|█████▋    | 42/74 [38:07<21:27, 40.24s/it] 58%|█████▊    | 43/74 [38:36<19:08, 37.04s/it] 59%|█████▉    | 44/74 [39:07<17:29, 34.98s/it] 61%|██████    | 45/74 [39:34<15:52, 32.85s/it] 62%|██████▏   | 46/74 [40:12<16:02, 34.36s/it] 64%|██████▎   | 47/74 [40:45<15:13, 33.84s/it] 65%|██████▍   | 48/74 [41:28<15:55, 36.73s/it] 66%|██████▌   | 49/74 [42:06<15:22, 36.89s/it] 68%|██████▊   | 50/74 [42:42<14:43, 36.80s/it] 69%|██████▉   | 51/74 [43:19<14:06, 36.78s/it] 70%|███████   | 52/74 [43:59<13:47, 37.61s/it] 72%|███████▏  | 53/74 [44:42<13:49, 39.50s/it] 73%|███████▎  | 54/74 [45:19<12:51, 38.57s/it] 74%|███████▍  | 55/74 [46:02<12:38, 39.91s/it] 76%|███████▌  | 56/74 [46:31<10:59, 36.67s/it] 77%|███████▋  | 57/74 [47:22<11:35, 40.91s/it] 78%|███████▊  | 58/74 [49:04<15:49, 59.32s/it] 80%|███████▉  | 59/74 [49:48<13:39, 54.62s/it] 81%|████████  | 60/74 [50:13<10:39, 45.69s/it] 82%|████████▏ | 61/74 [51:11<10:41, 49.38s/it] 84%|████████▍ | 62/74 [52:04<10:06, 50.56s/it] 85%|████████▌ | 63/74 [53:22<10:48, 58.93s/it] 86%|████████▋ | 64/74 [54:25<10:01, 60.11s/it] 88%|████████▊ | 65/74 [55:01<07:55, 52.79s/it] 89%|████████▉ | 66/74 [55:26<05:54, 44.36s/it] 91%|█████████ | 67/74 [57:45<08:30, 72.96s/it] 92%|█████████▏| 68/74 [58:15<06:00, 60.05s/it] 93%|█████████▎| 69/74 [59:05<04:44, 56.92s/it] 95%|█████████▍| 70/74 [59:31<03:10, 47.70s/it] 96%|█████████▌| 71/74 [1:00:00<02:06, 42.08s/it] 97%|█████████▋| 72/74 [1:00:31<01:17, 38.91s/it] 99%|█████████▊| 73/74 [1:01:08<00:38, 38.30s/it]100%|██████████| 74/74 [1:01:29<00:00, 33.02s/it]100%|██████████| 74/74 [1:01:29<00:00, 49.86s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val with 35,466 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 6it [00:00, 56.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 12it [00:00, 52.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 22it [00:00, 68.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 30it [00:00, 69.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 43it [00:00, 85.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 52it [00:00, 80.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 61it [00:00, 80.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 70it [00:00, 71.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 78it [00:01, 66.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 85it [00:01, 66.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 93it [00:01, 67.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 105it [00:01, 78.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 114it [00:01, 78.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 126it [00:01, 87.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 135it [00:01, 85.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 144it [00:01, 77.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 155it [00:02, 85.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 164it [00:02, 83.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 173it [00:02, 79.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 186it [00:02, 90.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 205it [00:02, 116.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 215it [00:02, 85.29it/s] INFO:root:Using meta information from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleINFO:root:Using train file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_train.pickleINFO:root:Using test file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_test.pickleINFO:root:Using val file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_val.pickleINFO:root:Tokenzier created based on 7,555,415,275 tokensINFO:root:Using tabular tokenizer, created from meta information and containing 265 tokensINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train/ dataset, with 601,506 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test/ dataset, with 37,390 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val/ dataset, with 35,466 samples601506 training patients35466 validation patients37390 test patients265 vocab elementspybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.is_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: Noneoptim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [01:24<31:09:59, 84.42s/it]  0%|          | 2/1330 [04:21<51:20:28, 139.18s/it]  0%|          | 3/1330 [05:40<41:03:58, 111.41s/it]  0%|          | 4/1330 [06:56<35:56:46, 97.59s/it]   0%|          | 5/1330 [08:02<31:44:54, 86.26s/it]  0%|          | 6/1330 [08:56<27:35:03, 75.00s/it]  1%|          | 7/1330 [10:04<26:43:50, 72.74s/it]  1%|          | 8/1330 [11:04<25:15:24, 68.78s/it]  1%|          | 9/1330 [12:08<24:43:58, 67.40s/it]  1%|          | 10/1330 [14:09<30:46:28, 83.93s/it]  1%|          | 11/1330 [15:17<28:53:48, 78.87s/it]  1%|          | 12/1330 [16:15<26:34:44, 72.60s/it]  1%|          | 13/1330 [17:14<25:04:40, 68.55s/it]  1%|          | 14/1330 [18:17<24:24:58, 66.79s/it]  1%|          | 15/1330 [19:16<23:34:12, 64.53s/it]  1%|          | 16/1330 [21:57<34:10:57, 93.65s/it]  1%|▏         | 17/1330 [23:14<32:14:05, 88.38s/it]  1%|▏         | 18/1330 [24:29<30:45:38, 84.40s/it]  1%|▏         | 19/1330 [25:51<30:27:31, 83.64s/it]  2%|▏         | 20/1330 [27:40<33:12:18, 91.25s/it]  2%|▏         | 21/1330 [30:50<43:58:19, 120.93s/it]  2%|▏         | 22/1330 [35:20<60:13:32, 165.76s/it]  2%|▏         | 23/1330 [36:24<49:06:29, 135.26s/it]  2%|▏         | 24/1330 [37:24<40:50:08, 112.56s/it]  2%|▏         | 25/1330 [38:15<34:11:01, 94.30s/it]   2%|▏         | 26/1330 [39:50<34:11:24, 94.39s/it]  2%|▏         | 27/1330 [40:59<31:26:43, 86.88s/it]  2%|▏         | 28/1330 [41:59<28:30:32, 78.83s/it]  2%|▏         | 29/1330 [44:00<33:03:04, 91.46s/it]  2%|▏         | 30/1330 [45:40<33:57:48, 94.05s/it]  2%|▏         | 31/1330 [47:12<33:40:01, 93.30s/it]  2%|▏         | 32/1330 [48:17<30:32:13, 84.69s/it]  2%|▏         | 33/1330 [49:18<27:58:29, 77.65s/it]  3%|▎         | 34/1330 [50:10<25:11:17, 69.97s/it]  3%|▎         | 35/1330 [51:15<24:40:58, 68.62s/it]  3%|▎         | 36/1330 [52:12<23:24:18, 65.12s/it]  3%|▎         | 37/1330 [53:07<22:13:25, 61.88s/it]  3%|▎         | 38/1330 [54:13<22:39:30, 63.14s/it]  3%|▎         | 39/1330 [55:04<21:24:02, 59.68s/it]  3%|▎         | 40/1330 [56:04<21:20:30, 59.56s/it]  3%|▎         | 41/1330 [57:18<22:52:46, 63.90s/it]  3%|▎         | 42/1330 [1:02:15<47:54:07, 133.89s/it]  3%|▎         | 43/1330 [1:03:13<39:48:14, 111.34s/it]  3%|▎         | 44/1330 [1:05:36<43:06:13, 120.66s/it]  3%|▎         | 45/1330 [1:07:18<41:02:22, 114.97s/it]  3%|▎         | 46/1330 [1:08:28<36:15:20, 101.65s/it]  4%|▎         | 47/1330 [1:21:27<108:39:43, 304.90s/it]  4%|▎         | 48/1330 [1:23:18<87:50:10, 246.65s/it]   4%|▎         | 49/1330 [1:25:57<78:24:47, 220.37s/it]  4%|▍         | 50/1330 [1:28:03<68:17:54, 192.09s/it]  4%|▍         | 51/1330 [1:29:18<55:45:15, 156.93s/it]  4%|▍         | 52/1330 [1:30:33<46:59:45, 132.38s/it]  4%|▍         | 53/1330 [1:32:02<42:22:21, 119.45s/it]  4%|▍         | 54/1330 [1:33:10<36:51:15, 103.98s/it]  4%|▍         | 55/1330 [1:34:06<31:43:08, 89.56s/it]   4%|▍         | 56/1330 [1:35:19<29:55:43, 84.57s/it]  4%|▍         | 57/1330 [1:37:25<34:16:43, 96.94s/it]  4%|▍         | 58/1330 [1:38:39<31:47:53, 90.00s/it]  4%|▍         | 59/1330 [1:39:34<28:07:51, 79.68s/it]  5%|▍         | 60/1330 [1:41:45<33:27:12, 94.83s/it]  5%|▍         | 61/1330 [1:42:43<29:33:42, 83.86s/it]  5%|▍         | 62/1330 [1:44:13<30:14:51, 85.88s/it]  5%|▍         | 63/1330 [1:47:40<43:00:16, 122.19s/it]  5%|▍         | 64/1330 [1:49:25<41:10:26, 117.08s/it]  5%|▍         | 65/1330 [1:50:20<34:34:00, 98.37s/it]   5%|▍         | 66/1330 [1:51:28<31:17:17, 89.11s/it]  5%|▌         | 67/1330 [1:53:42<36:01:40, 102.69s/it]  5%|▌         | 68/1330 [1:54:51<32:28:11, 92.62s/it]   5%|▌         | 69/1330 [1:56:06<30:33:20, 87.23s/it]  5%|▌         | 70/1330 [1:57:07<27:45:56, 79.33s/it]  5%|▌         | 71/1330 [1:58:08<25:53:06, 74.02s/it]  5%|▌         | 72/1330 [2:00:11<31:00:20, 88.73s/it]  5%|▌         | 73/1330 [2:01:41<31:02:45, 88.91s/it]  6%|▌         | 74/1330 [2:02:53<29:16:08, 83.89s/it]  6%|▌         | 75/1330 [2:03:55<26:59:56, 77.45s/it]  6%|▌         | 76/1330 [2:05:02<25:50:28, 74.19s/it]  6%|▌         | 77/1330 [2:06:59<30:17:30, 87.03s/it]  6%|▌         | 78/1330 [2:08:02<27:45:54, 79.84s/it]  6%|▌         | 79/1330 [2:10:04<32:05:48, 92.36s/it]  6%|▌         | 80/1330 [2:11:10<29:25:07, 84.73s/it]  6%|▌         | 81/1330 [2:12:04<26:10:53, 75.46s/it]  6%|▌         | 82/1330 [2:12:58<23:56:21, 69.06s/it]  6%|▌         | 83/1330 [2:14:56<28:59:22, 83.69s/it]  6%|▋         | 84/1330 [2:15:43<25:09:36, 72.69s/it]  6%|▋         | 85/1330 [2:16:26<21:59:44, 63.60s/it]  6%|▋         | 86/1330 [2:17:17<20:43:12, 59.96s/it]  7%|▋         | 87/1330 [2:18:16<20:34:56, 59.61s/it]  7%|▋         | 88/1330 [2:19:57<24:49:07, 71.94s/it]  7%|▋         | 89/1330 [2:20:54<23:20:14, 67.70s/it]  7%|▋         | 90/1330 [2:28:40<64:23:05, 186.92s/it]  7%|▋         | 91/1330 [2:30:20<55:26:25, 161.09s/it]  7%|▋         | 92/1330 [2:31:05<43:21:06, 126.06s/it]  7%|▋         | 93/1330 [2:32:05<36:31:48, 106.31s/it]  7%|▋         | 94/1330 [2:32:51<30:16:56, 88.20s/it]   7%|▋         | 95/1330 [2:33:44<26:38:27, 77.66s/it]  7%|▋         | 96/1330 [2:34:42<24:34:37, 71.70s/it]  7%|▋         | 97/1330 [2:35:58<24:58:50, 72.94s/it]  7%|▋         | 98/1330 [2:38:10<31:05:18, 90.84s/it]  7%|▋         | 99/1330 [2:39:05<27:24:24, 80.15s/it]  8%|▊         | 100/1330 [2:40:10<25:50:25, 75.63s/it]  8%|▊         | 101/1330 [2:43:15<36:59:55, 108.38s/it]  8%|▊         | 102/1330 [2:44:11<31:34:16, 92.55s/it]   8%|▊         | 103/1330 [2:48:01<45:38:27, 133.91s/it]  8%|▊         | 104/1330 [2:48:51<36:57:17, 108.51s/it]  8%|▊         | 105/1330 [2:50:00<32:53:37, 96.67s/it]   8%|▊         | 106/1330 [2:50:46<27:45:48, 81.66s/it]  8%|▊         | 107/1330 [2:53:32<36:19:20, 106.92s/it]  8%|▊         | 108/1330 [2:54:14<29:37:43, 87.29s/it]   8%|▊         | 109/1330 [2:54:57<25:05:57, 74.00s/it]  8%|▊         | 110/1330 [2:55:37<21:42:23, 64.05s/it]  8%|▊         | 111/1330 [2:57:14<24:59:48, 73.82s/it]  8%|▊         | 112/1330 [3:00:52<39:39:16, 117.21s/it]  8%|▊         | 113/1330 [3:01:48<33:22:39, 98.73s/it]   9%|▊         | 114/1330 [3:03:05<31:09:20, 92.24s/it]  9%|▊         | 115/1330 [3:04:16<28:57:00, 85.78s/it]  9%|▊         | 116/1330 [3:06:11<31:53:48, 94.59s/it]  9%|▉         | 117/1330 [3:07:06<27:51:32, 82.68s/it]  9%|▉         | 118/1330 [3:07:53<24:17:08, 72.14s/it]  9%|▉         | 119/1330 [3:08:41<21:45:16, 64.67s/it]  9%|▉         | 120/1330 [3:12:38<39:06:27, 116.35s/it]  9%|▉         | 121/1330 [3:13:28<32:27:59, 96.67s/it]   9%|▉         | 122/1330 [3:14:18<27:40:22, 82.47s/it]  9%|▉         | 123/1330 [3:15:10<24:39:18, 73.54s/it]  9%|▉         | 124/1330 [3:17:58<34:04:43, 101.73s/it]  9%|▉         | 125/1330 [3:19:01<30:09:46, 90.11s/it]   9%|▉         | 126/1330 [3:19:39<24:56:03, 74.55s/it] 10%|▉         | 127/1330 [3:20:14<20:55:35, 62.62s/it] 10%|▉         | 128/1330 [3:22:35<28:46:09, 86.16s/it] 10%|▉         | 129/1330 [3:23:16<24:15:47, 72.73s/it] 10%|▉         | 130/1330 [3:24:12<22:30:20, 67.52s/it] 10%|▉         | 131/1330 [3:24:57<20:16:17, 60.87s/it] 10%|▉         | 132/1330 [3:27:41<30:35:03, 91.91s/it] 10%|█         | 133/1330 [3:34:56<64:45:06, 194.74s/it] 10%|█         | 134/1330 [3:36:23<53:53:55, 162.24s/it] 10%|█         | 135/1330 [3:37:22<43:35:29, 131.32s/it] 10%|█         | 136/1330 [3:38:16<35:50:06, 108.05s/it] 10%|█         | 137/1330 [3:39:18<31:15:54, 94.35s/it]  10%|█         | 138/1330 [3:40:29<28:57:19, 87.45s/it] 10%|█         | 139/1330 [3:41:22<25:30:10, 77.09s/it] 11%|█         | 140/1330 [3:42:01<21:38:56, 65.49s/it] 11%|█         | 141/1330 [3:42:40<19:02:09, 57.64s/it] 11%|█         | 142/1330 [3:43:26<17:51:51, 54.13s/it] 11%|█         | 143/1330 [3:44:15<17:19:30, 52.54s/it] 11%|█         | 144/1330 [3:45:12<17:43:59, 53.83s/it] 11%|█         | 145/1330 [3:48:09<29:58:38, 91.07s/it] 11%|█         | 146/1330 [3:49:19<27:49:59, 84.63s/it] 11%|█         | 147/1330 [3:50:55<28:56:11, 88.06s/it] 11%|█         | 148/1330 [3:52:05<27:08:28, 82.66s/it] 11%|█         | 149/1330 [3:53:45<28:48:12, 87.80s/it] 11%|█▏        | 150/1330 [3:55:10<28:30:45, 86.99s/it] 11%|█▏        | 151/1330 [3:55:51<23:55:27, 73.05s/it] 11%|█▏        | 152/1330 [3:56:25<20:05:09, 61.38s/it] 12%|█▏        | 153/1330 [3:57:00<17:29:44, 53.51s/it] 12%|█▏        | 154/1330 [3:57:36<15:44:30, 48.19s/it] 12%|█▏        | 155/1330 [3:58:22<15:30:18, 47.50s/it] 12%|█▏        | 156/1330 [3:59:46<19:03:43, 58.45s/it] 12%|█▏        | 157/1330 [4:00:35<18:10:17, 55.77s/it] 12%|█▏        | 158/1330 [4:01:49<19:57:48, 61.32s/it] 12%|█▏        | 159/1330 [4:03:00<20:50:53, 64.09s/it] 12%|█▏        | 160/1330 [4:03:42<18:42:35, 57.57s/it] 12%|█▏        | 161/1330 [4:04:24<17:06:56, 52.71s/it] 12%|█▏        | 162/1330 [4:05:01<15:36:18, 48.10s/it] 12%|█▏        | 163/1330 [4:11:52<50:54:09, 157.03s/it] 12%|█▏        | 164/1330 [4:13:22<44:19:48, 136.87s/it] 12%|█▏        | 165/1330 [4:14:48<39:22:58, 121.70s/it] 12%|█▏        | 166/1330 [4:16:24<36:52:13, 114.03s/it] 13%|█▎        | 167/1330 [4:17:13<30:28:11, 94.32s/it]  13%|█▎        | 168/1330 [4:17:55<25:22:57, 78.64s/it] 13%|█▎        | 169/1330 [4:18:44<22:31:52, 69.86s/it] 13%|█▎        | 170/1330 [4:19:52<22:20:13, 69.32s/it] 13%|█▎        | 171/1330 [4:20:49<21:06:17, 65.55s/it] 13%|█▎        | 172/1330 [4:22:48<26:15:01, 81.61s/it] 13%|█▎        | 173/1330 [4:23:34<22:47:41, 70.93s/it] 13%|█▎        | 174/1330 [4:24:45<22:45:12, 70.86s/it] 13%|█▎        | 175/1330 [4:25:26<19:50:32, 61.85s/it] 13%|█▎        | 176/1330 [4:26:13<18:28:41, 57.64s/it] 13%|█▎        | 177/1330 [4:26:58<17:10:34, 53.63s/it] 13%|█▎        | 178/1330 [4:27:39<16:00:05, 50.00s/it] 13%|█▎        | 179/1330 [4:29:15<20:23:38, 63.79s/it] 14%|█▎        | 180/1330 [4:30:00<18:35:29, 58.20s/it] 14%|█▎        | 181/1330 [4:30:43<17:02:40, 53.40s/it] 14%|█▎        | 182/1330 [4:31:27<16:07:20, 50.56s/it] 14%|█▍        | 183/1330 [4:33:53<25:16:22, 79.32s/it] 14%|█▍        | 184/1330 [4:34:45<22:41:01, 71.26s/it] 14%|█▍        | 185/1330 [4:35:24<19:32:03, 61.42s/it] 14%|█▍        | 186/1330 [4:36:16<18:38:24, 58.66s/it] 14%|█▍        | 187/1330 [4:37:08<18:00:55, 56.74s/it] 14%|█▍        | 188/1330 [4:37:47<16:17:41, 51.37s/it] 14%|█▍        | 189/1330 [4:38:27<15:10:27, 47.88s/it] 14%|█▍        | 190/1330 [4:39:10<14:39:54, 46.31s/it] 14%|█▍        | 191/1330 [4:40:24<17:19:20, 54.75s/it] 14%|█▍        | 192/1330 [4:41:10<16:29:24, 52.17s/it] 15%|█▍        | 193/1330 [4:43:07<22:33:57, 71.45s/it] 15%|█▍        | 194/1330 [4:43:56<20:26:31, 64.78s/it] 15%|█▍        | 195/1330 [4:44:35<17:57:37, 56.97s/it] 15%|█▍        | 196/1330 [4:45:10<15:54:47, 50.52s/it] 15%|█▍        | 197/1330 [4:46:34<19:02:23, 60.50s/it] 15%|█▍        | 198/1330 [4:47:16<17:19:33, 55.10s/it] 15%|█▍        | 199/1330 [4:53:43<48:33:48, 154.58s/it] 15%|█▌        | 200/1330 [4:56:55<52:01:22, 165.74s/it] 15%|█▌        | 201/1330 [4:58:34<45:43:34, 145.81s/it] 15%|█▌        | 202/1330 [5:00:19<41:53:06, 133.68s/it] 15%|█▌        | 203/1330 [5:01:12<34:16:15, 109.47s/it] 15%|█▌        | 204/1330 [5:01:57<28:06:44, 89.88s/it]  15%|█▌        | 205/1330 [5:02:32<23:01:18, 73.67s/it] 15%|█▌        | 206/1330 [5:03:08<19:26:43, 62.28s/it] 16%|█▌        | 207/1330 [5:08:46<45:12:18, 144.91s/it] 16%|█▌        | 208/1330 [5:09:47<37:19:12, 119.74s/it] 16%|█▌        | 209/1330 [5:10:19<29:08:25, 93.58s/it]  16%|█▌        | 210/1330 [5:10:54<23:33:54, 75.75s/it] 16%|█▌        | 211/1330 [5:11:59<22:37:44, 72.80s/it] 16%|█▌        | 212/1330 [5:12:44<19:56:18, 64.20s/it] 16%|█▌        | 213/1330 [5:13:24<17:41:27, 57.02s/it] 16%|█▌        | 214/1330 [5:14:04<16:08:18, 52.06s/it] 16%|█▌        | 215/1330 [5:14:44<14:59:39, 48.41s/it] 16%|█▌        | 216/1330 [5:15:47<16:18:03, 52.68s/it] 16%|█▋        | 217/1330 [5:16:40<16:17:31, 52.70s/it] 16%|█▋        | 218/1330 [5:17:40<16:57:04, 54.88s/it] 16%|█▋        | 219/1330 [5:24:25<49:23:16, 160.03s/it] 17%|█▋        | 220/1330 [5:25:15<39:08:09, 126.93s/it] 17%|█▋        | 221/1330 [5:27:24<39:17:20, 127.54s/it] 17%|█▋        | 222/1330 [5:28:20<32:38:10, 106.04s/it] 17%|█▋        | 223/1330 [5:31:28<40:13:28, 130.81s/it] 17%|█▋        | 224/1330 [5:32:22<33:05:52, 107.73s/it] 17%|█▋        | 225/1330 [5:33:06<27:12:02, 88.62s/it]  17%|█▋        | 226/1330 [5:36:46<39:14:05, 127.94s/it] 17%|█▋        | 227/1330 [5:38:03<34:30:19, 112.62s/it] 17%|█▋        | 228/1330 [5:39:26<31:47:26, 103.85s/it] 17%|█▋        | 229/1330 [5:40:24<27:34:04, 90.14s/it]  17%|█▋        | 230/1330 [5:41:06<23:04:53, 75.54s/it] 17%|█▋        | 231/1330 [5:41:47<19:56:31, 65.32s/it] 17%|█▋        | 232/1330 [5:42:30<17:50:12, 58.48s/it] 18%|█▊        | 233/1330 [5:48:37<46:03:42, 151.16s/it] 18%|█▊        | 234/1330 [5:49:24<36:32:27, 120.02s/it] 18%|█▊        | 235/1330 [5:50:15<30:11:27, 99.26s/it]  18%|█▊        | 236/1330 [5:51:07<25:48:58, 84.95s/it] 18%|█▊        | 237/1330 [5:51:46<21:38:13, 71.27s/it] 18%|█▊        | 238/1330 [5:53:47<26:06:32, 86.07s/it] 18%|█▊        | 239/1330 [5:54:54<24:22:28, 80.43s/it] 18%|█▊        | 240/1330 [5:55:56<22:38:01, 74.75s/it] 18%|█▊        | 241/1330 [5:56:37<19:37:37, 64.88s/it] 18%|█▊        | 242/1330 [5:58:05<21:42:36, 71.84s/it] 18%|█▊        | 243/1330 [5:58:49<19:07:53, 63.36s/it] 18%|█▊        | 244/1330 [5:59:27<16:47:46, 55.68s/it] 18%|█▊        | 245/1330 [6:00:19<16:29:18, 54.71s/it] 18%|█▊        | 246/1330 [6:01:42<18:58:26, 63.01s/it] 19%|█▊        | 247/1330 [6:02:44<18:56:08, 62.94s/it] 19%|█▊        | 248/1330 [6:03:32<17:31:53, 58.33s/it] 19%|█▊        | 249/1330 [6:04:30<17:26:56, 58.11s/it] 19%|█▉        | 250/1330 [6:05:21<16:47:26, 55.97s/it] 19%|█▉        | 251/1330 [6:07:23<22:43:21, 75.81s/it] 19%|█▉        | 252/1330 [6:15:21<58:52:04, 196.59s/it] 19%|█▉        | 253/1330 [6:17:04<50:27:07, 168.64s/it] 19%|█▉        | 254/1330 [6:20:26<53:21:58, 178.55s/it] 19%|█▉        | 255/1330 [6:21:29<42:59:55, 144.00s/it] 19%|█▉        | 256/1330 [6:22:33<35:45:57, 119.89s/it] 19%|█▉        | 257/1330 [6:29:48<63:56:30, 214.53s/it] 19%|█▉        | 258/1330 [6:30:59<51:03:25, 171.46s/it] 19%|█▉        | 259/1330 [6:31:42<39:27:35, 132.64s/it] 20%|█▉        | 260/1330 [6:32:22<31:13:42, 105.07s/it] 20%|█▉        | 261/1330 [6:33:01<25:19:13, 85.27s/it]  20%|█▉        | 262/1330 [6:33:44<21:29:31, 72.45s/it] 20%|█▉        | 263/1330 [6:35:21<23:40:55, 79.90s/it] 20%|█▉        | 264/1330 [6:36:26<22:17:41, 75.29s/it] 20%|█▉        | 265/1330 [6:37:27<21:03:18, 71.17s/it] 20%|██        | 266/1330 [6:38:16<19:02:45, 64.44s/it] 20%|██        | 267/1330 [6:39:07<17:52:39, 60.54s/it] 20%|██        | 268/1330 [6:43:31<35:49:30, 121.44s/it] 20%|██        | 269/1330 [6:44:40<31:09:37, 105.73s/it] 20%|██        | 270/1330 [6:45:28<26:04:22, 88.55s/it]  20%|██        | 271/1330 [6:46:55<25:52:06, 87.94s/it] 20%|██        | 272/1330 [6:47:59<23:42:34, 80.68s/it] 21%|██        | 273/1330 [6:50:28<29:41:45, 101.14s/it] 21%|██        | 274/1330 [6:51:33<26:33:10, 90.52s/it]  21%|██        | 275/1330 [6:52:32<23:43:30, 80.96s/it] 21%|██        | 276/1330 [6:54:54<29:02:32, 99.20s/it] 21%|██        | 277/1330 [6:56:40<29:36:26, 101.22s/it] 21%|██        | 278/1330 [6:57:29<24:59:56, 85.55s/it]  21%|██        | 279/1330 [6:58:24<22:19:11, 76.45s/it] 21%|██        | 280/1330 [7:00:03<24:18:04, 83.32s/it] 21%|██        | 281/1330 [7:00:58<21:46:39, 74.74s/it] 21%|██        | 282/1330 [7:01:53<20:01:17, 68.78s/it] 21%|██▏       | 283/1330 [7:02:46<18:37:49, 64.06s/it] 21%|██▏       | 284/1330 [7:03:41<17:49:29, 61.35s/it] 21%|██▏       | 285/1330 [7:04:52<18:40:55, 64.36s/it] 22%|██▏       | 286/1330 [7:06:11<19:57:06, 68.80s/it] 22%|██▏       | 287/1330 [7:07:26<20:24:35, 70.45s/it] 22%|██▏       | 288/1330 [7:08:12<18:17:21, 63.19s/it] 22%|██▏       | 289/1330 [7:09:03<17:13:26, 59.56s/it] 22%|██▏       | 290/1330 [7:12:13<28:29:35, 98.63s/it] 22%|██▏       | 291/1330 [7:13:28<26:25:17, 91.55s/it] 22%|██▏       | 292/1330 [7:14:27<23:35:55, 81.85s/it] 22%|██▏       | 293/1330 [7:15:56<24:08:59, 83.84s/it] 22%|██▏       | 294/1330 [7:17:35<25:25:52, 88.37s/it] 22%|██▏       | 295/1330 [7:18:21<21:48:38, 75.86s/it] 22%|██▏       | 296/1330 [7:19:02<18:44:07, 65.23s/it] 22%|██▏       | 297/1330 [7:19:43<16:39:55, 58.08s/it] 22%|██▏       | 298/1330 [7:20:27<15:27:26, 53.92s/it] 22%|██▏       | 299/1330 [7:21:29<16:08:11, 56.34s/it] 23%|██▎       | 300/1330 [7:24:02<24:25:56, 85.39s/it] 23%|██▎       | 301/1330 [7:24:47<20:54:25, 73.14s/it] 23%|██▎       | 302/1330 [7:25:59<20:46:44, 72.77s/it] 23%|██▎       | 303/1330 [7:27:13<20:50:30, 73.06s/it] 23%|██▎       | 304/1330 [7:28:01<18:44:05, 65.74s/it] 23%|██▎       | 305/1330 [7:28:53<17:31:14, 61.54s/it] 23%|██▎       | 306/1330 [7:30:34<20:50:17, 73.26s/it] 23%|██▎       | 307/1330 [7:31:27<19:09:06, 67.40s/it] 23%|██▎       | 308/1330 [7:32:38<19:27:04, 68.52s/it] 23%|██▎       | 309/1330 [7:35:09<26:25:05, 93.15s/it] 23%|██▎       | 310/1330 [7:36:02<22:57:38, 81.04s/it] 23%|██▎       | 311/1330 [7:37:05<21:23:27, 75.57s/it] 23%|██▎       | 312/1330 [7:38:46<23:34:07, 83.35s/it] 24%|██▎       | 313/1330 [7:39:35<20:38:07, 73.05s/it] 24%|██▎       | 314/1330 [7:40:38<19:47:21, 70.12s/it] 24%|██▎       | 315/1330 [7:42:37<23:53:48, 84.76s/it] 24%|██▍       | 316/1330 [7:43:41<22:05:38, 78.44s/it] 24%|██▍       | 317/1330 [7:44:37<20:09:01, 71.61s/it] 24%|██▍       | 318/1330 [7:47:13<27:15:36, 96.97s/it] 24%|██▍       | 319/1330 [7:48:28<25:24:55, 90.50s/it] 24%|██▍       | 320/1330 [7:50:41<28:54:18, 103.03s/it] 24%|██▍       | 321/1330 [7:51:31<24:24:58, 87.11s/it]  24%|██▍       | 322/1330 [7:53:08<25:16:39, 90.28s/it] 24%|██▍       | 323/1330 [7:54:15<23:15:04, 83.12s/it] 24%|██▍       | 324/1330 [7:55:33<22:48:54, 81.64s/it] 24%|██▍       | 325/1330 [7:57:18<24:45:08, 88.67s/it] 25%|██▍       | 326/1330 [7:59:19<27:28:15, 98.50s/it] 25%|██▍       | 327/1330 [8:00:15<23:52:12, 85.68s/it] 25%|██▍       | 328/1330 [8:01:14<21:34:13, 77.50s/it] 25%|██▍       | 329/1330 [8:02:01<19:05:08, 68.64s/it] 25%|██▍       | 330/1330 [8:03:38<21:22:14, 76.93s/it] 25%|██▍       | 331/1330 [8:04:37<19:50:16, 71.49s/it] 25%|██▍       | 332/1330 [8:06:40<24:08:45, 87.10s/it] 25%|██▌       | 333/1330 [8:15:09<59:09:28, 213.61s/it] 25%|██▌       | 334/1330 [8:16:09<46:22:09, 167.60s/it] 25%|██▌       | 335/1330 [8:17:14<37:47:23, 136.73s/it] 25%|██▌       | 336/1330 [8:18:25<32:17:17, 116.94s/it] 25%|██▌       | 337/1330 [8:19:12<26:28:04, 95.96s/it]  25%|██▌       | 338/1330 [8:19:49<21:37:14, 78.46s/it] 25%|██▌       | 339/1330 [8:20:37<19:04:37, 69.30s/it] 26%|██▌       | 340/1330 [8:21:36<18:12:23, 66.21s/it] 26%|██▌       | 341/1330 [8:22:24<16:40:18, 60.69s/it] 26%|██▌       | 342/1330 [8:23:31<17:10:36, 62.59s/it] 26%|██▌       | 343/1330 [8:24:19<15:58:06, 58.24s/it] 26%|██▌       | 344/1330 [8:25:32<17:08:47, 62.60s/it] 26%|██▌       | 345/1330 [8:26:31<16:51:13, 61.60s/it] 26%|██▌       | 346/1330 [8:27:25<16:13:28, 59.36s/it] 26%|██▌       | 347/1330 [8:28:29<16:35:16, 60.75s/it] 26%|██▌       | 348/1330 [8:30:37<22:01:25, 80.74s/it] 26%|██▌       | 349/1330 [8:31:42<20:42:39, 76.00s/it] 26%|██▋       | 350/1330 [8:32:51<20:11:14, 74.16s/it] 26%|██▋       | 351/1330 [8:33:41<18:07:37, 66.66s/it] 26%|██▋       | 352/1330 [8:34:32<16:53:43, 62.19s/it] 27%|██▋       | 353/1330 [8:35:45<17:45:48, 65.45s/it] 27%|██▋       | 354/1330 [8:36:46<17:22:53, 64.11s/it] 27%|██▋       | 355/1330 [8:44:40<50:36:21, 186.85s/it] 27%|██▋       | 356/1330 [8:45:33<39:45:18, 146.94s/it] 27%|██▋       | 357/1330 [8:47:21<36:32:34, 135.20s/it] 27%|██▋       | 358/1330 [8:48:08<29:21:17, 108.72s/it] 27%|██▋       | 359/1330 [8:49:53<29:01:25, 107.61s/it] 27%|██▋       | 360/1330 [8:50:46<24:32:53, 91.11s/it]  27%|██▋       | 361/1330 [8:51:39<21:26:57, 79.69s/it] 27%|██▋       | 362/1330 [8:53:00<21:31:03, 80.02s/it] 27%|██▋       | 363/1330 [8:54:21<21:35:53, 80.41s/it] 27%|██▋       | 364/1330 [8:55:38<21:18:43, 79.42s/it] 27%|██▋       | 365/1330 [8:58:45<29:55:20, 111.63s/it] 28%|██▊       | 366/1330 [9:01:25<33:47:12, 126.17s/it] 28%|██▊       | 367/1330 [9:02:15<27:40:05, 103.43s/it] 28%|██▊       | 368/1330 [9:03:15<24:07:02, 90.25s/it]  28%|██▊       | 369/1330 [9:04:00<20:27:06, 76.61s/it] 28%|██▊       | 370/1330 [9:04:43<17:47:32, 66.72s/it] 28%|██▊       | 371/1330 [9:09:04<33:16:39, 124.92s/it] 28%|██▊       | 372/1330 [9:10:59<32:26:49, 121.93s/it] 28%|██▊       | 373/1330 [9:12:34<30:18:07, 113.99s/it] 28%|██▊       | 374/1330 [9:13:55<27:34:13, 103.82s/it] 28%|██▊       | 375/1330 [9:14:50<23:39:57, 89.21s/it]  28%|██▊       | 376/1330 [9:15:51<21:24:59, 80.82s/it] 28%|██▊       | 377/1330 [9:17:01<20:30:45, 77.49s/it] 28%|██▊       | 378/1330 [9:18:14<20:11:35, 76.36s/it] 28%|██▊       | 379/1330 [9:20:14<23:35:44, 89.32s/it] 29%|██▊       | 380/1330 [9:21:17<21:31:37, 81.58s/it] 29%|██▊       | 381/1330 [9:22:22<20:11:47, 76.62s/it] 29%|██▊       | 382/1330 [9:27:45<39:36:36, 150.42s/it] 29%|██▉       | 383/1330 [9:28:42<32:11:33, 122.38s/it] 29%|██▉       | 384/1330 [9:30:09<29:21:15, 111.71s/it] 29%|██▉       | 385/1330 [9:39:56<66:47:00, 254.41s/it] 29%|██▉       | 386/1330 [9:45:34<73:15:25, 279.37s/it] 29%|██▉       | 387/1330 [9:46:26<55:20:36, 211.28s/it] 29%|██▉       | 388/1330 [9:47:23<43:07:16, 164.79s/it] 29%|██▉       | 389/1330 [9:48:08<33:44:05, 129.06s/it] 29%|██▉       | 390/1330 [9:51:19<38:31:08, 147.52s/it] 29%|██▉       | 391/1330 [9:52:34<32:48:40, 125.79s/it] 29%|██▉       | 392/1330 [9:54:18<31:04:09, 119.24s/it] 30%|██▉       | 393/1330 [9:55:15<26:12:28, 100.69s/it] 30%|██▉       | 394/1330 [9:56:18<23:14:00, 89.36s/it]  30%|██▉       | 395/1330 [9:57:06<20:00:06, 77.01s/it] 30%|██▉       | 396/1330 [9:58:32<20:37:25, 79.49s/it] 30%|██▉       | 397/1330 [10:00:31<23:41:45, 91.43s/it] 30%|██▉       | 398/1330 [10:01:49<22:39:47, 87.54s/it] 30%|███       | 399/1330 [10:04:54<30:12:01, 116.78s/it] 30%|███       | 400/1330 [10:05:58<26:02:12, 100.79s/it] 30%|███       | 401/1330 [10:07:18<24:24:12, 94.57s/it]  30%|███       | 402/1330 [10:08:22<21:58:48, 85.27s/it] 30%|███       | 403/1330 [10:09:47<22:00:23, 85.46s/it] 30%|███       | 404/1330 [10:10:53<20:26:13, 79.45s/it] 30%|███       | 405/1330 [10:13:33<26:36:07, 103.53s/it] 31%|███       | 406/1330 [10:14:33<23:14:01, 90.52s/it]  31%|███       | 407/1330 [10:15:53<22:27:20, 87.58s/it] 31%|███       | 408/1330 [10:17:08<21:25:14, 83.64s/it] 31%|███       | 409/1330 [10:18:42<22:12:12, 86.79s/it] 31%|███       | 410/1330 [10:20:03<21:45:55, 85.17s/it] 31%|███       | 411/1330 [10:21:12<20:29:44, 80.29s/it] 31%|███       | 412/1330 [10:23:09<23:14:45, 91.16s/it] 31%|███       | 413/1330 [10:25:08<25:20:12, 99.47s/it] 31%|███       | 414/1330 [10:26:07<22:16:39, 87.55s/it] 31%|███       | 415/1330 [10:27:10<20:19:04, 79.94s/it] 31%|███▏      | 416/1330 [10:28:05<18:27:14, 72.69s/it] 31%|███▏      | 417/1330 [10:29:19<18:28:25, 72.84s/it] 31%|███▏      | 418/1330 [10:30:14<17:08:53, 67.69s/it] 32%|███▏      | 419/1330 [10:31:15<16:37:38, 65.71s/it] 32%|███▏      | 420/1330 [10:32:25<16:54:33, 66.89s/it] 32%|███▏      | 421/1330 [10:33:19<15:54:11, 62.98s/it] 32%|███▏      | 422/1330 [10:34:13<15:11:03, 60.20s/it] 32%|███▏      | 423/1330 [10:34:58<14:04:42, 55.88s/it] 32%|███▏      | 424/1330 [10:35:46<13:27:04, 53.45s/it] 32%|███▏      | 425/1330 [10:37:19<16:22:40, 65.15s/it] 32%|███▏      | 426/1330 [10:38:39<17:28:44, 69.61s/it] 32%|███▏      | 427/1330 [10:39:30<16:06:59, 64.25s/it] 32%|███▏      | 428/1330 [10:46:10<41:17:32, 164.80s/it] 32%|███▏      | 429/1330 [10:49:30<43:54:49, 175.46s/it] 32%|███▏      | 430/1330 [10:50:33<35:26:13, 141.75s/it] 32%|███▏      | 431/1330 [10:51:43<29:59:42, 120.11s/it] 32%|███▏      | 432/1330 [10:52:31<24:36:41, 98.67s/it]  33%|███▎      | 433/1330 [10:54:56<28:02:07, 112.52s/it] 33%|███▎      | 434/1330 [10:56:05<24:42:48, 99.29s/it]  33%|███▎      | 435/1330 [10:56:53<20:53:24, 84.03s/it] 33%|███▎      | 436/1330 [10:57:54<19:06:14, 76.93s/it] 33%|███▎      | 437/1330 [11:00:34<25:19:53, 102.12s/it] 33%|███▎      | 438/1330 [11:01:40<22:35:47, 91.20s/it]  33%|███▎      | 439/1330 [11:02:26<19:12:59, 77.64s/it] 33%|███▎      | 440/1330 [11:03:22<17:35:32, 71.16s/it] 33%|███▎      | 441/1330 [11:04:13<16:02:11, 64.94s/it] 33%|███▎      | 442/1330 [11:05:01<14:47:35, 59.97s/it] 33%|███▎      | 443/1330 [11:06:37<17:27:20, 70.85s/it] 33%|███▎      | 444/1330 [11:07:44<17:10:19, 69.77s/it] 33%|███▎      | 445/1330 [11:08:37<15:51:32, 64.51s/it] 34%|███▎      | 446/1330 [11:09:46<16:11:52, 65.96s/it] 34%|███▎      | 447/1330 [11:10:46<15:46:06, 64.29s/it] 34%|███▎      | 448/1330 [11:11:37<14:46:09, 60.28s/it] 34%|███▍      | 449/1330 [11:17:28<36:04:27, 147.41s/it] 34%|███▍      | 450/1330 [11:18:20<28:59:46, 118.62s/it] 34%|███▍      | 451/1330 [11:19:26<25:08:44, 102.99s/it] 34%|███▍      | 452/1330 [11:20:52<23:53:41, 97.97s/it]  34%|███▍      | 453/1330 [11:22:01<21:41:55, 89.07s/it] 34%|███▍      | 454/1330 [11:22:54<19:06:20, 78.52s/it] 34%|███▍      | 455/1330 [11:24:31<20:23:00, 83.86s/it] 34%|███▍      | 456/1330 [11:25:30<18:35:21, 76.57s/it] 34%|███▍      | 457/1330 [11:26:31<17:24:05, 71.76s/it] 34%|███▍      | 458/1330 [11:27:25<16:06:07, 66.48s/it] 35%|███▍      | 459/1330 [11:29:24<19:55:27, 82.35s/it] 35%|███▍      | 460/1330 [11:30:25<18:17:57, 75.72s/it] 35%|███▍      | 461/1330 [11:39:43<53:15:29, 220.63s/it] 35%|███▍      | 462/1330 [11:40:38<41:08:50, 170.66s/it] 35%|███▍      | 463/1330 [11:41:21<31:56:11, 132.61s/it] 35%|███▍      | 464/1330 [11:42:21<26:37:59, 110.71s/it] 35%|███▍      | 465/1330 [11:43:06<21:51:47, 90.99s/it]  35%|███▌      | 466/1330 [11:43:47<18:13:22, 75.93s/it] 35%|███▌      | 467/1330 [11:46:47<25:42:43, 107.26s/it] 35%|███▌      | 468/1330 [11:47:49<22:23:26, 93.51s/it]  35%|███▌      | 469/1330 [11:49:30<22:56:49, 95.95s/it] 35%|███▌      | 470/1330 [11:50:43<21:14:49, 88.94s/it] 35%|███▌      | 471/1330 [11:51:34<18:30:00, 77.53s/it] 35%|███▌      | 472/1330 [11:52:12<15:42:37, 65.92s/it] 36%|███▌      | 473/1330 [11:53:47<17:42:19, 74.38s/it] 36%|███▌      | 474/1330 [11:54:31<15:34:31, 65.50s/it] 36%|███▌      | 475/1330 [11:55:14<13:53:58, 58.52s/it] 36%|███▌      | 476/1330 [11:56:11<13:48:38, 58.22s/it] 36%|███▌      | 477/1330 [11:56:52<12:32:50, 52.95s/it] 36%|███▌      | 478/1330 [11:58:15<14:39:52, 61.96s/it] 36%|███▌      | 479/1330 [11:59:30<15:34:54, 65.92s/it] 36%|███▌      | 480/1330 [12:00:30<15:10:29, 64.27s/it] 36%|███▌      | 481/1330 [12:03:09<21:50:26, 92.61s/it] 36%|███▌      | 482/1330 [12:04:00<18:50:30, 79.99s/it] 36%|███▋      | 483/1330 [12:05:34<19:51:19, 84.39s/it] 36%|███▋      | 484/1330 [12:06:21<17:08:31, 72.95s/it] 36%|███▋      | 485/1330 [12:08:04<19:16:35, 82.13s/it] 37%|███▋      | 486/1330 [12:09:09<18:02:25, 76.95s/it] 37%|███▋      | 487/1330 [12:10:21<17:41:24, 75.54s/it] 37%|███▋      | 488/1330 [12:11:18<16:20:31, 69.87s/it] 37%|███▋      | 489/1330 [12:16:24<32:51:48, 140.68s/it] 37%|███▋      | 490/1330 [12:17:41<28:23:25, 121.67s/it] 37%|███▋      | 491/1330 [12:18:43<24:09:02, 103.63s/it] 37%|███▋      | 492/1330 [12:19:47<21:23:20, 91.89s/it]  37%|███▋      | 493/1330 [12:20:31<18:02:59, 77.63s/it] 37%|███▋      | 494/1330 [12:22:07<19:17:03, 83.04s/it] 37%|███▋      | 495/1330 [12:23:03<17:22:44, 74.93s/it] 37%|███▋      | 496/1330 [12:23:57<15:55:39, 68.75s/it] 37%|███▋      | 497/1330 [12:25:27<17:19:30, 74.87s/it] 37%|███▋      | 498/1330 [12:26:10<15:05:58, 65.34s/it] 38%|███▊      | 499/1330 [12:30:24<28:10:14, 122.04s/it] 38%|███▊      | 500/1330 [12:31:56<26:01:36, 112.89s/it] 38%|███▊      | 501/1330 [12:35:22<32:25:56, 140.84s/it] 38%|███▊      | 502/1330 [12:36:11<26:03:22, 113.29s/it] 38%|███▊      | 503/1330 [12:41:04<38:27:10, 167.39s/it] 38%|███▊      | 504/1330 [12:41:57<30:28:53, 132.85s/it] 38%|███▊      | 505/1330 [12:42:46<24:44:24, 107.96s/it] 38%|███▊      | 506/1330 [12:43:54<21:57:54, 95.96s/it]  38%|███▊      | 507/1330 [12:44:47<18:57:40, 82.94s/it] 38%|███▊      | 508/1330 [12:46:44<21:14:37, 93.04s/it] 38%|███▊      | 509/1330 [12:47:42<18:49:43, 82.56s/it] 38%|███▊      | 510/1330 [12:48:28<16:18:21, 71.59s/it] 38%|███▊      | 511/1330 [12:49:09<14:14:27, 62.60s/it] 38%|███▊      | 512/1330 [12:50:35<15:47:19, 69.49s/it] 39%|███▊      | 513/1330 [12:51:47<15:57:37, 70.33s/it] 39%|███▊      | 514/1330 [12:54:07<20:41:13, 91.27s/it] 39%|███▊      | 515/1330 [12:55:07<18:30:49, 81.78s/it] 39%|███▉      | 516/1330 [12:56:27<18:22:50, 81.29s/it] 39%|███▉      | 517/1330 [12:57:18<16:18:21, 72.20s/it] 39%|███▉      | 518/1330 [12:58:27<16:05:06, 71.31s/it] 39%|███▉      | 519/1330 [12:59:55<17:10:07, 76.21s/it] 39%|███▉      | 520/1330 [13:03:34<26:47:04, 119.04s/it] 39%|███▉      | 521/1330 [13:07:45<35:39:09, 158.65s/it] 39%|███▉      | 522/1330 [13:09:30<32:00:34, 142.62s/it] 39%|███▉      | 523/1330 [13:10:40<27:06:23, 120.92s/it] 39%|███▉      | 524/1330 [13:11:22<21:43:21, 97.02s/it]  39%|███▉      | 525/1330 [13:12:26<19:30:21, 87.23s/it] 40%|███▉      | 526/1330 [13:13:11<16:39:19, 74.58s/it] 40%|███▉      | 527/1330 [13:15:00<18:54:43, 84.79s/it] 40%|███▉      | 528/1330 [13:15:56<16:57:31, 76.12s/it] 40%|███▉      | 529/1330 [13:16:51<15:31:07, 69.75s/it] 40%|███▉      | 530/1330 [13:18:06<15:51:09, 71.34s/it] 40%|███▉      | 531/1330 [13:18:45<13:44:28, 61.91s/it] 40%|████      | 532/1330 [13:19:59<14:30:27, 65.45s/it] 40%|████      | 533/1330 [13:20:58<14:03:23, 63.49s/it] 40%|████      | 534/1330 [13:21:52<13:23:06, 60.54s/it] 40%|████      | 535/1330 [13:22:43<12:45:37, 57.78s/it] 40%|████      | 536/1330 [13:30:50<41:07:04, 186.43s/it] 40%|████      | 537/1330 [13:31:43<32:15:39, 146.46s/it] 40%|████      | 538/1330 [13:32:59<27:35:18, 125.40s/it] 41%|████      | 539/1330 [13:34:20<24:37:48, 112.10s/it] 41%|████      | 540/1330 [13:35:04<20:06:34, 91.64s/it]  41%|████      | 541/1330 [13:37:45<24:40:01, 112.55s/it] 41%|████      | 542/1330 [13:38:32<20:16:47, 92.65s/it]  41%|████      | 543/1330 [13:39:18<17:13:38, 78.80s/it] 41%|████      | 544/1330 [13:40:47<17:52:44, 81.89s/it] 41%|████      | 545/1330 [13:41:44<16:12:19, 74.32s/it] 41%|████      | 546/1330 [13:42:25<14:01:03, 64.37s/it] 41%|████      | 547/1330 [13:43:29<13:59:22, 64.32s/it] 41%|████      | 548/1330 [13:44:42<14:31:28, 66.86s/it] 41%|████▏     | 549/1330 [13:45:27<13:06:31, 60.42s/it] 41%|████▏     | 550/1330 [13:46:02<11:24:05, 52.62s/it] 41%|████▏     | 551/1330 [13:46:29<9:44:00, 44.98s/it]  42%|████▏     | 552/1330 [13:47:17<9:56:21, 45.99s/it] 42%|████▏     | 553/1330 [13:47:58<9:35:50, 44.47s/it] 42%|████▏     | 554/1330 [13:48:37<9:14:08, 42.85s/it] 42%|████▏     | 555/1330 [13:50:35<14:04:46, 65.40s/it] 42%|████▏     | 556/1330 [13:52:37<17:42:01, 82.33s/it] 42%|████▏     | 557/1330 [13:53:14<14:46:03, 68.78s/it] 42%|████▏     | 558/1330 [13:54:32<15:18:52, 71.42s/it] 42%|████▏     | 559/1330 [13:56:56<19:57:52, 93.22s/it] 42%|████▏     | 560/1330 [13:57:46<17:08:44, 80.16s/it] 42%|████▏     | 561/1330 [13:58:13<13:44:15, 64.31s/it] 42%|████▏     | 562/1330 [13:58:48<11:51:45, 55.61s/it] 42%|████▏     | 563/1330 [13:59:21<10:22:54, 48.73s/it] 42%|████▏     | 564/1330 [14:00:24<11:15:52, 52.94s/it] 42%|████▏     | 565/1330 [14:04:44<24:29:35, 115.26s/it] 43%|████▎     | 566/1330 [14:05:54<21:34:38, 101.67s/it] 43%|████▎     | 567/1330 [14:06:35<17:40:19, 83.38s/it]  43%|████▎     | 568/1330 [14:08:48<20:46:32, 98.15s/it] 43%|████▎     | 569/1330 [14:09:35<17:29:57, 82.78s/it] 43%|████▎     | 570/1330 [14:10:26<15:27:59, 73.26s/it] 43%|████▎     | 571/1330 [14:11:29<14:48:44, 70.26s/it] 43%|████▎     | 572/1330 [14:12:08<12:49:56, 60.95s/it] 43%|████▎     | 573/1330 [14:12:49<11:31:45, 54.83s/it] 43%|████▎     | 574/1330 [14:13:28<10:33:16, 50.26s/it] 43%|████▎     | 575/1330 [14:14:31<11:18:55, 53.95s/it] 43%|████▎     | 576/1330 [14:15:26<11:22:57, 54.35s/it] 43%|████▎     | 577/1330 [14:15:58<9:58:25, 47.68s/it]  43%|████▎     | 578/1330 [14:16:32<9:05:20, 43.51s/it] 44%|████▎     | 579/1330 [14:17:12<8:49:12, 42.28s/it] 44%|████▎     | 580/1330 [14:17:47<8:22:53, 40.23s/it] 44%|████▎     | 581/1330 [14:20:09<14:43:01, 70.74s/it] 44%|████▍     | 582/1330 [14:21:08<13:57:29, 67.18s/it] 44%|████▍     | 583/1330 [14:21:53<12:35:34, 60.69s/it] 44%|████▍     | 584/1330 [14:22:32<11:13:34, 54.17s/it] 44%|████▍     | 585/1330 [14:23:24<11:02:27, 53.35s/it] 44%|████▍     | 586/1330 [14:23:56<9:42:07, 46.95s/it]  44%|████▍     | 587/1330 [14:24:22<8:26:08, 40.87s/it] 44%|████▍     | 588/1330 [14:25:05<8:31:02, 41.32s/it] 44%|████▍     | 589/1330 [14:25:52<8:53:53, 43.23s/it] 44%|████▍     | 590/1330 [14:26:33<8:44:47, 42.55s/it] 44%|████▍     | 591/1330 [14:27:23<9:08:44, 44.55s/it] 45%|████▍     | 592/1330 [14:27:53<8:15:54, 40.32s/it] 45%|████▍     | 593/1330 [14:28:37<8:27:11, 41.29s/it] 45%|████▍     | 594/1330 [14:29:18<8:25:25, 41.20s/it] 45%|████▍     | 595/1330 [14:31:36<14:23:31, 70.49s/it] 45%|████▍     | 596/1330 [14:32:24<12:57:23, 63.55s/it] 45%|████▍     | 597/1330 [14:34:19<16:05:10, 79.00s/it] 45%|████▍     | 598/1330 [14:35:50<16:48:06, 82.63s/it] 45%|████▌     | 599/1330 [14:36:46<15:08:35, 74.58s/it] 45%|████▌     | 600/1330 [14:37:33<13:28:17, 66.44s/it] 45%|████▌     | 601/1330 [14:38:18<12:07:15, 59.86s/it] 45%|████▌     | 602/1330 [14:39:32<12:58:08, 64.13s/it] 45%|████▌     | 603/1330 [14:40:21<12:02:55, 59.66s/it] 45%|████▌     | 604/1330 [14:41:50<13:47:43, 68.41s/it] 45%|████▌     | 605/1330 [14:42:57<13:41:35, 67.99s/it] 46%|████▌     | 606/1330 [14:43:39<12:08:09, 60.34s/it] 46%|████▌     | 607/1330 [14:45:24<14:46:00, 73.53s/it] 46%|████▌     | 608/1330 [14:46:55<15:47:17, 78.72s/it] 46%|████▌     | 609/1330 [14:47:40<13:46:59, 68.82s/it] 46%|████▌     | 610/1330 [14:48:53<13:58:27, 69.87s/it] 46%|████▌     | 611/1330 [14:49:40<12:34:51, 62.99s/it] 46%|████▌     | 612/1330 [14:51:04<13:50:57, 69.44s/it] 46%|████▌     | 613/1330 [14:51:51<12:30:02, 62.76s/it] 46%|████▌     | 614/1330 [14:52:36<11:25:43, 57.46s/it] 46%|████▌     | 615/1330 [14:55:19<17:41:20, 89.06s/it] 46%|████▋     | 616/1330 [14:56:35<16:54:26, 85.25s/it] 46%|████▋     | 617/1330 [14:57:35<15:20:22, 77.45s/it] 46%|████▋     | 618/1330 [14:58:22<13:32:32, 68.47s/it] 47%|████▋     | 619/1330 [15:01:57<22:10:31, 112.28s/it] 47%|████▋     | 620/1330 [15:03:27<20:51:47, 105.78s/it] 47%|████▋     | 621/1330 [15:04:16<17:26:40, 88.58s/it]  47%|████▋     | 622/1330 [15:05:03<14:58:58, 76.18s/it] 47%|████▋     | 623/1330 [15:05:59<13:45:18, 70.04s/it] 47%|████▋     | 624/1330 [15:07:35<15:16:56, 77.93s/it] 47%|████▋     | 625/1330 [15:08:32<13:59:57, 71.49s/it] 47%|████▋     | 626/1330 [15:09:26<12:59:12, 66.41s/it] 47%|████▋     | 627/1330 [15:11:27<16:08:03, 82.62s/it] 47%|████▋     | 628/1330 [15:13:21<17:56:49, 92.04s/it] 47%|████▋     | 629/1330 [15:14:09<15:21:06, 78.84s/it] 47%|████▋     | 630/1330 [15:14:58<13:35:42, 69.92s/it] 47%|████▋     | 631/1330 [15:15:47<12:21:54, 63.68s/it] 48%|████▊     | 632/1330 [15:16:37<11:33:10, 59.59s/it] 48%|████▊     | 633/1330 [15:17:56<12:41:02, 65.51s/it] 48%|████▊     | 634/1330 [15:18:48<11:52:17, 61.40s/it] 48%|████▊     | 635/1330 [15:20:04<12:43:13, 65.89s/it] 48%|████▊     | 636/1330 [15:21:18<13:07:22, 68.07s/it] 48%|████▊     | 637/1330 [15:22:31<13:23:42, 69.58s/it] 48%|████▊     | 638/1330 [15:23:43<13:32:07, 70.42s/it] 48%|████▊     | 639/1330 [15:24:32<12:17:23, 64.03s/it] 48%|████▊     | 640/1330 [15:25:24<11:35:04, 60.44s/it] 48%|████▊     | 641/1330 [15:26:08<10:36:15, 55.41s/it] 48%|████▊     | 642/1330 [15:27:05<10:40:21, 55.84s/it] 48%|████▊     | 643/1330 [15:27:58<10:30:30, 55.07s/it] 48%|████▊     | 644/1330 [15:29:12<11:33:12, 60.63s/it] 48%|████▊     | 645/1330 [15:30:08<11:16:19, 59.24s/it] 49%|████▊     | 646/1330 [15:31:11<11:28:04, 60.36s/it] 49%|████▊     | 647/1330 [15:33:27<15:45:40, 83.08s/it] 49%|████▊     | 648/1330 [15:34:25<14:20:03, 75.66s/it] 49%|████▉     | 649/1330 [15:35:35<13:58:40, 73.89s/it] 49%|████▉     | 650/1330 [15:36:32<12:59:11, 68.75s/it] 49%|████▉     | 651/1330 [15:37:16<11:34:15, 61.35s/it] 49%|████▉     | 652/1330 [15:38:02<10:42:57, 56.90s/it] 49%|████▉     | 653/1330 [15:38:57<10:35:15, 56.30s/it] 49%|████▉     | 654/1330 [15:40:51<13:47:39, 73.46s/it] 49%|████▉     | 655/1330 [15:41:43<12:36:10, 67.22s/it] 49%|████▉     | 656/1330 [15:42:34<11:39:24, 62.26s/it] 49%|████▉     | 657/1330 [15:44:27<14:29:58, 77.56s/it] 49%|████▉     | 658/1330 [15:45:55<15:02:13, 80.56s/it] 50%|████▉     | 659/1330 [15:46:44<13:15:43, 71.15s/it] 50%|████▉     | 660/1330 [15:47:52<13:04:33, 70.26s/it] 50%|████▉     | 661/1330 [15:49:26<14:23:28, 77.44s/it] 50%|████▉     | 662/1330 [15:50:21<13:06:08, 70.61s/it] 50%|████▉     | 663/1330 [15:52:54<17:38:50, 95.25s/it] 50%|████▉     | 664/1330 [15:54:22<17:14:48, 93.23s/it] 50%|█████     | 665/1330 [15:55:12<14:47:25, 80.07s/it] 50%|█████     | 666/1330 [15:55:53<12:38:43, 68.56s/it] 50%|█████     | 667/1330 [15:56:35<11:08:24, 60.49s/it] 50%|█████     | 668/1330 [15:57:37<11:12:48, 60.98s/it] 50%|█████     | 669/1330 [15:58:21<10:14:49, 55.81s/it] 50%|█████     | 670/1330 [16:04:11<26:26:17, 144.21s/it] 50%|█████     | 671/1330 [16:05:20<22:15:01, 121.55s/it] 51%|█████     | 672/1330 [16:07:25<22:24:52, 122.63s/it] 51%|█████     | 673/1330 [16:08:36<19:33:23, 107.16s/it] 51%|█████     | 674/1330 [16:09:48<17:34:37, 96.46s/it]  51%|█████     | 675/1330 [16:10:29<14:33:18, 80.00s/it] 51%|█████     | 676/1330 [16:11:13<12:33:37, 69.14s/it] 51%|█████     | 677/1330 [16:12:00<11:18:51, 62.38s/it] 51%|█████     | 678/1330 [16:12:34<9:45:08, 53.85s/it]  51%|█████     | 679/1330 [16:13:53<11:09:04, 61.67s/it] 51%|█████     | 680/1330 [16:14:34<9:59:56, 55.38s/it]  51%|█████     | 681/1330 [16:15:14<9:08:28, 50.71s/it] 51%|█████▏    | 682/1330 [16:16:24<10:09:45, 56.46s/it] 51%|█████▏    | 683/1330 [16:17:01<9:05:52, 50.62s/it]  51%|█████▏    | 684/1330 [16:18:43<11:51:29, 66.08s/it] 52%|█████▏    | 685/1330 [16:19:24<10:30:26, 58.65s/it] 52%|█████▏    | 686/1330 [16:23:15<19:44:33, 110.36s/it] 52%|█████▏    | 687/1330 [16:23:57<16:03:10, 89.88s/it]  52%|█████▏    | 688/1330 [16:26:10<18:18:36, 102.67s/it] 52%|█████▏    | 689/1330 [16:27:03<15:36:49, 87.69s/it]  52%|█████▏    | 690/1330 [16:28:15<14:46:19, 83.09s/it] 52%|█████▏    | 691/1330 [16:29:54<15:35:47, 87.87s/it] 52%|█████▏    | 692/1330 [16:30:42<13:26:19, 75.83s/it] 52%|█████▏    | 693/1330 [16:31:26<11:45:37, 66.46s/it] 52%|█████▏    | 694/1330 [16:32:09<10:29:50, 59.42s/it] 52%|█████▏    | 695/1330 [16:33:34<11:50:18, 67.12s/it] 52%|█████▏    | 696/1330 [16:37:09<19:37:08, 111.40s/it] 52%|█████▏    | 697/1330 [16:38:13<17:03:50, 97.05s/it]  52%|█████▏    | 698/1330 [16:39:02<14:30:52, 82.68s/it] 53%|█████▎    | 699/1330 [16:39:50<12:40:16, 72.29s/it] 53%|█████▎    | 700/1330 [16:40:26<10:45:10, 61.45s/it] 53%|█████▎    | 701/1330 [16:41:14<10:00:29, 57.28s/it] 53%|█████▎    | 702/1330 [16:41:50<8:54:19, 51.05s/it]  53%|█████▎    | 703/1330 [16:42:42<8:56:16, 51.32s/it] 53%|█████▎    | 704/1330 [16:43:22<8:20:06, 47.93s/it] 53%|█████▎    | 705/1330 [16:44:10<8:19:06, 47.91s/it] 53%|█████▎    | 706/1330 [16:47:49<17:13:32, 99.38s/it] 53%|█████▎    | 707/1330 [16:48:29<14:04:23, 81.32s/it] 53%|█████▎    | 708/1330 [16:49:12<12:06:19, 70.06s/it] 53%|█████▎    | 709/1330 [16:49:50<10:23:48, 60.27s/it] 53%|█████▎    | 710/1330 [16:50:40<9:50:44, 57.17s/it]  53%|█████▎    | 711/1330 [16:51:45<10:13:50, 59.50s/it] 54%|█████▎    | 712/1330 [16:52:25<9:13:04, 53.70s/it]  54%|█████▎    | 713/1330 [16:52:59<8:12:58, 47.94s/it] 54%|█████▎    | 714/1330 [16:53:50<8:19:59, 48.70s/it] 54%|█████▍    | 715/1330 [16:57:40<17:35:26, 102.97s/it] 54%|█████▍    | 716/1330 [16:58:30<14:51:46, 87.14s/it]  54%|█████▍    | 717/1330 [16:59:31<13:30:41, 79.35s/it] 54%|█████▍    | 718/1330 [17:00:15<11:41:59, 68.82s/it] 54%|█████▍    | 719/1330 [17:01:02<10:34:58, 62.35s/it] 54%|█████▍    | 720/1330 [17:01:51<9:51:18, 58.16s/it]  54%|█████▍    | 721/1330 [17:03:26<11:42:12, 69.18s/it] 54%|█████▍    | 722/1330 [17:04:42<12:02:06, 71.26s/it] 54%|█████▍    | 723/1330 [17:05:26<10:39:57, 63.26s/it] 54%|█████▍    | 724/1330 [17:07:00<12:10:50, 72.36s/it] 55%|█████▍    | 725/1330 [17:08:05<11:48:56, 70.31s/it] 55%|█████▍    | 726/1330 [17:08:46<10:16:48, 61.27s/it] 55%|█████▍    | 727/1330 [17:09:56<10:43:10, 64.00s/it] 55%|█████▍    | 728/1330 [17:11:02<10:48:20, 64.62s/it] 55%|█████▍    | 729/1330 [17:12:06<10:44:15, 64.32s/it] 55%|█████▍    | 730/1330 [17:13:15<10:57:13, 65.72s/it] 55%|█████▍    | 731/1330 [17:14:06<10:12:47, 61.38s/it] 55%|█████▌    | 732/1330 [17:15:08<10:14:27, 61.65s/it] 55%|█████▌    | 733/1330 [17:15:55<9:29:03, 57.19s/it]  55%|█████▌    | 734/1330 [17:18:20<13:50:54, 83.65s/it] 55%|█████▌    | 735/1330 [17:18:59<11:34:48, 70.07s/it] 55%|█████▌    | 736/1330 [17:19:59<11:02:52, 66.96s/it] 55%|█████▌    | 737/1330 [17:21:20<11:45:44, 71.41s/it] 55%|█████▌    | 738/1330 [17:22:07<10:31:18, 63.98s/it] 56%|█████▌    | 739/1330 [17:22:40<8:59:58, 54.82s/it]  56%|█████▌    | 740/1330 [17:23:26<8:32:18, 52.10s/it] 56%|█████▌    | 741/1330 [17:24:07<7:57:11, 48.61s/it] 56%|█████▌    | 742/1330 [17:25:33<9:47:14, 59.92s/it] 56%|█████▌    | 743/1330 [17:26:16<8:55:37, 54.75s/it] 56%|█████▌    | 744/1330 [17:26:51<7:56:41, 48.81s/it] 56%|█████▌    | 745/1330 [17:27:59<8:54:05, 54.78s/it] 56%|█████▌    | 746/1330 [17:29:15<9:54:27, 61.07s/it] 56%|█████▌    | 747/1330 [17:30:03<9:13:54, 57.01s/it] 56%|█████▌    | 748/1330 [17:30:46<8:33:26, 52.93s/it] 56%|█████▋    | 749/1330 [17:32:09<9:58:36, 61.82s/it] 56%|█████▋    | 750/1330 [17:32:56<9:16:38, 57.58s/it] 56%|█████▋    | 751/1330 [17:33:37<8:27:59, 52.64s/it] 57%|█████▋    | 752/1330 [17:34:15<7:42:30, 48.01s/it] 57%|█████▋    | 753/1330 [17:34:46<6:54:26, 43.10s/it] 57%|█████▋    | 754/1330 [17:35:18<6:22:31, 39.85s/it] 57%|█████▋    | 755/1330 [17:38:07<12:30:38, 78.33s/it] 57%|█████▋    | 756/1330 [17:38:41<10:22:17, 65.05s/it] 57%|█████▋    | 757/1330 [17:40:36<12:44:39, 80.07s/it] 57%|█████▋    | 758/1330 [17:41:15<10:45:39, 67.73s/it] 57%|█████▋    | 759/1330 [17:42:11<10:13:13, 64.44s/it] 57%|█████▋    | 760/1330 [17:43:18<10:18:18, 65.08s/it] 57%|█████▋    | 761/1330 [17:44:22<10:14:49, 64.83s/it] 57%|█████▋    | 762/1330 [17:46:11<12:18:40, 78.03s/it] 57%|█████▋    | 763/1330 [17:46:51<10:30:32, 66.72s/it] 57%|█████▋    | 764/1330 [17:47:24<8:51:56, 56.39s/it]  58%|█████▊    | 765/1330 [17:48:31<9:20:26, 59.52s/it] 58%|█████▊    | 766/1330 [17:49:09<8:18:51, 53.07s/it] 58%|█████▊    | 767/1330 [17:54:24<20:35:10, 131.64s/it] 58%|█████▊    | 768/1330 [17:55:03<16:13:40, 103.95s/it] 58%|█████▊    | 769/1330 [17:55:44<13:16:14, 85.16s/it]  58%|█████▊    | 770/1330 [17:56:18<10:51:49, 69.84s/it] 58%|█████▊    | 771/1330 [17:57:01<9:34:23, 61.65s/it]  58%|█████▊    | 772/1330 [17:58:09<9:51:04, 63.56s/it] 58%|█████▊    | 773/1330 [18:00:56<14:37:27, 94.52s/it] 58%|█████▊    | 774/1330 [18:01:31<11:50:36, 76.68s/it] 58%|█████▊    | 775/1330 [18:02:03<9:46:22, 63.39s/it]  58%|█████▊    | 776/1330 [18:02:34<8:15:14, 53.64s/it] 58%|█████▊    | 777/1330 [18:03:35<8:35:08, 55.89s/it] 58%|█████▊    | 778/1330 [18:04:13<7:45:32, 50.60s/it] 59%|█████▊    | 779/1330 [18:04:56<7:23:57, 48.34s/it] 59%|█████▊    | 780/1330 [18:05:59<8:01:26, 52.52s/it] 59%|█████▊    | 781/1330 [18:06:27<6:54:28, 45.30s/it] 59%|█████▉    | 782/1330 [18:07:05<6:33:23, 43.07s/it] 59%|█████▉    | 783/1330 [18:08:11<7:34:47, 49.89s/it] 59%|█████▉    | 784/1330 [18:08:45<6:50:45, 45.14s/it] 59%|█████▉    | 785/1330 [18:10:05<8:26:22, 55.75s/it] 59%|█████▉    | 786/1330 [18:10:33<7:08:58, 47.31s/it] 59%|█████▉    | 787/1330 [18:11:06<6:30:24, 43.14s/it] 59%|█████▉    | 788/1330 [18:11:39<6:01:50, 40.06s/it] 59%|█████▉    | 789/1330 [18:12:06<5:24:56, 36.04s/it] 59%|█████▉    | 790/1330 [18:16:18<15:08:49, 100.98s/it] 59%|█████▉    | 791/1330 [18:17:04<12:38:59, 84.49s/it]  60%|█████▉    | 792/1330 [18:17:47<10:44:47, 71.91s/it] 60%|█████▉    | 793/1330 [18:18:20<8:58:57, 60.22s/it]  60%|█████▉    | 794/1330 [18:18:50<7:36:16, 51.08s/it] 60%|█████▉    | 795/1330 [18:19:32<7:12:20, 48.49s/it] 60%|█████▉    | 796/1330 [18:20:01<6:18:48, 42.56s/it] 60%|█████▉    | 797/1330 [18:20:37<6:01:06, 40.65s/it] 60%|██████    | 798/1330 [18:21:06<5:28:09, 37.01s/it] 60%|██████    | 799/1330 [18:21:50<5:46:05, 39.11s/it] 60%|██████    | 800/1330 [18:22:25<5:35:08, 37.94s/it] 60%|██████    | 801/1330 [18:22:56<5:17:26, 36.01s/it] 60%|██████    | 802/1330 [18:27:16<15:08:11, 103.20s/it] 60%|██████    | 803/1330 [18:28:12<13:02:20, 89.07s/it]  60%|██████    | 804/1330 [18:28:43<10:28:21, 71.68s/it] 61%|██████    | 805/1330 [18:29:54<10:23:53, 71.30s/it] 61%|██████    | 806/1330 [18:30:46<9:33:25, 65.66s/it]  61%|██████    | 807/1330 [18:31:16<7:58:45, 54.92s/it] 61%|██████    | 808/1330 [18:31:44<6:48:07, 46.91s/it] 61%|██████    | 809/1330 [18:32:11<5:54:29, 40.82s/it] 61%|██████    | 810/1330 [18:32:47<5:41:44, 39.43s/it] 61%|██████    | 811/1330 [18:33:35<6:01:32, 41.80s/it] 61%|██████    | 812/1330 [18:34:30<6:35:34, 45.82s/it] 61%|██████    | 813/1330 [18:36:01<8:31:40, 59.38s/it] 61%|██████    | 814/1330 [18:37:14<9:05:18, 63.41s/it] 61%|██████▏   | 815/1330 [18:38:26<9:26:24, 65.99s/it] 61%|██████▏   | 816/1330 [18:40:07<10:55:24, 76.51s/it] 61%|██████▏   | 817/1330 [18:41:00<9:54:23, 69.52s/it]  62%|██████▏   | 818/1330 [18:42:28<10:40:11, 75.02s/it] 62%|██████▏   | 819/1330 [18:43:28<10:00:13, 70.48s/it] 62%|██████▏   | 820/1330 [18:44:47<10:20:43, 73.03s/it] 62%|██████▏   | 821/1330 [18:45:53<10:03:04, 71.09s/it] 62%|██████▏   | 822/1330 [18:47:53<12:05:11, 85.65s/it] 62%|██████▏   | 823/1330 [18:49:13<11:49:04, 83.91s/it] 62%|██████▏   | 824/1330 [18:53:25<18:53:02, 134.35s/it] 62%|██████▏   | 825/1330 [18:55:00<17:11:05, 122.50s/it] 62%|██████▏   | 826/1330 [18:56:01<14:36:22, 104.33s/it] 62%|██████▏   | 827/1330 [18:57:35<14:08:37, 101.23s/it] 62%|██████▏   | 828/1330 [18:59:25<14:27:12, 103.65s/it] 62%|██████▏   | 829/1330 [19:03:31<20:21:35, 146.30s/it] 62%|██████▏   | 830/1330 [19:04:33<16:49:18, 121.12s/it] 62%|██████▏   | 831/1330 [19:05:32<14:12:53, 102.55s/it] 63%|██████▎   | 832/1330 [19:06:50<13:08:26, 94.99s/it]  63%|██████▎   | 833/1330 [19:07:50<11:41:51, 84.73s/it] 63%|██████▎   | 834/1330 [19:08:51<10:42:02, 77.67s/it] 63%|██████▎   | 835/1330 [19:09:51<9:55:05, 72.13s/it]  63%|██████▎   | 836/1330 [19:10:31<8:35:18, 62.59s/it] 63%|██████▎   | 837/1330 [19:11:25<8:14:12, 60.15s/it] 63%|██████▎   | 838/1330 [19:12:18<7:54:52, 57.91s/it] 63%|██████▎   | 839/1330 [19:15:01<12:10:38, 89.28s/it] 63%|██████▎   | 840/1330 [19:16:02<11:00:18, 80.85s/it] 63%|██████▎   | 841/1330 [19:17:24<11:02:30, 81.29s/it] 63%|██████▎   | 842/1330 [19:18:06<9:25:11, 69.49s/it]  63%|██████▎   | 843/1330 [19:19:52<10:51:42, 80.29s/it] 63%|██████▎   | 844/1330 [19:23:18<15:55:42, 117.99s/it] 64%|██████▎   | 845/1330 [19:25:24<16:14:46, 120.59s/it] 64%|██████▎   | 846/1330 [19:26:22<13:41:08, 101.79s/it] 64%|██████▎   | 847/1330 [19:27:21<11:55:20, 88.86s/it]  64%|██████▍   | 848/1330 [19:28:15<10:29:03, 78.31s/it] 64%|██████▍   | 849/1330 [19:29:37<10:38:04, 79.59s/it] 64%|██████▍   | 850/1330 [19:30:42<10:01:42, 75.21s/it] 64%|██████▍   | 851/1330 [19:33:03<12:37:43, 94.91s/it] 64%|██████▍   | 852/1330 [19:34:03<11:11:57, 84.35s/it] 64%|██████▍   | 853/1330 [19:36:40<14:04:38, 106.24s/it] 64%|██████▍   | 854/1330 [19:37:55<12:47:42, 96.77s/it]  64%|██████▍   | 855/1330 [19:39:00<11:32:16, 87.45s/it] 64%|██████▍   | 856/1330 [19:39:58<10:20:22, 78.53s/it] 64%|██████▍   | 857/1330 [19:40:59<9:36:52, 73.18s/it]  65%|██████▍   | 858/1330 [19:46:28<19:39:22, 149.92s/it] 65%|██████▍   | 859/1330 [19:47:38<16:29:05, 126.00s/it] 65%|██████▍   | 860/1330 [19:48:28<13:28:02, 103.16s/it] 65%|██████▍   | 861/1330 [19:49:34<12:00:28, 92.17s/it]  65%|██████▍   | 862/1330 [19:50:29<10:30:50, 80.88s/it] 65%|██████▍   | 863/1330 [19:51:31<9:46:06, 75.30s/it]  65%|██████▍   | 864/1330 [19:52:17<8:35:11, 66.33s/it] 65%|██████▌   | 865/1330 [19:53:58<9:55:36, 76.85s/it] 65%|██████▌   | 866/1330 [19:54:52<9:02:04, 70.10s/it] 65%|██████▌   | 867/1330 [19:56:40<10:27:33, 81.32s/it] 65%|██████▌   | 868/1330 [19:57:46<9:50:47, 76.73s/it]  65%|██████▌   | 869/1330 [19:59:04<9:52:24, 77.10s/it] 65%|██████▌   | 870/1330 [20:00:09<9:23:04, 73.44s/it] 65%|██████▌   | 871/1330 [20:01:05<8:42:19, 68.28s/it] 66%|██████▌   | 872/1330 [20:02:31<9:22:59, 73.75s/it] 66%|██████▌   | 873/1330 [20:03:25<8:34:46, 67.58s/it] 66%|██████▌   | 874/1330 [20:07:04<14:19:43, 113.12s/it] 66%|██████▌   | 875/1330 [20:07:58<12:03:43, 95.44s/it]  66%|██████▌   | 876/1330 [20:08:47<10:15:50, 81.39s/it] 66%|██████▌   | 877/1330 [20:10:40<11:26:01, 90.87s/it] 66%|██████▌   | 878/1330 [20:11:53<10:43:57, 85.48s/it] 66%|██████▌   | 879/1330 [20:13:25<10:58:28, 87.60s/it] 66%|██████▌   | 880/1330 [20:14:59<11:10:45, 89.43s/it] 66%|██████▌   | 881/1330 [20:16:13<10:34:19, 84.77s/it] 66%|██████▋   | 882/1330 [20:16:52<8:51:38, 71.20s/it]  66%|██████▋   | 883/1330 [20:22:41<19:10:45, 154.46s/it] 66%|██████▋   | 884/1330 [20:26:49<22:37:19, 182.60s/it] 67%|██████▋   | 885/1330 [20:27:55<18:14:17, 147.55s/it] 67%|██████▋   | 886/1330 [20:28:56<14:58:48, 121.46s/it] 67%|██████▋   | 887/1330 [20:29:40<12:05:15, 98.23s/it]  67%|██████▋   | 888/1330 [20:30:33<10:23:29, 84.64s/it] 67%|██████▋   | 889/1330 [20:31:07<8:30:23, 69.44s/it]  67%|██████▋   | 890/1330 [20:31:55<7:42:30, 63.07s/it] 67%|██████▋   | 891/1330 [20:33:13<8:13:35, 67.46s/it] 67%|██████▋   | 892/1330 [20:34:38<8:50:47, 72.71s/it] 67%|██████▋   | 893/1330 [20:36:05<9:22:31, 77.23s/it] 67%|██████▋   | 894/1330 [20:37:10<8:54:45, 73.59s/it] 67%|██████▋   | 895/1330 [20:37:52<7:43:04, 63.87s/it] 67%|██████▋   | 896/1330 [20:38:22<6:29:16, 53.82s/it] 67%|██████▋   | 897/1330 [20:38:56<5:45:06, 47.82s/it] 68%|██████▊   | 898/1330 [20:39:30<5:14:36, 43.69s/it] 68%|██████▊   | 899/1330 [20:46:16<18:14:09, 152.32s/it] 68%|██████▊   | 900/1330 [20:47:18<14:59:16, 125.48s/it] 68%|██████▊   | 901/1330 [20:49:24<14:58:02, 125.60s/it] 68%|██████▊   | 902/1330 [20:50:18<12:22:12, 104.05s/it] 68%|██████▊   | 903/1330 [20:52:55<14:13:46, 119.97s/it] 68%|██████▊   | 904/1330 [20:54:35<13:29:39, 114.04s/it] 68%|██████▊   | 905/1330 [20:55:31<11:24:00, 96.57s/it]  68%|██████▊   | 906/1330 [20:57:05<11:15:52, 95.64s/it] 68%|██████▊   | 907/1330 [20:58:34<11:00:21, 93.67s/it] 68%|██████▊   | 908/1330 [20:59:25<9:28:16, 80.80s/it]  68%|██████▊   | 909/1330 [21:00:09<8:09:34, 69.77s/it] 68%|██████▊   | 910/1330 [21:00:59<7:27:16, 63.90s/it] 68%|██████▊   | 911/1330 [21:01:48<6:55:17, 59.47s/it] 69%|██████▊   | 912/1330 [21:02:34<6:25:45, 55.37s/it] 69%|██████▊   | 913/1330 [21:04:01<7:31:55, 65.03s/it] 69%|██████▊   | 914/1330 [21:04:56<7:08:31, 61.81s/it] 69%|██████▉   | 915/1330 [21:05:56<7:04:26, 61.36s/it] 69%|██████▉   | 916/1330 [21:07:21<7:51:55, 68.40s/it] 69%|██████▉   | 917/1330 [21:08:21<7:34:45, 66.07s/it] 69%|██████▉   | 918/1330 [21:09:52<8:24:04, 73.41s/it] 69%|██████▉   | 919/1330 [21:11:13<8:39:05, 75.78s/it] 69%|██████▉   | 920/1330 [21:12:05<7:49:10, 68.66s/it] 69%|██████▉   | 921/1330 [21:14:10<9:42:30, 85.45s/it] 69%|██████▉   | 922/1330 [21:15:00<8:28:37, 74.80s/it] 69%|██████▉   | 923/1330 [21:16:21<8:40:33, 76.74s/it] 69%|██████▉   | 924/1330 [21:17:34<8:31:04, 75.53s/it] 70%|██████▉   | 925/1330 [21:18:22<7:34:06, 67.27s/it] 70%|██████▉   | 926/1330 [21:19:15<7:03:39, 62.92s/it] 70%|██████▉   | 927/1330 [21:21:26<9:20:57, 83.52s/it] 70%|██████▉   | 928/1330 [21:22:39<8:57:59, 80.30s/it] 70%|██████▉   | 929/1330 [21:23:53<8:44:52, 78.54s/it] 70%|██████▉   | 930/1330 [21:24:45<7:48:59, 70.35s/it] 70%|███████   | 931/1330 [21:25:36<7:09:11, 64.54s/it] 70%|███████   | 932/1330 [21:26:25<6:37:57, 59.99s/it] 70%|███████   | 933/1330 [21:27:52<7:31:36, 68.25s/it] 70%|███████   | 934/1330 [21:29:40<8:49:07, 80.17s/it] 70%|███████   | 935/1330 [21:33:09<13:01:49, 118.76s/it] 70%|███████   | 936/1330 [21:40:53<24:19:50, 222.31s/it] 70%|███████   | 937/1330 [21:42:02<19:14:27, 176.25s/it] 71%|███████   | 938/1330 [21:42:56<15:12:14, 139.63s/it] 71%|███████   | 939/1330 [21:44:31<13:43:09, 126.32s/it] 71%|███████   | 940/1330 [21:45:56<12:18:48, 113.66s/it] 71%|███████   | 941/1330 [21:47:29<11:36:52, 107.49s/it] 71%|███████   | 942/1330 [21:48:19<9:44:34, 90.40s/it]   71%|███████   | 943/1330 [21:50:26<10:53:28, 101.31s/it] 71%|███████   | 944/1330 [21:51:42<10:02:14, 93.61s/it]  71%|███████   | 945/1330 [21:52:32<8:37:22, 80.63s/it]  71%|███████   | 946/1330 [21:53:17<7:27:41, 69.95s/it] 71%|███████   | 947/1330 [21:54:15<7:03:54, 66.41s/it] 71%|███████▏  | 948/1330 [22:02:50<21:19:09, 200.91s/it] 71%|███████▏  | 949/1330 [22:03:46<16:40:50, 157.61s/it] 71%|███████▏  | 950/1330 [22:05:07<14:12:46, 134.65s/it] 72%|███████▏  | 951/1330 [22:06:17<12:07:00, 115.09s/it] 72%|███████▏  | 952/1330 [22:07:44<11:12:26, 106.74s/it] 72%|███████▏  | 953/1330 [22:09:16<10:42:53, 102.32s/it] 72%|███████▏  | 954/1330 [22:10:11<9:12:07, 88.11s/it]   72%|███████▏  | 955/1330 [22:11:25<8:44:10, 83.87s/it] 72%|███████▏  | 956/1330 [22:12:27<8:01:34, 77.26s/it] 72%|███████▏  | 957/1330 [22:14:55<10:11:57, 98.44s/it] 72%|███████▏  | 958/1330 [22:16:23<9:51:12, 95.36s/it]  72%|███████▏  | 959/1330 [22:18:04<9:59:20, 96.93s/it] 72%|███████▏  | 960/1330 [22:19:11<9:03:32, 88.14s/it] 72%|███████▏  | 961/1330 [22:20:46<9:14:03, 90.09s/it] 72%|███████▏  | 962/1330 [22:21:45<8:15:00, 80.71s/it] 72%|███████▏  | 963/1330 [22:22:37<7:20:50, 72.07s/it] 72%|███████▏  | 964/1330 [22:23:27<6:40:39, 65.68s/it] 73%|███████▎  | 965/1330 [22:24:17<6:09:48, 60.79s/it] 73%|███████▎  | 966/1330 [22:25:39<6:46:58, 67.08s/it] 73%|███████▎  | 967/1330 [22:27:12<7:33:02, 74.88s/it] 73%|███████▎  | 968/1330 [22:27:58<6:40:32, 66.39s/it] 73%|███████▎  | 969/1330 [22:28:58<6:27:17, 64.37s/it] 73%|███████▎  | 970/1330 [22:29:43<5:52:00, 58.67s/it] 73%|███████▎  | 971/1330 [22:30:49<6:04:07, 60.86s/it] 73%|███████▎  | 972/1330 [22:31:36<5:37:26, 56.55s/it] 73%|███████▎  | 973/1330 [22:32:16<5:07:19, 51.65s/it] 73%|███████▎  | 974/1330 [22:33:26<5:38:30, 57.05s/it] 73%|███████▎  | 975/1330 [22:34:21<5:35:14, 56.66s/it] 73%|███████▎  | 976/1330 [22:41:02<15:43:26, 159.90s/it] 73%|███████▎  | 977/1330 [22:42:50<14:09:38, 144.42s/it] 74%|███████▎  | 978/1330 [22:43:35<11:11:43, 114.50s/it] 74%|███████▎  | 979/1330 [22:44:16<9:00:08, 92.33s/it]   74%|███████▎  | 980/1330 [22:45:28<8:23:36, 86.33s/it] 74%|███████▍  | 981/1330 [22:46:24<7:29:27, 77.27s/it] 74%|███████▍  | 982/1330 [22:48:00<8:00:23, 82.83s/it] 74%|███████▍  | 983/1330 [22:48:47<6:57:00, 72.10s/it] 74%|███████▍  | 984/1330 [22:49:28<6:02:13, 62.81s/it] 74%|███████▍  | 985/1330 [22:49:54<4:56:38, 51.59s/it] 74%|███████▍  | 986/1330 [22:50:41<4:48:00, 50.23s/it] 74%|███████▍  | 987/1330 [22:51:22<4:31:45, 47.54s/it] 74%|███████▍  | 988/1330 [22:53:27<6:43:18, 70.75s/it] 74%|███████▍  | 989/1330 [22:54:15<6:03:32, 63.97s/it] 74%|███████▍  | 990/1330 [22:55:11<5:48:25, 61.49s/it] 75%|███████▍  | 991/1330 [22:55:57<5:21:53, 56.97s/it] 75%|███████▍  | 992/1330 [22:57:28<6:17:37, 67.04s/it] 75%|███████▍  | 993/1330 [22:58:08<5:31:38, 59.05s/it] 75%|███████▍  | 994/1330 [22:59:34<6:15:45, 67.10s/it] 75%|███████▍  | 995/1330 [23:00:22<5:43:20, 61.49s/it] 75%|███████▍  | 996/1330 [23:01:01<5:03:38, 54.55s/it] 75%|███████▍  | 997/1330 [23:02:00<5:10:19, 55.91s/it] 75%|███████▌  | 998/1330 [23:02:46<4:54:12, 53.17s/it] 75%|███████▌  | 999/1330 [23:03:47<5:05:47, 55.43s/it] 75%|███████▌  | 1000/1330 [23:04:40<5:01:10, 54.76s/it] 75%|███████▌  | 1001/1330 [23:05:29<4:50:10, 52.92s/it] 75%|███████▌  | 1002/1330 [23:06:27<4:57:58, 54.51s/it] 75%|███████▌  | 1003/1330 [23:07:45<5:34:57, 61.46s/it] 75%|███████▌  | 1004/1330 [23:09:40<7:01:09, 77.51s/it] 76%|███████▌  | 1005/1330 [23:10:29<6:13:45, 69.00s/it] 76%|███████▌  | 1006/1330 [23:11:48<6:29:11, 72.07s/it] 76%|███████▌  | 1007/1330 [23:16:20<11:51:03, 132.09s/it] 76%|███████▌  | 1008/1330 [23:17:19<9:49:53, 109.92s/it]  76%|███████▌  | 1009/1330 [23:18:00<7:58:15, 89.39s/it]  76%|███████▌  | 1010/1330 [23:18:57<7:05:22, 79.76s/it] 76%|███████▌  | 1011/1330 [23:19:52<6:23:58, 72.22s/it] 76%|███████▌  | 1012/1330 [23:21:00<6:16:15, 70.99s/it] 76%|███████▌  | 1013/1330 [23:23:00<7:31:55, 85.54s/it] 76%|███████▌  | 1014/1330 [23:23:55<6:43:22, 76.59s/it] 76%|███████▋  | 1015/1330 [23:24:34<5:42:55, 65.32s/it] 76%|███████▋  | 1016/1330 [23:25:06<4:48:53, 55.20s/it] 76%|███████▋  | 1017/1330 [23:27:15<6:43:00, 77.25s/it] 77%|███████▋  | 1018/1330 [23:28:42<6:56:57, 80.19s/it] 77%|███████▋  | 1019/1330 [23:33:28<12:16:27, 142.08s/it] 77%|███████▋  | 1020/1330 [23:34:18<9:51:01, 114.39s/it]  77%|███████▋  | 1021/1330 [23:35:12<8:15:14, 96.16s/it]  77%|███████▋  | 1022/1330 [23:38:00<10:04:37, 117.78s/it] 77%|███████▋  | 1023/1330 [23:38:59<8:33:13, 100.30s/it]  77%|███████▋  | 1024/1330 [23:39:43<7:05:29, 83.43s/it]  77%|███████▋  | 1025/1330 [23:40:29<6:07:08, 72.22s/it] 77%|███████▋  | 1026/1330 [23:41:14<5:24:30, 64.05s/it] 77%|███████▋  | 1027/1330 [23:42:46<6:05:02, 72.29s/it] 77%|███████▋  | 1028/1330 [23:50:27<15:50:13, 188.79s/it] 77%|███████▋  | 1029/1330 [23:51:15<12:15:10, 146.55s/it] 77%|███████▋  | 1030/1330 [23:53:02<11:13:22, 134.68s/it] 78%|███████▊  | 1031/1330 [23:54:36<10:10:58, 122.60s/it] 78%|███████▊  | 1032/1330 [23:55:23<8:15:54, 99.85s/it]   78%|███████▊  | 1033/1330 [23:56:46<7:49:53, 94.93s/it] 78%|███████▊  | 1034/1330 [23:57:38<6:45:03, 82.11s/it] 78%|███████▊  | 1035/1330 [23:58:20<5:44:41, 70.11s/it] 78%|███████▊  | 1036/1330 [23:59:04<5:04:52, 62.22s/it] 78%|███████▊  | 1037/1330 [23:59:50<4:39:53, 57.32s/it] 78%|███████▊  | 1038/1330 [24:00:38<4:24:27, 54.34s/it] 78%|███████▊  | 1039/1330 [24:01:42<4:38:09, 57.35s/it] 78%|███████▊  | 1040/1330 [24:02:49<4:51:01, 60.21s/it] 78%|███████▊  | 1041/1330 [24:03:46<4:45:13, 59.22s/it] 78%|███████▊  | 1042/1330 [24:04:48<4:48:30, 60.10s/it] 78%|███████▊  | 1043/1330 [24:06:14<5:25:04, 67.96s/it] 78%|███████▊  | 1044/1330 [24:08:25<6:54:09, 86.89s/it] 79%|███████▊  | 1045/1330 [24:10:01<7:05:17, 89.53s/it] 79%|███████▊  | 1046/1330 [24:12:05<7:53:33, 100.05s/it] 79%|███████▊  | 1047/1330 [24:17:06<12:34:58, 160.07s/it] 79%|███████▉  | 1048/1330 [24:17:56<9:58:19, 127.30s/it]  79%|███████▉  | 1049/1330 [24:18:38<7:55:37, 101.56s/it] 79%|███████▉  | 1050/1330 [24:19:26<6:38:22, 85.37s/it]  79%|███████▉  | 1051/1330 [24:20:14<5:45:38, 74.33s/it] 79%|███████▉  | 1052/1330 [24:21:11<5:20:25, 69.15s/it] 79%|███████▉  | 1053/1330 [24:30:24<16:29:25, 214.32s/it] 79%|███████▉  | 1054/1330 [24:31:13<12:37:20, 164.64s/it] 79%|███████▉  | 1055/1330 [24:32:34<10:39:31, 139.53s/it] 79%|███████▉  | 1056/1330 [24:33:19<8:28:23, 111.33s/it]  79%|███████▉  | 1057/1330 [24:34:40<7:44:03, 101.99s/it] 80%|███████▉  | 1058/1330 [24:35:29<6:31:21, 86.33s/it]  80%|███████▉  | 1059/1330 [24:36:53<6:26:20, 85.54s/it] 80%|███████▉  | 1060/1330 [24:38:40<6:53:34, 91.91s/it] 80%|███████▉  | 1061/1330 [24:40:11<6:51:27, 91.78s/it] 80%|███████▉  | 1062/1330 [24:41:03<5:56:49, 79.88s/it] 80%|███████▉  | 1063/1330 [24:41:49<5:09:25, 69.53s/it] 80%|████████  | 1064/1330 [24:43:05<5:16:45, 71.45s/it] 80%|████████  | 1065/1330 [24:43:55<4:47:28, 65.09s/it] 80%|████████  | 1066/1330 [24:44:59<4:44:42, 64.71s/it] 80%|████████  | 1067/1330 [24:46:40<5:31:30, 75.63s/it] 80%|████████  | 1068/1330 [24:47:16<4:37:56, 63.65s/it] 80%|████████  | 1069/1330 [24:48:02<4:14:50, 58.59s/it] 80%|████████  | 1070/1330 [24:48:49<3:58:17, 54.99s/it] 81%|████████  | 1071/1330 [24:50:40<5:09:41, 71.74s/it] 81%|████████  | 1072/1330 [24:51:31<4:42:14, 65.64s/it] 81%|████████  | 1073/1330 [24:52:25<4:25:57, 62.09s/it] 81%|████████  | 1074/1330 [24:53:03<3:53:52, 54.81s/it] 81%|████████  | 1075/1330 [24:53:42<3:32:46, 50.06s/it] 81%|████████  | 1076/1330 [24:55:00<4:07:30, 58.47s/it] 81%|████████  | 1077/1330 [24:56:05<4:15:14, 60.53s/it] 81%|████████  | 1078/1330 [24:56:55<4:00:29, 57.26s/it] 81%|████████  | 1079/1330 [24:57:38<3:41:53, 53.04s/it] 81%|████████  | 1080/1330 [24:58:17<3:23:17, 48.79s/it] 81%|████████▏ | 1081/1330 [24:58:54<3:08:25, 45.40s/it] 81%|████████▏ | 1082/1330 [24:59:32<2:58:23, 43.16s/it] 81%|████████▏ | 1083/1330 [25:00:10<2:51:19, 41.62s/it] 82%|████████▏ | 1084/1330 [25:02:07<4:23:03, 64.16s/it] 82%|████████▏ | 1085/1330 [25:03:05<4:14:48, 62.40s/it] 82%|████████▏ | 1086/1330 [25:03:48<3:49:28, 56.43s/it] 82%|████████▏ | 1087/1330 [25:04:47<3:51:26, 57.15s/it] 82%|████████▏ | 1088/1330 [25:07:34<6:04:06, 90.28s/it] 82%|████████▏ | 1089/1330 [25:08:22<5:11:19, 77.51s/it] 82%|████████▏ | 1090/1330 [25:08:52<4:12:52, 63.22s/it] 82%|████████▏ | 1091/1330 [25:10:21<4:42:10, 70.84s/it] 82%|████████▏ | 1092/1330 [25:11:02<4:05:59, 62.01s/it] 82%|████████▏ | 1093/1330 [25:12:42<4:49:53, 73.39s/it] 82%|████████▏ | 1094/1330 [25:13:52<4:44:46, 72.40s/it] 82%|████████▏ | 1095/1330 [25:14:38<4:12:00, 64.34s/it] 82%|████████▏ | 1096/1330 [25:15:24<3:49:23, 58.82s/it] 82%|████████▏ | 1097/1330 [25:16:12<3:36:23, 55.72s/it] 83%|████████▎ | 1098/1330 [25:16:56<3:22:11, 52.29s/it] 83%|████████▎ | 1099/1330 [25:18:25<4:02:49, 63.07s/it] 83%|████████▎ | 1100/1330 [25:19:15<3:46:54, 59.19s/it] 83%|████████▎ | 1101/1330 [25:19:49<3:16:55, 51.60s/it] 83%|████████▎ | 1102/1330 [25:20:39<3:15:01, 51.32s/it] 83%|████████▎ | 1103/1330 [25:24:28<6:35:52, 104.64s/it] 83%|████████▎ | 1104/1330 [25:25:29<5:43:59, 91.32s/it]  83%|████████▎ | 1105/1330 [25:26:30<5:08:23, 82.24s/it] 83%|████████▎ | 1106/1330 [25:28:09<5:26:17, 87.40s/it] 83%|████████▎ | 1107/1330 [25:29:16<5:02:00, 81.26s/it] 83%|████████▎ | 1108/1330 [25:30:25<4:47:16, 77.64s/it] 83%|████████▎ | 1109/1330 [25:31:10<4:10:09, 67.92s/it] 83%|████████▎ | 1110/1330 [25:34:21<6:24:24, 104.84s/it] 84%|████████▎ | 1111/1330 [25:35:15<5:26:20, 89.41s/it]  84%|████████▎ | 1112/1330 [25:36:28<5:07:09, 84.54s/it] 84%|████████▎ | 1113/1330 [25:37:28<4:39:25, 77.26s/it] 84%|████████▍ | 1114/1330 [25:38:52<4:45:35, 79.33s/it] 84%|████████▍ | 1115/1330 [25:39:40<4:09:45, 69.70s/it] 84%|████████▍ | 1116/1330 [25:40:31<3:49:05, 64.23s/it] 84%|████████▍ | 1117/1330 [25:41:15<3:26:42, 58.23s/it] 84%|████████▍ | 1118/1330 [25:41:53<3:03:48, 52.02s/it] 84%|████████▍ | 1119/1330 [25:42:33<2:50:29, 48.48s/it] 84%|████████▍ | 1120/1330 [25:43:12<2:39:11, 45.48s/it] 84%|████████▍ | 1121/1330 [25:43:44<2:25:20, 41.73s/it] 84%|████████▍ | 1122/1330 [25:45:26<3:26:29, 59.57s/it] 84%|████████▍ | 1123/1330 [25:46:12<3:11:26, 55.49s/it] 85%|████████▍ | 1124/1330 [25:46:46<2:48:57, 49.21s/it] 85%|████████▍ | 1125/1330 [25:50:28<5:44:45, 100.91s/it] 85%|████████▍ | 1126/1330 [25:50:54<4:27:10, 78.58s/it]  85%|████████▍ | 1127/1330 [25:51:16<3:28:41, 61.68s/it] 85%|████████▍ | 1128/1330 [25:51:44<2:52:59, 51.38s/it] 85%|████████▍ | 1129/1330 [25:52:03<2:19:48, 41.73s/it] 85%|████████▍ | 1130/1330 [25:52:57<2:31:17, 45.39s/it] 85%|████████▌ | 1131/1330 [25:53:28<2:16:27, 41.14s/it] 85%|████████▌ | 1132/1330 [25:53:56<2:02:57, 37.26s/it] 85%|████████▌ | 1133/1330 [25:54:45<2:13:18, 40.60s/it] 85%|████████▌ | 1134/1330 [25:55:02<1:50:03, 33.69s/it] 85%|████████▌ | 1135/1330 [25:55:36<1:49:43, 33.76s/it] 85%|████████▌ | 1136/1330 [25:57:33<3:09:20, 58.56s/it] 85%|████████▌ | 1137/1330 [25:57:54<2:32:47, 47.50s/it] 86%|████████▌ | 1138/1330 [25:58:56<2:45:57, 51.86s/it] 86%|████████▌ | 1139/1330 [25:59:24<2:21:51, 44.56s/it] 86%|████████▌ | 1140/1330 [25:59:55<2:07:59, 40.42s/it] 86%|████████▌ | 1141/1330 [26:00:34<2:06:39, 40.21s/it] 86%|████████▌ | 1142/1330 [26:01:03<1:55:01, 36.71s/it] 86%|████████▌ | 1143/1330 [26:01:38<1:53:15, 36.34s/it] 86%|████████▌ | 1144/1330 [26:01:59<1:37:50, 31.56s/it] 86%|████████▌ | 1145/1330 [26:02:33<1:39:58, 32.42s/it] 86%|████████▌ | 1146/1330 [26:04:31<2:57:44, 57.96s/it] 86%|████████▌ | 1147/1330 [26:07:56<5:11:01, 101.98s/it] 86%|████████▋ | 1148/1330 [26:14:39<9:43:35, 192.39s/it] 86%|████████▋ | 1149/1330 [26:16:06<8:04:43, 160.68s/it] 86%|████████▋ | 1150/1330 [26:16:32<6:01:05, 120.36s/it] 87%|████████▋ | 1151/1330 [26:16:59<4:35:56, 92.49s/it]  87%|████████▋ | 1152/1330 [26:18:08<4:12:58, 85.27s/it] 87%|████████▋ | 1153/1330 [26:18:48<3:31:49, 71.80s/it] 87%|████████▋ | 1154/1330 [26:19:14<2:49:57, 57.94s/it] 87%|████████▋ | 1155/1330 [26:21:43<4:08:51, 85.33s/it] 87%|████████▋ | 1156/1330 [26:22:18<3:23:58, 70.34s/it] 87%|████████▋ | 1157/1330 [26:22:55<2:53:59, 60.34s/it] 87%|████████▋ | 1158/1330 [26:23:34<2:34:19, 53.84s/it] 87%|████████▋ | 1159/1330 [26:24:09<2:16:59, 48.07s/it] 87%|████████▋ | 1160/1330 [26:25:03<2:21:25, 49.92s/it] 87%|████████▋ | 1161/1330 [26:25:30<2:01:15, 43.05s/it] 87%|████████▋ | 1162/1330 [26:25:57<1:47:18, 38.32s/it] 87%|████████▋ | 1163/1330 [26:26:54<2:01:55, 43.80s/it] 88%|████████▊ | 1164/1330 [26:28:00<2:19:46, 50.52s/it] 88%|████████▊ | 1165/1330 [26:28:36<2:07:02, 46.20s/it] 88%|████████▊ | 1166/1330 [26:29:10<1:56:05, 42.47s/it] 88%|████████▊ | 1167/1330 [26:29:32<1:38:28, 36.25s/it] 88%|████████▊ | 1168/1330 [26:29:57<1:29:16, 33.06s/it] 88%|████████▊ | 1169/1330 [26:30:34<1:31:31, 34.11s/it] 88%|████████▊ | 1170/1330 [26:31:00<1:24:30, 31.69s/it] 88%|████████▊ | 1171/1330 [26:31:28<1:21:28, 30.74s/it] 88%|████████▊ | 1172/1330 [26:32:05<1:25:41, 32.54s/it] 88%|████████▊ | 1173/1330 [26:32:38<1:25:17, 32.60s/it] 88%|████████▊ | 1174/1330 [26:32:58<1:15:22, 28.99s/it] 88%|████████▊ | 1175/1330 [26:33:41<1:25:12, 32.98s/it] 88%|████████▊ | 1176/1330 [26:34:02<1:15:29, 29.41s/it] 88%|████████▊ | 1177/1330 [26:34:42<1:23:29, 32.74s/it] 89%|████████▊ | 1178/1330 [26:35:08<1:18:00, 30.79s/it] 89%|████████▊ | 1179/1330 [26:35:37<1:15:25, 29.97s/it] 89%|████████▊ | 1180/1330 [26:37:23<2:12:05, 52.84s/it] 89%|████████▉ | 1181/1330 [26:37:55<1:56:06, 46.76s/it] 89%|████████▉ | 1182/1330 [26:38:39<1:53:19, 45.94s/it] 89%|████████▉ | 1183/1330 [26:39:05<1:37:40, 39.87s/it] 89%|████████▉ | 1184/1330 [26:39:39<1:32:21, 37.95s/it] 89%|████████▉ | 1185/1330 [26:40:00<1:19:46, 33.01s/it] 89%|████████▉ | 1186/1330 [26:40:47<1:29:32, 37.31s/it] 89%|████████▉ | 1187/1330 [26:41:14<1:20:58, 33.98s/it] 89%|████████▉ | 1188/1330 [26:41:38<1:13:21, 30.99s/it] 89%|████████▉ | 1189/1330 [26:42:27<1:25:47, 36.51s/it] 89%|████████▉ | 1190/1330 [26:43:06<1:27:16, 37.40s/it] 90%|████████▉ | 1191/1330 [26:43:40<1:23:59, 36.26s/it] 90%|████████▉ | 1192/1330 [26:44:21<1:26:29, 37.61s/it] 90%|████████▉ | 1193/1330 [26:44:46<1:17:35, 33.98s/it] 90%|████████▉ | 1194/1330 [26:47:30<2:45:33, 73.04s/it] 90%|████████▉ | 1195/1330 [26:48:05<2:18:15, 61.45s/it] 90%|████████▉ | 1196/1330 [26:48:46<2:03:29, 55.29s/it] 90%|█████████ | 1197/1330 [26:49:53<2:10:15, 58.76s/it] 90%|█████████ | 1198/1330 [26:50:21<1:49:29, 49.77s/it] 90%|█████████ | 1199/1330 [26:50:54<1:37:25, 44.62s/it] 90%|█████████ | 1200/1330 [26:51:28<1:29:31, 41.32s/it] 90%|█████████ | 1201/1330 [26:51:56<1:20:24, 37.40s/it] 90%|█████████ | 1202/1330 [26:54:24<2:30:50, 70.71s/it] 90%|█████████ | 1203/1330 [26:54:56<2:04:38, 58.89s/it] 91%|█████████ | 1204/1330 [26:55:21<1:42:36, 48.86s/it] 91%|█████████ | 1205/1330 [26:56:05<1:38:34, 47.31s/it] 91%|█████████ | 1206/1330 [26:56:33<1:26:11, 41.70s/it] 91%|█████████ | 1207/1330 [26:57:12<1:23:33, 40.76s/it] 91%|█████████ | 1208/1330 [26:57:59<1:26:36, 42.59s/it] 91%|█████████ | 1209/1330 [26:58:27<1:17:15, 38.31s/it] 91%|█████████ | 1210/1330 [26:59:13<1:21:13, 40.61s/it] 91%|█████████ | 1211/1330 [26:59:51<1:18:39, 39.66s/it] 91%|█████████ | 1212/1330 [27:00:30<1:18:07, 39.73s/it] 91%|█████████ | 1213/1330 [27:01:03<1:12:59, 37.44s/it] 91%|█████████▏| 1214/1330 [27:01:28<1:05:33, 33.91s/it] 91%|█████████▏| 1215/1330 [27:02:14<1:12:01, 37.58s/it] 91%|█████████▏| 1216/1330 [27:02:48<1:08:56, 36.28s/it] 92%|█████████▏| 1217/1330 [27:05:42<2:26:09, 77.61s/it] 92%|█████████▏| 1218/1330 [27:06:38<2:12:56, 71.22s/it] 92%|█████████▏| 1219/1330 [27:07:16<1:53:21, 61.28s/it] 92%|█████████▏| 1220/1330 [27:07:39<1:31:22, 49.84s/it] 92%|█████████▏| 1221/1330 [27:08:11<1:20:25, 44.27s/it] 92%|█████████▏| 1222/1330 [27:08:36<1:09:17, 38.50s/it] 92%|█████████▏| 1223/1330 [27:09:13<1:08:16, 38.29s/it] 92%|█████████▏| 1224/1330 [27:10:17<1:21:17, 46.01s/it] 92%|█████████▏| 1225/1330 [27:16:29<4:11:30, 143.72s/it] 92%|█████████▏| 1226/1330 [27:17:12<3:16:28, 113.35s/it] 92%|█████████▏| 1227/1330 [27:17:40<2:30:58, 87.95s/it]  92%|█████████▏| 1228/1330 [27:18:08<1:58:53, 69.94s/it] 92%|█████████▏| 1229/1330 [27:18:34<1:35:14, 56.58s/it] 92%|█████████▏| 1230/1330 [27:19:13<1:25:36, 51.36s/it] 93%|█████████▎| 1231/1330 [27:20:11<1:28:05, 53.39s/it] 93%|█████████▎| 1232/1330 [27:20:37<1:13:39, 45.10s/it] 93%|█████████▎| 1233/1330 [27:21:01<1:02:39, 38.76s/it] 93%|█████████▎| 1234/1330 [27:21:22<53:44, 33.58s/it]   93%|█████████▎| 1235/1330 [27:21:51<50:59, 32.20s/it] 93%|█████████▎| 1236/1330 [27:23:52<1:32:16, 58.90s/it] 93%|█████████▎| 1237/1330 [27:24:30<1:21:23, 52.51s/it] 93%|█████████▎| 1238/1330 [27:24:58<1:09:25, 45.27s/it] 93%|█████████▎| 1239/1330 [27:25:24<59:45, 39.40s/it]   93%|█████████▎| 1240/1330 [27:26:11<1:02:27, 41.64s/it] 93%|█████████▎| 1241/1330 [27:27:04<1:07:02, 45.19s/it] 93%|█████████▎| 1242/1330 [27:27:31<58:07, 39.63s/it]   93%|█████████▎| 1243/1330 [27:28:06<55:21, 38.17s/it] 94%|█████████▎| 1244/1330 [27:29:33<1:15:43, 52.83s/it] 94%|█████████▎| 1245/1330 [27:30:02<1:04:51, 45.79s/it] 94%|█████████▎| 1246/1330 [27:30:29<55:59, 39.99s/it]   94%|█████████▍| 1247/1330 [27:30:56<50:08, 36.25s/it] 94%|█████████▍| 1248/1330 [27:31:19<44:04, 32.25s/it] 94%|█████████▍| 1249/1330 [27:31:45<41:05, 30.44s/it] 94%|█████████▍| 1250/1330 [27:32:14<39:42, 29.78s/it] 94%|█████████▍| 1251/1330 [27:33:17<52:25, 39.82s/it] 94%|█████████▍| 1252/1330 [27:33:44<46:58, 36.13s/it] 94%|█████████▍| 1253/1330 [27:33:57<37:20, 29.10s/it] 94%|█████████▍| 1254/1330 [27:34:19<34:04, 26.90s/it] 94%|█████████▍| 1255/1330 [27:34:54<36:35, 29.28s/it] 94%|█████████▍| 1256/1330 [27:35:45<44:27, 36.04s/it] 95%|█████████▍| 1257/1330 [27:36:22<43:58, 36.15s/it] 95%|█████████▍| 1258/1330 [27:36:52<41:14, 34.36s/it] 95%|█████████▍| 1259/1330 [27:37:24<39:56, 33.76s/it] 95%|█████████▍| 1260/1330 [27:37:50<36:39, 31.43s/it] 95%|█████████▍| 1261/1330 [27:38:13<32:58, 28.67s/it] 95%|█████████▍| 1262/1330 [27:39:12<42:54, 37.85s/it] 95%|█████████▍| 1263/1330 [27:39:34<37:05, 33.21s/it] 95%|█████████▌| 1264/1330 [27:40:02<34:46, 31.61s/it] 95%|█████████▌| 1265/1330 [27:40:33<34:03, 31.43s/it] 95%|█████████▌| 1266/1330 [27:41:10<35:22, 33.17s/it] 95%|█████████▌| 1267/1330 [27:41:37<32:38, 31.08s/it] 95%|█████████▌| 1268/1330 [27:42:12<33:36, 32.52s/it] 95%|█████████▌| 1269/1330 [27:42:43<32:27, 31.92s/it] 95%|█████████▌| 1270/1330 [27:43:38<38:55, 38.92s/it] 96%|█████████▌| 1271/1330 [27:44:05<34:45, 35.34s/it] 96%|█████████▌| 1272/1330 [27:44:32<31:43, 32.82s/it] 96%|█████████▌| 1273/1330 [27:47:37<1:14:36, 78.54s/it] 96%|█████████▌| 1274/1330 [27:48:15<1:01:45, 66.16s/it] 96%|█████████▌| 1275/1330 [27:48:40<49:21, 53.85s/it]   96%|█████████▌| 1276/1330 [27:49:05<40:41, 45.21s/it] 96%|█████████▌| 1277/1330 [27:50:36<52:13, 59.12s/it] 96%|█████████▌| 1278/1330 [27:51:00<41:59, 48.46s/it] 96%|█████████▌| 1279/1330 [27:51:21<34:18, 40.37s/it] 96%|█████████▌| 1280/1330 [27:52:04<34:15, 41.10s/it] 96%|█████████▋| 1281/1330 [27:52:27<29:06, 35.65s/it] 96%|█████████▋| 1282/1330 [27:52:50<25:31, 31.90s/it] 96%|█████████▋| 1283/1330 [27:57:38<1:25:09, 108.72s/it] 97%|█████████▋| 1284/1330 [28:00:41<1:40:21, 130.89s/it] 97%|█████████▋| 1285/1330 [28:01:11<1:15:30, 100.68s/it] 97%|█████████▋| 1286/1330 [28:01:53<1:00:51, 82.99s/it]  97%|█████████▋| 1287/1330 [28:02:13<45:51, 64.00s/it]   97%|█████████▋| 1288/1330 [28:02:41<37:26, 53.48s/it] 97%|█████████▋| 1289/1330 [28:03:51<39:54, 58.40s/it] 97%|█████████▋| 1290/1330 [28:05:42<49:28, 74.20s/it] 97%|█████████▋| 1291/1330 [28:06:41<45:13, 69.57s/it] 97%|█████████▋| 1292/1330 [28:09:31<1:03:03, 99.56s/it] 97%|█████████▋| 1293/1330 [28:10:18<51:44, 83.91s/it]   97%|█████████▋| 1294/1330 [28:10:48<40:33, 67.60s/it] 97%|█████████▋| 1295/1330 [28:11:17<32:49, 56.26s/it] 97%|█████████▋| 1296/1330 [28:11:48<27:31, 48.56s/it] 98%|█████████▊| 1297/1330 [28:12:22<24:20, 44.24s/it] 98%|█████████▊| 1298/1330 [28:12:48<20:41, 38.81s/it] 98%|█████████▊| 1299/1330 [28:13:19<18:43, 36.25s/it] 98%|█████████▊| 1300/1330 [28:14:26<22:51, 45.70s/it] 98%|█████████▊| 1301/1330 [28:14:59<20:15, 41.91s/it] 98%|█████████▊| 1302/1330 [28:15:38<19:04, 40.87s/it] 98%|█████████▊| 1303/1330 [28:16:24<19:02, 42.30s/it] 98%|█████████▊| 1304/1330 [28:16:46<15:43, 36.30s/it] 98%|█████████▊| 1305/1330 [28:17:17<14:25, 34.63s/it] 98%|█████████▊| 1306/1330 [28:17:54<14:09, 35.41s/it] 98%|█████████▊| 1307/1330 [28:18:32<13:51, 36.14s/it] 98%|█████████▊| 1308/1330 [28:19:02<12:34, 34.32s/it] 98%|█████████▊| 1309/1330 [28:19:56<14:06, 40.30s/it] 98%|█████████▊| 1310/1330 [28:20:42<14:02, 42.14s/it] 99%|█████████▊| 1311/1330 [28:21:32<14:03, 44.39s/it] 99%|█████████▊| 1312/1330 [28:22:15<13:12, 44.04s/it] 99%|█████████▊| 1313/1330 [28:23:18<14:06, 49.79s/it] 99%|█████████▉| 1314/1330 [28:24:03<12:51, 48.23s/it] 99%|█████████▉| 1315/1330 [28:25:01<12:46, 51.10s/it] 99%|█████████▉| 1316/1330 [28:25:42<11:13, 48.07s/it] 99%|█████████▉| 1317/1330 [28:26:17<09:34, 44.18s/it] 99%|█████████▉| 1318/1330 [28:26:54<08:25, 42.15s/it] 99%|█████████▉| 1319/1330 [28:32:05<22:30, 122.76s/it] 99%|█████████▉| 1320/1330 [28:34:20<21:03, 126.36s/it] 99%|█████████▉| 1321/1330 [28:34:56<14:53, 99.29s/it]  99%|█████████▉| 1322/1330 [28:40:14<21:59, 164.93s/it] 99%|█████████▉| 1323/1330 [28:41:03<15:10, 130.06s/it]100%|█████████▉| 1324/1330 [28:41:33<10:00, 100.04s/it]100%|█████████▉| 1325/1330 [28:42:12<06:48, 81.68s/it] 100%|█████████▉| 1326/1330 [28:42:42<04:24, 66.16s/it]100%|█████████▉| 1327/1330 [28:43:19<02:52, 57.44s/it]100%|█████████▉| 1328/1330 [28:43:48<01:37, 48.97s/it]100%|█████████▉| 1329/1330 [28:44:31<00:47, 47.15s/it]100%|██████████| 1330/1330 [28:45:10<00:00, 44.64s/it]100%|██████████| 1330/1330 [28:45:10<00:00, 77.83s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train with 691,452 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1it [00:00,  5.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 6it [00:00, 23.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 11it [00:00, 32.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 16it [00:00, 35.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 21it [00:00, 38.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 26it [00:00, 39.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 31it [00:00, 39.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 36it [00:01, 35.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 41it [00:01, 36.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 47it [00:01, 42.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 52it [00:01, 40.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 57it [00:01, 41.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 62it [00:01, 41.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 67it [00:01, 40.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 72it [00:01, 42.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 77it [00:02, 43.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 82it [00:02, 43.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 87it [00:02, 40.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 92it [00:02, 40.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 97it [00:02, 40.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 102it [00:02, 39.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 107it [00:02, 39.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 112it [00:02, 41.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 117it [00:02, 42.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 122it [00:03, 42.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 127it [00:03, 41.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 132it [00:03, 42.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 137it [00:03, 43.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 142it [00:03, 39.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 147it [00:03, 40.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 152it [00:03, 40.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 158it [00:03, 45.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 164it [00:04, 47.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 169it [00:04, 46.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 174it [00:04, 46.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 180it [00:04, 46.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 185it [00:04, 47.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 191it [00:04, 48.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 196it [00:04, 46.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 201it [00:04, 47.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 207it [00:04, 49.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 213it [00:05, 51.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 219it [00:05, 53.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 225it [00:05, 52.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 231it [00:05, 54.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 238it [00:05, 56.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 244it [00:05, 49.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 250it [00:05, 51.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 256it [00:05, 50.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 266it [00:06, 59.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 273it [00:06, 61.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 280it [00:06, 58.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 286it [00:06, 55.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 292it [00:06, 51.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 301it [00:06, 57.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 308it [00:06, 60.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 315it [00:06, 57.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 322it [00:06, 59.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 329it [00:07, 56.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 335it [00:07, 56.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 342it [00:07, 58.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 349it [00:07, 58.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 355it [00:07, 52.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 363it [00:07, 58.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 369it [00:07, 54.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 375it [00:07, 54.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 382it [00:08, 56.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 388it [00:08, 57.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 397it [00:08, 62.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 404it [00:08, 61.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 411it [00:08, 54.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 417it [00:08, 54.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 423it [00:08, 51.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 430it [00:08, 55.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 436it [00:09, 51.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 442it [00:09, 51.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 448it [00:09, 51.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 454it [00:09, 51.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 460it [00:09, 51.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 466it [00:09, 48.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 474it [00:09, 56.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 480it [00:09, 53.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 487it [00:10, 54.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 493it [00:10, 54.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 500it [00:10, 56.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 506it [00:10, 55.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 513it [00:10, 56.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 519it [00:10, 57.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 525it [00:10, 52.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 535it [00:10, 63.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 542it [00:10, 58.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 548it [00:11, 56.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 556it [00:11, 60.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 563it [00:11, 57.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 569it [00:11, 49.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 576it [00:11, 54.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 582it [00:11, 55.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 589it [00:11, 58.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 596it [00:11, 58.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 603it [00:12, 58.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 609it [00:12, 58.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 615it [00:12, 51.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 621it [00:12, 49.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 627it [00:12, 50.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 634it [00:12, 55.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 642it [00:12, 60.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 652it [00:12, 71.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 660it [00:13, 64.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 669it [00:13, 69.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 677it [00:13, 70.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 685it [00:13, 63.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 693it [00:13, 65.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 700it [00:13, 64.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 708it [00:13, 67.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 715it [00:13, 67.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 723it [00:13, 70.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 731it [00:14, 62.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 738it [00:14, 54.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 748it [00:14, 63.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 755it [00:14, 60.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 762it [00:14, 61.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 769it [00:14, 58.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 775it [00:14, 58.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 782it [00:14, 59.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 789it [00:15, 60.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 797it [00:15, 64.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 804it [00:15, 63.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 811it [00:15, 61.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 818it [00:15, 60.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 826it [00:15, 62.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 833it [00:15, 62.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 840it [00:15, 63.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 848it [00:15, 64.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 856it [00:16, 67.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 863it [00:16, 62.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 870it [00:16, 57.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 880it [00:16, 65.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 887it [00:16, 64.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 897it [00:16, 70.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 905it [00:16, 71.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 913it [00:16, 66.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 921it [00:17, 68.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 928it [00:17, 62.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 938it [00:17, 70.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 946it [00:17, 69.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 954it [00:17, 62.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 962it [00:17, 66.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 969it [00:17, 64.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 976it [00:17, 65.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 987it [00:18, 73.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 996it [00:18, 75.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1004it [00:18, 67.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1012it [00:18, 69.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1020it [00:18, 69.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1028it [00:18, 64.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1037it [00:18, 70.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1045it [00:18, 72.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1053it [00:18, 73.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1061it [00:19, 68.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1069it [00:19, 69.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1077it [00:19, 64.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1084it [00:19, 64.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1091it [00:19, 64.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1100it [00:19, 69.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1110it [00:19, 72.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1118it [00:19, 67.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1125it [00:20, 68.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1132it [00:20, 67.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1141it [00:20, 72.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1150it [00:20, 76.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1159it [00:20, 79.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1167it [00:20, 77.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1175it [00:20, 65.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1184it [00:20, 70.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1193it [00:20, 75.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1203it [00:21, 80.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1212it [00:21, 64.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1220it [00:21, 67.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1228it [00:21, 69.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1236it [00:21, 67.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1244it [00:21, 62.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1253it [00:21, 68.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1262it [00:21, 73.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1270it [00:22, 69.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1279it [00:22, 71.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1289it [00:22, 78.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1298it [00:22, 55.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1307it [00:22, 60.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1315it [00:22, 61.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1322it [00:22, 62.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1333it [00:23, 73.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1347it [00:23, 90.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1357it [00:23, 73.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1366it [00:23, 76.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1375it [00:23, 71.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1385it [00:23, 76.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1395it [00:23, 80.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1405it [00:23, 85.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1414it [00:24, 83.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1423it [00:24, 77.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1434it [00:24, 82.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1445it [00:24, 88.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1455it [00:24, 83.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1465it [00:24, 83.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1474it [00:24, 72.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1485it [00:24, 77.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1498it [00:25, 87.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1508it [00:25, 78.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1517it [00:25, 79.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1526it [00:25, 81.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1535it [00:25, 83.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1544it [00:25, 73.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1552it [00:25, 67.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1562it [00:25, 72.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1570it [00:26, 71.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1580it [00:26, 77.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1588it [00:26, 77.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1596it [00:26, 77.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1604it [00:26, 73.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1612it [00:26, 74.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1622it [00:26, 74.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1631it [00:26, 78.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1640it [00:26, 76.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1649it [00:27, 79.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1659it [00:27, 79.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1669it [00:27, 80.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1678it [00:27, 82.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1687it [00:27, 77.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1695it [00:27, 73.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1703it [00:27, 73.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1711it [00:27, 65.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1718it [00:28, 60.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1725it [00:28, 62.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1735it [00:28, 71.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1748it [00:28, 82.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1760it [00:28, 92.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1774it [00:28, 99.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1785it [00:28, 101.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1796it [00:28, 97.87it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1806it [00:28, 93.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1816it [00:29, 82.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1829it [00:29, 92.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1843it [00:29, 102.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1857it [00:29, 107.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1868it [00:29, 86.78it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1878it [00:29, 83.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1889it [00:29, 89.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1899it [00:30, 84.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1908it [00:30, 79.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1917it [00:30, 75.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1929it [00:30, 82.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1938it [00:30, 81.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1947it [00:30, 77.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1955it [00:30, 62.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1973it [00:30, 88.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1983it [00:31, 88.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1993it [00:31, 79.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2002it [00:31, 75.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2011it [00:31, 73.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2019it [00:31, 71.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2034it [00:31, 88.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2044it [00:31, 77.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2059it [00:32, 90.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2072it [00:32, 96.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2083it [00:32, 83.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2092it [00:32, 82.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2103it [00:32, 88.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2113it [00:32, 81.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2122it [00:32, 79.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2131it [00:32, 74.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2139it [00:33, 63.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2148it [00:33, 69.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2156it [00:33, 62.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2166it [00:33, 69.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2174it [00:33, 62.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2181it [00:33, 63.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2192it [00:33, 71.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2203it [00:33, 80.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2212it [00:34, 78.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2221it [00:34, 76.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2230it [00:34, 78.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2241it [00:34, 86.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2250it [00:34, 78.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2259it [00:34, 81.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2268it [00:34, 81.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2277it [00:34, 79.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2286it [00:35, 75.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2294it [00:35, 64.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2307it [00:35, 72.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2315it [00:35, 69.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2329it [00:35, 84.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2339it [00:35, 85.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2348it [00:35, 82.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2357it [00:35, 76.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2370it [00:36, 87.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2381it [00:36, 90.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2391it [00:36, 83.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2402it [00:36, 90.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2412it [00:36, 82.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2421it [00:36, 82.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2430it [00:36, 75.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2438it [00:36, 76.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2453it [00:37, 94.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2463it [00:37, 95.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2473it [00:37, 90.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2483it [00:37, 89.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2494it [00:37, 93.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2504it [00:37, 91.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2514it [00:37, 90.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2524it [00:37, 92.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2534it [00:37, 85.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2543it [00:38, 81.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2555it [00:38, 91.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2568it [00:38, 99.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2579it [00:38, 85.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2589it [00:38, 71.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2599it [00:38, 75.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2610it [00:38, 76.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2619it [00:39, 69.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2637it [00:39, 88.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2647it [00:39, 88.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2657it [00:39, 87.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2666it [00:39, 78.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2676it [00:39, 80.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2685it [00:39, 81.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2698it [00:39, 93.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2708it [00:40, 76.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2717it [00:40, 77.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2729it [00:40, 82.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2738it [00:40, 74.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2758it [00:40, 103.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2770it [00:40, 100.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2781it [00:40, 90.99it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2793it [00:40, 96.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2805it [00:41, 102.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2817it [00:41, 106.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2828it [00:41, 105.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2839it [00:41, 99.99it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2852it [00:41, 101.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2866it [00:41, 109.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2878it [00:41, 106.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2889it [00:41, 95.73it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2899it [00:42, 89.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2910it [00:42, 92.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2921it [00:42, 94.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2931it [00:42, 88.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2941it [00:42, 88.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2950it [00:42, 81.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2959it [00:42, 83.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2968it [00:42, 76.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2982it [00:43, 91.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2992it [00:43, 93.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3003it [00:43, 94.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3013it [00:43, 87.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3022it [00:43, 78.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3032it [00:43, 80.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3045it [00:43, 89.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3055it [00:43, 81.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3064it [00:44, 73.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3073it [00:44, 77.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3087it [00:44, 92.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3097it [00:44, 94.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3107it [00:44, 92.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3121it [00:44, 101.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3140it [00:44, 124.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3155it [00:44, 130.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3169it [00:44, 124.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3182it [00:45, 95.35it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3193it [00:45, 94.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3204it [00:45, 79.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3213it [00:45, 80.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3223it [00:45, 82.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3232it [00:45, 82.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3245it [00:45, 91.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3258it [00:45, 100.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3269it [00:46, 97.48it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3279it [00:46, 96.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3289it [00:46, 94.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3300it [00:46, 96.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3311it [00:46, 98.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3321it [00:46, 84.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3336it [00:46, 97.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3347it [00:46, 100.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3361it [00:47, 108.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3373it [00:47, 90.55it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3387it [00:47, 101.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3402it [00:47, 106.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3414it [00:47, 108.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3426it [00:47, 108.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3438it [00:47, 105.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3450it [00:47, 108.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3462it [00:48, 98.45it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3473it [00:48, 95.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3483it [00:48, 89.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3495it [00:48, 96.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3505it [00:48, 95.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3519it [00:48, 106.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3530it [00:48, 93.33it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3543it [00:48, 102.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3564it [00:48, 127.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3578it [00:49, 112.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3590it [00:49, 111.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3602it [00:49, 104.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3616it [00:49, 113.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3628it [00:49, 111.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3640it [00:49, 112.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3657it [00:49, 127.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3671it [00:49, 122.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3684it [00:50, 111.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3696it [00:50, 112.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3708it [00:50, 111.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3721it [00:50, 113.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3733it [00:50, 105.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3744it [00:50, 94.51it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3754it [00:50, 94.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3764it [00:50, 88.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3774it [00:51, 80.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3783it [00:51, 77.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3796it [00:51, 88.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3807it [00:51, 93.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3824it [00:51, 113.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3838it [00:51, 116.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3850it [00:51, 101.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3861it [00:51, 102.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3872it [00:51, 102.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3886it [00:52, 108.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3897it [00:52, 107.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3908it [00:52, 104.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3919it [00:52, 103.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3930it [00:52, 103.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3947it [00:52, 116.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3959it [00:52, 96.92it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3978it [00:52, 119.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3991it [00:53, 106.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4003it [00:53, 101.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4014it [00:53, 101.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4025it [00:53, 101.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4046it [00:53, 125.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4062it [00:53, 132.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4076it [00:53, 118.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4091it [00:53, 125.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4092it [00:53, 75.91it/s] INFO:root:Writing test split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [01:08<1:22:59, 68.22s/it]  3%|▎         | 2/74 [01:53<1:05:51, 54.88s/it]  4%|▍         | 3/74 [02:27<53:31, 45.24s/it]    5%|▌         | 4/74 [03:02<47:57, 41.10s/it]  7%|▋         | 5/74 [03:55<52:28, 45.63s/it]  8%|▊         | 6/74 [05:44<1:16:01, 67.08s/it]  9%|▉         | 7/74 [07:43<1:33:52, 84.07s/it] 11%|█         | 8/74 [08:28<1:18:37, 71.48s/it] 12%|█▏        | 9/74 [09:10<1:07:31, 62.33s/it] 14%|█▎        | 10/74 [09:37<54:50, 51.41s/it]  15%|█▍        | 11/74 [10:05<46:33, 44.33s/it] 16%|█▌        | 12/74 [10:41<42:58, 41.59s/it] 18%|█▊        | 13/74 [11:33<45:34, 44.83s/it] 19%|█▉        | 14/74 [12:20<45:32, 45.54s/it] 20%|██        | 15/74 [12:55<41:47, 42.50s/it] 22%|██▏       | 16/74 [13:51<44:47, 46.33s/it] 23%|██▎       | 17/74 [14:21<39:20, 41.41s/it] 24%|██▍       | 18/74 [14:46<34:14, 36.68s/it] 26%|██▌       | 19/74 [15:18<32:15, 35.19s/it] 27%|██▋       | 20/74 [15:56<32:28, 36.08s/it] 28%|██▊       | 21/74 [16:33<31:56, 36.16s/it] 30%|██▉       | 22/74 [20:33<1:24:21, 97.35s/it] 31%|███       | 23/74 [21:29<1:12:25, 85.21s/it] 32%|███▏      | 24/74 [22:08<59:23, 71.26s/it]   34%|███▍      | 25/74 [25:35<1:31:21, 111.87s/it] 35%|███▌      | 26/74 [26:32<1:16:16, 95.34s/it]  36%|███▋      | 27/74 [27:44<1:09:17, 88.45s/it] 38%|███▊      | 28/74 [28:12<53:50, 70.22s/it]   39%|███▉      | 29/74 [28:44<44:08, 58.86s/it] 41%|████      | 30/74 [29:20<38:03, 51.90s/it] 42%|████▏     | 31/74 [29:50<32:39, 45.57s/it] 43%|████▎     | 32/74 [30:26<29:46, 42.53s/it] 45%|████▍     | 33/74 [30:59<27:05, 39.65s/it] 46%|████▌     | 34/74 [31:50<28:50, 43.25s/it] 47%|████▋     | 35/74 [32:18<25:05, 38.60s/it] 49%|████▊     | 36/74 [32:53<23:42, 37.43s/it] 50%|█████     | 37/74 [33:23<21:38, 35.11s/it] 51%|█████▏    | 38/74 [33:47<19:03, 31.78s/it] 53%|█████▎    | 39/74 [34:14<17:48, 30.51s/it] 54%|█████▍    | 40/74 [34:42<16:54, 29.83s/it] 55%|█████▌    | 41/74 [35:10<16:05, 29.25s/it] 57%|█████▋    | 42/74 [35:32<14:28, 27.13s/it] 58%|█████▊    | 43/74 [36:11<15:48, 30.61s/it] 59%|█████▉    | 44/74 [36:39<14:51, 29.70s/it] 61%|██████    | 45/74 [37:07<14:08, 29.27s/it] 62%|██████▏   | 46/74 [38:10<18:23, 39.43s/it] 64%|██████▎   | 47/74 [38:42<16:39, 37.01s/it] 65%|██████▍   | 48/74 [39:09<14:49, 34.21s/it] 66%|██████▌   | 49/74 [39:37<13:29, 32.38s/it] 68%|██████▊   | 50/74 [47:09<1:03:18, 158.28s/it] 69%|██████▉   | 51/74 [48:12<49:41, 129.63s/it]   70%|███████   | 52/74 [48:38<36:09, 98.61s/it]  72%|███████▏  | 53/74 [49:55<32:10, 91.94s/it] 73%|███████▎  | 54/74 [51:29<30:54, 92.70s/it] 74%|███████▍  | 55/74 [52:48<28:04, 88.65s/it] 76%|███████▌  | 56/74 [53:19<21:24, 71.35s/it] 77%|███████▋  | 57/74 [59:16<44:29, 157.05s/it] 78%|███████▊  | 58/74 [1:00:31<35:14, 132.17s/it] 80%|███████▉  | 59/74 [1:05:32<45:42, 182.84s/it] 81%|████████  | 60/74 [1:06:03<32:02, 137.35s/it] 82%|████████▏ | 61/74 [1:06:43<23:27, 108.29s/it] 84%|████████▍ | 62/74 [1:07:15<17:02, 85.23s/it]  85%|████████▌ | 63/74 [1:07:48<12:46, 69.68s/it] 86%|████████▋ | 64/74 [1:08:14<09:25, 56.59s/it] 88%|████████▊ | 65/74 [1:08:53<07:40, 51.11s/it] 89%|████████▉ | 66/74 [1:11:03<09:58, 74.85s/it] 91%|█████████ | 67/74 [1:11:30<07:04, 60.68s/it] 92%|█████████▏| 68/74 [1:12:03<05:13, 52.24s/it] 93%|█████████▎| 69/74 [1:12:39<03:56, 47.38s/it] 95%|█████████▍| 70/74 [1:13:12<02:51, 43.00s/it] 96%|█████████▌| 71/74 [1:13:46<02:01, 40.47s/it] 97%|█████████▋| 72/74 [1:15:34<02:01, 60.75s/it] 99%|█████████▊| 73/74 [1:16:07<00:52, 52.35s/it]100%|██████████| 74/74 [1:16:46<00:00, 48.25s/it]100%|██████████| 74/74 [1:16:46<00:00, 62.25s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test with 43,142 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 5it [00:00, 45.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 10it [00:00, 46.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 15it [00:00, 42.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 20it [00:00, 43.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 26it [00:00, 46.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 35it [00:00, 57.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 41it [00:00, 44.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 46it [00:01, 43.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 52it [00:01, 47.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 61it [00:01, 56.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 67it [00:01, 54.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 73it [00:01, 52.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 80it [00:01, 56.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 87it [00:01, 59.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 95it [00:01, 63.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 102it [00:01, 55.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 111it [00:02, 61.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 118it [00:02, 60.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 125it [00:02, 61.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 132it [00:02, 63.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 139it [00:02, 64.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 146it [00:02, 65.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 157it [00:02, 74.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 165it [00:02, 71.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 173it [00:02, 69.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 180it [00:03, 65.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 187it [00:03, 64.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 196it [00:03, 70.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 205it [00:03, 74.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 214it [00:03, 77.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 226it [00:03, 86.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 236it [00:03, 78.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 245it [00:03, 63.17it/s]INFO:root:Writing val split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [00:49<1:00:05, 49.39s/it]  3%|▎         | 2/74 [01:18<45:13, 37.69s/it]    4%|▍         | 3/74 [01:55<44:15, 37.39s/it]  5%|▌         | 4/74 [02:20<37:38, 32.26s/it]  7%|▋         | 5/74 [02:45<34:01, 29.59s/it]  8%|▊         | 6/74 [03:31<39:49, 35.14s/it]  9%|▉         | 7/74 [05:17<1:05:17, 58.46s/it] 11%|█         | 8/74 [11:31<2:54:45, 158.87s/it] 12%|█▏        | 9/74 [12:09<2:11:11, 121.10s/it] 14%|█▎        | 10/74 [16:22<2:52:32, 161.75s/it] 15%|█▍        | 11/74 [17:01<2:10:32, 124.33s/it] 16%|█▌        | 12/74 [17:33<1:39:17, 96.08s/it]  18%|█▊        | 13/74 [18:09<1:19:14, 77.95s/it] 19%|█▉        | 14/74 [18:39<1:03:25, 63.42s/it] 20%|██        | 15/74 [19:09<52:35, 53.48s/it]   22%|██▏       | 16/74 [19:59<50:35, 52.34s/it] 23%|██▎       | 17/74 [20:25<42:10, 44.39s/it] 24%|██▍       | 18/74 [20:51<36:14, 38.82s/it] 26%|██▌       | 19/74 [23:52<1:14:46, 81.57s/it] 27%|██▋       | 20/74 [24:41<1:04:36, 71.78s/it] 28%|██▊       | 21/74 [25:07<51:13, 57.99s/it]   30%|██▉       | 22/74 [25:42<44:20, 51.15s/it] 31%|███       | 23/74 [26:14<38:41, 45.52s/it] 32%|███▏      | 24/74 [27:06<39:25, 47.32s/it] 34%|███▍      | 25/74 [27:31<33:16, 40.75s/it] 35%|███▌      | 26/74 [28:09<31:46, 39.73s/it] 36%|███▋      | 27/74 [30:01<48:17, 61.64s/it] 38%|███▊      | 28/74 [30:35<40:54, 53.37s/it] 39%|███▉      | 29/74 [31:19<37:52, 50.50s/it] 41%|████      | 30/74 [32:21<39:35, 54.00s/it] 42%|████▏     | 31/74 [32:59<35:17, 49.23s/it] 43%|████▎     | 32/74 [33:47<34:05, 48.70s/it] 45%|████▍     | 33/74 [34:19<29:48, 43.63s/it] 46%|████▌     | 34/74 [34:55<27:35, 41.38s/it] 47%|████▋     | 35/74 [35:29<25:26, 39.15s/it] 49%|████▊     | 36/74 [35:57<22:46, 35.97s/it] 50%|█████     | 37/74 [36:23<20:12, 32.77s/it] 51%|█████▏    | 38/74 [37:15<23:16, 38.79s/it] 53%|█████▎    | 39/74 [37:50<21:52, 37.50s/it] 54%|█████▍    | 40/74 [38:24<20:38, 36.42s/it] 55%|█████▌    | 41/74 [38:55<19:13, 34.96s/it] 57%|█████▋    | 42/74 [39:22<17:18, 32.44s/it] 58%|█████▊    | 43/74 [39:47<15:35, 30.18s/it] 59%|█████▉    | 44/74 [40:12<14:21, 28.72s/it] 61%|██████    | 45/74 [40:33<12:48, 26.50s/it] 62%|██████▏   | 46/74 [41:09<13:39, 29.28s/it] 64%|██████▎   | 47/74 [41:37<12:56, 28.76s/it] 65%|██████▍   | 48/74 [42:17<13:57, 32.21s/it] 66%|██████▌   | 49/74 [42:51<13:41, 32.85s/it] 68%|██████▊   | 50/74 [43:54<16:43, 41.80s/it] 69%|██████▉   | 51/74 [44:27<15:02, 39.23s/it] 70%|███████   | 52/74 [45:03<14:00, 38.18s/it] 72%|███████▏  | 53/74 [45:39<13:08, 37.57s/it] 73%|███████▎  | 54/74 [46:10<11:53, 35.69s/it] 74%|███████▍  | 55/74 [46:48<11:30, 36.34s/it] 76%|███████▌  | 56/74 [47:14<09:58, 33.27s/it] 77%|███████▋  | 57/74 [48:06<10:57, 38.70s/it] 78%|███████▊  | 58/74 [49:38<14:36, 54.81s/it] 80%|███████▉  | 59/74 [50:15<12:21, 49.41s/it] 81%|████████  | 60/74 [50:36<09:31, 40.80s/it] 82%|████████▏ | 61/74 [51:31<09:45, 45.02s/it] 84%|████████▍ | 62/74 [52:16<08:59, 45.00s/it] 85%|████████▌ | 63/74 [53:23<09:28, 51.67s/it] 86%|████████▋ | 64/74 [54:25<09:07, 54.74s/it] 88%|████████▊ | 65/74 [55:02<07:24, 49.41s/it] 89%|████████▉ | 66/74 [55:44<06:18, 47.31s/it] 91%|█████████ | 67/74 [58:18<09:14, 79.27s/it] 92%|█████████▏| 68/74 [58:56<06:41, 66.94s/it] 93%|█████████▎| 69/74 [59:51<05:17, 63.45s/it] 95%|█████████▍| 70/74 [1:00:21<03:33, 53.36s/it] 96%|█████████▌| 71/74 [1:00:53<02:20, 46.79s/it] 97%|█████████▋| 72/74 [1:01:30<01:27, 43.93s/it] 99%|█████████▊| 73/74 [1:02:12<00:43, 43.23s/it]100%|██████████| 74/74 [1:02:39<00:00, 38.45s/it]100%|██████████| 74/74 [1:02:39<00:00, 50.80s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val with 40,437 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4it [00:00, 28.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 10it [00:00, 43.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 16it [00:00, 42.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 23it [00:00, 49.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 30it [00:00, 52.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 38it [00:00, 59.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 45it [00:00, 57.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 51it [00:00, 56.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 57it [00:01, 56.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 64it [00:01, 58.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 70it [00:01, 46.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 76it [00:01, 46.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 83it [00:01, 52.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:01, 51.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 95it [00:01, 51.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 101it [00:01, 52.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 108it [00:02, 56.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 116it [00:02, 61.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 123it [00:02, 60.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 130it [00:02, 62.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 139it [00:02, 64.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 146it [00:02, 66.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 155it [00:02, 70.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 163it [00:02, 69.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 172it [00:02, 74.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 183it [00:03, 84.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 193it [00:03, 88.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 202it [00:03, 80.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 214it [00:03, 88.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 224it [00:03, 79.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 235it [00:03, 84.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 235it [00:03, 63.99it/s]INFO:root:Using meta information from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleINFO:root:Using train file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_train.pickleINFO:root:Using test file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_test.pickleINFO:root:Using val file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_val.pickleINFO:root:Tokenzier created based on 7,555,415,275 tokensINFO:root:Using tabular tokenizer, created from meta information and containing 265 tokensINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train/ dataset, with 691,452 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test/ dataset, with 43,142 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val/ dataset, with 40,437 samples691452 training patients40437 validation patients43142 test patients265 vocab elementsGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputAdded path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Traceback (most recent call last):  File "/rds/homes/g/gaddcz/Projects/CPRD/examples/data/study_data/build_dataset.py", line 17, in <module>    from CPRD.data.foundational_loader import FoundationalDataModule  File "/rds/homes/g/gaddcz/Projects/CPRD/__init__.py", line 1, in <module>    from . import data  File "/rds/homes/g/gaddcz/Projects/CPRD/data/__init__.py", line 1, in <module>    from . import dataset  File "/rds/homes/g/gaddcz/Projects/CPRD/data/dataset/__init__.py", line 1, in <module>    from . import dataset_polars  File "/rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py", line 13, in <module>    from CPRD.data.dataset.collector import SQLiteDataCollector  File "/rds/homes/g/gaddcz/Projects/CPRD/data/dataset/collector.py", line 312    lazy_combined_frame = (IndentationError: unexpected indentGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.is_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: Noneoptim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [00:50<18:44:49, 50.78s/it]  0%|          | 2/1330 [02:23<27:50:57, 75.50s/it]  0%|          | 3/1330 [03:05<22:06:54, 60.00s/it]  0%|          | 4/1330 [03:47<19:28:28, 52.87s/it]  0%|          | 5/1330 [04:25<17:36:03, 47.82s/it]  0%|          | 6/1330 [04:54<15:09:31, 41.22s/it]  1%|          | 7/1330 [05:23<13:45:00, 37.42s/it]  1%|          | 8/1330 [05:48<12:12:28, 33.24s/it]  1%|          | 9/1330 [06:23<12:25:32, 33.86s/it]  1%|          | 10/1330 [07:21<15:09:15, 41.33s/it]  1%|          | 11/1330 [07:52<14:01:15, 38.27s/it]  1%|          | 12/1330 [08:15<12:18:23, 33.61s/it]  1%|          | 13/1330 [08:42<11:34:23, 31.63s/it]  1%|          | 14/1330 [09:11<11:15:33, 30.80s/it]  1%|          | 15/1330 [09:38<10:47:14, 29.53s/it]  1%|          | 16/1330 [10:52<15:43:57, 43.10s/it]  1%|▏         | 17/1330 [11:28<14:53:16, 40.82s/it]  1%|▏         | 18/1330 [12:08<14:47:23, 40.58s/it]  1%|▏         | 19/1330 [12:53<15:18:34, 42.04s/it]  2%|▏         | 20/1330 [13:57<17:36:33, 48.39s/it]  2%|▏         | 21/1330 [15:35<23:03:13, 63.40s/it]  2%|▏         | 22/1330 [18:09<32:53:48, 90.54s/it]  2%|▏         | 23/1330 [18:36<25:58:12, 71.53s/it]  2%|▏         | 24/1330 [19:01<20:54:18, 57.63s/it]  2%|▏         | 25/1330 [19:23<17:01:20, 46.96s/it]  2%|▏         | 26/1330 [19:55<15:20:29, 42.35s/it]  2%|▏         | 27/1330 [20:25<13:57:00, 38.54s/it]  2%|▏         | 28/1330 [20:52<12:40:44, 35.06s/it]  2%|▏         | 29/1330 [21:25<12:30:16, 34.60s/it]  2%|▏         | 30/1330 [21:56<12:08:04, 33.60s/it]  2%|▏         | 31/1330 [22:33<12:27:25, 34.52s/it]  2%|▏         | 32/1330 [22:57<11:17:08, 31.30s/it]  2%|▏         | 33/1330 [23:14<9:42:17, 26.94s/it]   3%|▎         | 34/1330 [23:31<8:43:03, 24.22s/it]  3%|▎         | 35/1330 [24:00<9:08:29, 25.41s/it]  3%|▎         | 36/1330 [24:24<9:04:04, 25.23s/it]  3%|▎         | 37/1330 [24:48<8:51:05, 24.64s/it]  3%|▎         | 38/1330 [25:15<9:08:35, 25.48s/it]  3%|▎         | 39/1330 [25:52<10:20:50, 28.85s/it]  3%|▎         | 40/1330 [26:38<12:13:29, 34.12s/it]  3%|▎         | 41/1330 [27:35<14:40:33, 40.99s/it]  3%|▎         | 42/1330 [31:59<38:32:46, 107.74s/it]  3%|▎         | 43/1330 [32:37<31:04:26, 86.92s/it]   3%|▎         | 44/1330 [34:47<35:38:11, 99.76s/it]  3%|▎         | 45/1330 [36:02<32:55:35, 92.25s/it]  3%|▎         | 46/1330 [36:44<27:36:43, 77.42s/it]  4%|▎         | 47/1330 [48:56<97:33:46, 273.75s/it]  4%|▎         | 48/1330 [50:59<81:23:14, 228.54s/it]  4%|▎         | 49/1330 [52:40<67:42:50, 190.30s/it]  4%|▍         | 50/1330 [54:39<59:59:10, 168.71s/it]  4%|▍         | 51/1330 [55:40<48:27:38, 136.40s/it]  4%|▍         | 52/1330 [56:40<40:20:18, 113.63s/it]  4%|▍         | 53/1330 [58:10<37:47:44, 106.55s/it]  4%|▍         | 54/1330 [59:21<33:56:46, 95.77s/it]   4%|▍         | 55/1330 [1:00:22<30:15:28, 85.43s/it]  4%|▍         | 56/1330 [1:01:43<29:44:28, 84.04s/it]  4%|▍         | 57/1330 [1:03:48<34:05:00, 96.39s/it]  4%|▍         | 58/1330 [1:05:05<31:57:06, 90.43s/it]  4%|▍         | 59/1330 [1:06:06<28:51:16, 81.73s/it]  5%|▍         | 60/1330 [1:08:33<35:44:49, 101.33s/it]  5%|▍         | 61/1330 [1:09:34<31:28:04, 89.27s/it]   5%|▍         | 62/1330 [1:11:01<31:08:53, 88.43s/it]  5%|▍         | 63/1330 [1:14:34<44:19:06, 125.92s/it]  5%|▍         | 64/1330 [1:16:24<42:35:18, 121.10s/it]  5%|▍         | 65/1330 [1:17:22<35:53:06, 102.12s/it]  5%|▍         | 66/1330 [1:18:36<32:55:52, 93.79s/it]   5%|▌         | 67/1330 [1:20:58<37:57:29, 108.19s/it]  5%|▌         | 68/1330 [1:22:09<34:01:39, 97.07s/it]   5%|▌         | 69/1330 [1:23:22<31:25:25, 89.71s/it]  5%|▌         | 70/1330 [1:24:26<28:42:52, 82.04s/it]  5%|▌         | 71/1330 [1:25:31<26:53:16, 76.88s/it]  5%|▌         | 72/1330 [1:27:37<32:00:49, 91.61s/it]  5%|▌         | 73/1330 [1:29:04<31:34:38, 90.44s/it]  6%|▌         | 74/1330 [1:30:22<30:13:01, 86.61s/it]  6%|▌         | 75/1330 [1:31:27<27:57:18, 80.19s/it]  6%|▌         | 76/1330 [1:32:37<26:48:33, 76.96s/it]  6%|▌         | 77/1330 [1:34:41<31:43:14, 91.14s/it]  6%|▌         | 78/1330 [1:35:48<29:08:40, 83.80s/it]  6%|▌         | 79/1330 [1:37:56<33:43:38, 97.06s/it]  6%|▌         | 80/1330 [1:39:06<30:56:58, 89.13s/it]  6%|▌         | 81/1330 [1:40:03<27:32:57, 79.41s/it]  6%|▌         | 82/1330 [1:40:56<24:48:47, 71.58s/it]  6%|▌         | 83/1330 [1:42:58<29:58:01, 86.51s/it]  6%|▋         | 84/1330 [1:43:45<25:55:53, 74.92s/it]  6%|▋         | 85/1330 [1:44:30<22:45:38, 65.81s/it]  6%|▋         | 86/1330 [1:45:30<22:05:55, 63.95s/it]  7%|▋         | 87/1330 [1:46:40<22:42:06, 65.75s/it]  7%|▋         | 88/1330 [1:48:35<27:51:05, 80.73s/it]  7%|▋         | 89/1330 [1:49:37<25:51:05, 74.99s/it]  7%|▋         | 90/1330 [1:58:13<71:25:42, 207.37s/it]  7%|▋         | 91/1330 [2:00:09<61:56:14, 179.96s/it]  7%|▋         | 92/1330 [2:01:02<48:44:15, 141.72s/it]  7%|▋         | 93/1330 [2:02:14<41:35:24, 121.04s/it]  7%|▋         | 94/1330 [2:03:07<34:29:34, 100.46s/it]  7%|▋         | 95/1330 [2:05:52<41:10:04, 120.00s/it]  7%|▋         | 96/1330 [2:06:54<35:06:51, 102.44s/it]  7%|▋         | 97/1330 [2:08:17<33:03:35, 96.52s/it]   7%|▋         | 98/1330 [2:10:48<38:39:26, 112.96s/it]  7%|▋         | 99/1330 [2:11:44<32:50:20, 96.04s/it]   8%|▊         | 100/1330 [2:12:48<29:28:21, 86.26s/it]  8%|▊         | 101/1330 [2:16:01<40:23:18, 118.31s/it]  8%|▊         | 102/1330 [2:17:03<34:37:23, 101.50s/it]  8%|▊         | 103/1330 [2:21:20<50:26:56, 148.02s/it]  8%|▊         | 104/1330 [2:22:19<41:20:08, 121.38s/it]  8%|▊         | 105/1330 [2:23:47<37:53:43, 111.37s/it]  8%|▊         | 106/1330 [2:24:42<32:08:39, 94.54s/it]   8%|▊         | 107/1330 [2:28:11<43:46:54, 128.88s/it]  8%|▊         | 108/1330 [2:29:13<36:55:20, 108.77s/it]  8%|▊         | 109/1330 [2:30:12<31:45:37, 93.64s/it]   8%|▊         | 110/1330 [2:31:08<27:57:13, 82.49s/it]  8%|▊         | 111/1330 [2:33:08<31:46:47, 93.85s/it]  8%|▊         | 112/1330 [2:37:28<48:31:52, 143.44s/it]  8%|▊         | 113/1330 [2:38:29<40:10:37, 118.85s/it]  9%|▊         | 114/1330 [2:39:55<36:50:07, 109.05s/it]  9%|▊         | 115/1330 [2:41:16<33:54:21, 100.46s/it]  9%|▊         | 116/1330 [2:43:25<36:48:17, 109.14s/it]  9%|▉         | 117/1330 [2:44:28<32:04:42, 95.20s/it]   9%|▉         | 118/1330 [2:45:19<27:37:38, 82.06s/it]  9%|▉         | 119/1330 [2:46:11<24:35:21, 73.10s/it]  9%|▉         | 120/1330 [2:50:38<44:05:41, 131.19s/it]  9%|▉         | 121/1330 [2:51:38<36:53:13, 109.84s/it]  9%|▉         | 122/1330 [2:52:38<31:50:56, 94.91s/it]   9%|▉         | 123/1330 [2:53:43<28:47:39, 85.88s/it]  9%|▉         | 124/1330 [2:57:10<40:57:28, 122.26s/it]  9%|▉         | 125/1330 [2:58:34<37:06:35, 110.87s/it]  9%|▉         | 126/1330 [2:59:25<31:00:14, 92.70s/it]  10%|▉         | 127/1330 [3:00:24<27:38:08, 82.70s/it] 10%|▉         | 128/1330 [3:03:25<37:26:38, 112.14s/it] 10%|▉         | 129/1330 [3:04:19<31:33:56, 94.62s/it]  10%|▉         | 130/1330 [3:05:35<29:44:30, 89.23s/it] 10%|▉         | 131/1330 [3:06:39<27:07:57, 81.47s/it] 10%|▉         | 132/1330 [3:10:21<41:10:09, 123.71s/it] 10%|█         | 133/1330 [3:18:42<78:46:07, 236.90s/it] 10%|█         | 134/1330 [3:20:19<64:43:44, 194.84s/it] 10%|█         | 135/1330 [3:21:24<51:44:56, 155.90s/it] 10%|█         | 136/1330 [3:22:27<42:27:16, 128.00s/it] 10%|█         | 137/1330 [3:23:47<37:39:02, 113.62s/it] 10%|█         | 138/1330 [3:25:17<35:16:47, 106.55s/it] 10%|█         | 139/1330 [3:26:21<31:05:36, 93.99s/it]  11%|█         | 140/1330 [3:27:14<26:59:44, 81.67s/it] 11%|█         | 141/1330 [3:28:07<24:04:31, 72.89s/it] 11%|█         | 142/1330 [3:29:09<23:00:14, 69.71s/it] 11%|█         | 143/1330 [3:30:13<22:24:17, 67.95s/it] 11%|█         | 144/1330 [3:31:21<22:26:49, 68.14s/it] 11%|█         | 145/1330 [3:34:40<35:21:55, 107.44s/it] 11%|█         | 146/1330 [3:36:04<33:00:27, 100.36s/it] 11%|█         | 147/1330 [3:38:01<34:37:26, 105.36s/it] 11%|█         | 148/1330 [3:39:28<32:47:44, 99.89s/it]  11%|█         | 149/1330 [3:41:41<35:59:50, 109.73s/it] 11%|█▏        | 150/1330 [3:43:28<35:43:07, 108.97s/it] 11%|█▏        | 151/1330 [3:44:23<30:19:23, 92.59s/it]  11%|█▏        | 152/1330 [3:45:15<26:21:33, 80.55s/it] 12%|█▏        | 153/1330 [3:46:04<23:14:13, 71.07s/it] 12%|█▏        | 154/1330 [3:46:53<21:02:36, 64.42s/it] 12%|█▏        | 155/1330 [3:47:55<20:46:25, 63.65s/it] 12%|█▏        | 156/1330 [3:49:45<25:19:16, 77.65s/it] 12%|█▏        | 157/1330 [3:50:49<23:56:28, 73.48s/it] 12%|█▏        | 158/1330 [3:52:28<26:23:02, 81.04s/it] 12%|█▏        | 159/1330 [3:54:06<28:01:23, 86.15s/it] 12%|█▏        | 160/1330 [3:55:05<25:24:32, 78.18s/it] 12%|█▏        | 161/1330 [3:56:07<23:45:34, 73.17s/it] 12%|█▏        | 162/1330 [3:57:03<22:02:30, 67.94s/it] 12%|█▏        | 163/1330 [4:06:28<70:26:51, 217.32s/it] 12%|█▏        | 164/1330 [4:08:29<60:58:57, 188.28s/it] 12%|█▏        | 165/1330 [4:10:24<53:46:35, 166.18s/it] 12%|█▏        | 166/1330 [4:12:37<50:35:58, 156.49s/it] 13%|█▎        | 167/1330 [4:13:43<41:43:21, 129.15s/it] 13%|█▎        | 168/1330 [4:14:43<35:02:48, 108.58s/it] 13%|█▎        | 169/1330 [4:15:54<31:17:59, 97.05s/it]  13%|█▎        | 170/1330 [4:17:30<31:10:36, 96.76s/it] 13%|█▎        | 171/1330 [4:18:48<29:22:45, 91.26s/it] 13%|█▎        | 172/1330 [4:21:23<35:32:08, 110.47s/it] 13%|█▎        | 173/1330 [4:22:32<31:27:12, 97.87s/it]  13%|█▎        | 174/1330 [4:24:21<32:33:16, 101.38s/it] 13%|█▎        | 175/1330 [4:25:26<28:57:16, 90.25s/it]  13%|█▎        | 176/1330 [4:26:51<28:26:21, 88.72s/it] 13%|█▎        | 177/1330 [4:27:58<26:19:55, 82.22s/it] 13%|█▎        | 178/1330 [4:29:00<24:22:25, 76.17s/it] 13%|█▎        | 179/1330 [4:31:03<28:48:59, 90.13s/it] 14%|█▎        | 180/1330 [4:31:58<25:30:07, 79.83s/it] 14%|█▎        | 181/1330 [4:32:54<23:10:38, 72.62s/it] 14%|█▎        | 182/1330 [4:33:56<22:10:15, 69.53s/it] 14%|█▍        | 183/1330 [4:37:09<33:54:13, 106.41s/it] 14%|█▍        | 184/1330 [4:38:18<30:19:47, 95.28s/it]  14%|█▍        | 185/1330 [4:39:13<26:28:32, 83.24s/it] 14%|█▍        | 186/1330 [4:40:25<25:21:27, 79.80s/it] 14%|█▍        | 187/1330 [4:41:36<24:28:35, 77.09s/it] 14%|█▍        | 188/1330 [4:44:39<34:33:49, 108.96s/it] 14%|█▍        | 189/1330 [4:45:35<29:28:50, 93.02s/it]  14%|█▍        | 190/1330 [4:46:39<26:39:10, 84.17s/it] 14%|█▍        | 191/1330 [4:48:03<26:37:24, 84.15s/it] 14%|█▍        | 192/1330 [4:48:56<23:38:13, 74.77s/it] 15%|█▍        | 193/1330 [4:51:11<29:22:53, 93.03s/it] 15%|█▍        | 194/1330 [4:52:06<25:46:32, 81.68s/it] 15%|█▍        | 195/1330 [4:52:52<22:18:15, 70.75s/it] 15%|█▍        | 196/1330 [4:53:34<19:36:35, 62.25s/it] 15%|█▍        | 197/1330 [4:55:10<22:48:06, 72.45s/it] 15%|█▍        | 198/1330 [4:55:59<20:35:00, 65.46s/it] 15%|█▍        | 199/1330 [5:03:22<56:07:05, 178.63s/it] 15%|█▌        | 200/1330 [5:06:55<59:17:34, 188.90s/it] 15%|█▌        | 201/1330 [5:08:47<51:58:19, 165.72s/it] 15%|█▌        | 202/1330 [5:10:49<47:52:57, 152.82s/it] 15%|█▌        | 203/1330 [5:11:48<39:00:37, 124.61s/it] 15%|█▌        | 204/1330 [5:12:41<32:13:19, 103.02s/it] 15%|█▌        | 205/1330 [5:13:27<26:54:11, 86.09s/it]  15%|█▌        | 206/1330 [5:14:11<22:54:46, 73.39s/it] 16%|█▌        | 207/1330 [5:20:17<50:14:07, 161.04s/it] 16%|█▌        | 208/1330 [5:21:20<41:00:29, 131.58s/it] 16%|█▌        | 209/1330 [5:21:59<32:21:52, 103.94s/it] 16%|█▌        | 210/1330 [5:22:33<25:47:44, 82.91s/it]  16%|█▌        | 211/1330 [5:23:40<24:17:27, 78.15s/it] 16%|█▌        | 212/1330 [5:24:26<21:17:58, 68.59s/it] 16%|█▌        | 213/1330 [5:25:09<18:54:32, 60.94s/it] 16%|█▌        | 214/1330 [5:25:54<17:21:44, 56.01s/it] 16%|█▌        | 215/1330 [5:26:35<16:00:49, 51.70s/it] 16%|█▌        | 216/1330 [5:27:42<17:23:21, 56.20s/it] 16%|█▋        | 217/1330 [5:28:39<17:26:50, 56.43s/it] 16%|█▋        | 218/1330 [5:29:44<18:11:33, 58.90s/it] 16%|█▋        | 219/1330 [5:36:31<50:25:07, 163.37s/it] 17%|█▋        | 220/1330 [5:37:21<39:52:38, 129.33s/it] 17%|█▋        | 221/1330 [5:39:40<40:43:22, 132.19s/it] 17%|█▋        | 222/1330 [5:40:37<33:44:18, 109.62s/it] 17%|█▋        | 223/1330 [5:44:31<45:11:28, 146.96s/it] 17%|█▋        | 224/1330 [5:45:23<36:24:54, 118.53s/it] 17%|█▋        | 225/1330 [5:46:08<29:37:12, 96.50s/it]  17%|█▋        | 226/1330 [5:49:49<41:05:30, 134.00s/it] 17%|█▋        | 227/1330 [5:51:04<35:34:40, 116.12s/it] 17%|█▋        | 228/1330 [5:52:29<32:40:41, 106.75s/it] 17%|█▋        | 229/1330 [5:53:31<28:34:31, 93.43s/it]  17%|█▋        | 230/1330 [5:54:17<24:11:00, 79.15s/it] 17%|█▋        | 231/1330 [5:55:00<20:53:13, 68.42s/it] 17%|█▋        | 232/1330 [5:55:43<18:31:43, 60.75s/it] 18%|█▊        | 233/1330 [6:02:00<47:23:13, 155.51s/it] 18%|█▊        | 234/1330 [6:02:47<37:25:48, 122.95s/it] 18%|█▊        | 235/1330 [6:03:38<30:52:31, 101.51s/it] 18%|█▊        | 236/1330 [6:04:36<26:52:22, 88.43s/it]  18%|█▊        | 237/1330 [6:05:20<22:44:57, 74.93s/it] 18%|█▊        | 238/1330 [6:07:23<27:06:13, 89.35s/it] 18%|█▊        | 239/1330 [6:08:33<25:21:06, 83.65s/it] 18%|█▊        | 240/1330 [6:09:35<23:22:53, 77.22s/it] 18%|█▊        | 241/1330 [6:10:20<20:25:43, 67.53s/it] 18%|█▊        | 242/1330 [6:11:52<22:37:28, 74.86s/it] 18%|█▊        | 243/1330 [6:12:34<19:39:34, 65.11s/it] 18%|█▊        | 244/1330 [6:13:12<17:08:52, 56.84s/it] 18%|█▊        | 245/1330 [6:14:03<16:36:53, 55.13s/it] 18%|█▊        | 246/1330 [6:15:23<18:52:39, 62.69s/it] 19%|█▊        | 247/1330 [6:16:25<18:43:32, 62.25s/it] 19%|█▊        | 248/1330 [6:17:17<17:51:10, 59.40s/it] 19%|█▊        | 249/1330 [6:18:13<17:30:27, 58.31s/it] 19%|█▉        | 250/1330 [6:19:04<16:51:03, 56.17s/it] 19%|█▉        | 251/1330 [6:21:17<23:44:42, 79.22s/it] 19%|█▉        | 252/1330 [6:29:11<59:09:07, 197.54s/it] 19%|█▉        | 253/1330 [6:30:39<49:16:33, 164.71s/it] 19%|█▉        | 254/1330 [6:33:53<51:52:29, 173.56s/it] 19%|█▉        | 255/1330 [6:34:56<41:54:37, 140.35s/it] 19%|█▉        | 256/1330 [6:36:02<35:10:41, 117.92s/it] 19%|█▉        | 257/1330 [6:42:43<60:31:02, 203.04s/it] 19%|█▉        | 258/1330 [6:43:48<48:07:11, 161.60s/it] 19%|█▉        | 259/1330 [6:44:30<37:21:07, 125.55s/it] 20%|█▉        | 260/1330 [6:45:10<29:42:25, 99.95s/it]  20%|█▉        | 261/1330 [6:45:51<24:27:44, 82.38s/it] 20%|█▉        | 262/1330 [6:46:36<21:04:51, 71.06s/it] 20%|█▉        | 263/1330 [6:48:06<22:45:57, 76.81s/it] 20%|█▉        | 264/1330 [6:49:02<20:50:21, 70.38s/it] 20%|█▉        | 265/1330 [6:49:53<19:10:17, 64.81s/it] 20%|██        | 266/1330 [6:50:37<17:17:27, 58.50s/it] 20%|██        | 267/1330 [6:51:23<16:11:23, 54.83s/it] 20%|██        | 268/1330 [6:55:25<32:43:10, 110.91s/it] 20%|██        | 269/1330 [6:56:27<28:18:34, 96.06s/it]  20%|██        | 270/1330 [6:57:08<23:29:12, 79.77s/it] 20%|██        | 271/1330 [6:58:21<22:49:05, 77.57s/it] 20%|██        | 272/1330 [6:59:16<20:48:08, 70.78s/it] 21%|██        | 273/1330 [7:01:34<26:45:55, 91.16s/it] 21%|██        | 274/1330 [7:02:32<23:45:29, 80.99s/it] 21%|██        | 275/1330 [7:03:31<21:50:39, 74.54s/it] 21%|██        | 276/1330 [7:06:12<29:22:41, 100.34s/it] 21%|██        | 277/1330 [7:08:34<33:00:39, 112.86s/it] 21%|██        | 278/1330 [7:09:24<27:29:49, 94.10s/it]  21%|██        | 279/1330 [7:10:20<24:07:11, 82.62s/it] 21%|██        | 280/1330 [7:11:51<24:49:36, 85.12s/it] 21%|██        | 281/1330 [7:12:39<21:34:54, 74.07s/it] 21%|██        | 282/1330 [7:13:29<19:26:59, 66.81s/it] 21%|██▏       | 283/1330 [7:14:19<17:55:22, 61.63s/it] 21%|██▏       | 284/1330 [7:15:07<16:47:35, 57.80s/it] 21%|██▏       | 285/1330 [7:16:11<17:17:59, 59.60s/it] 22%|██▏       | 286/1330 [7:17:22<18:15:10, 62.94s/it] 22%|██▏       | 287/1330 [7:18:30<18:38:57, 64.37s/it] 22%|██▏       | 288/1330 [7:19:15<17:00:16, 58.75s/it] 22%|██▏       | 289/1330 [7:20:05<16:10:33, 55.94s/it] 22%|██▏       | 290/1330 [7:22:49<25:31:00, 88.33s/it] 22%|██▏       | 291/1330 [7:23:56<23:39:43, 81.99s/it] 22%|██▏       | 292/1330 [7:24:49<21:06:37, 73.22s/it] 22%|██▏       | 293/1330 [7:26:06<21:25:14, 74.36s/it] 22%|██▏       | 294/1330 [7:27:30<22:16:22, 77.40s/it] 22%|██▏       | 295/1330 [7:28:14<19:19:57, 67.24s/it] 22%|██▏       | 296/1330 [7:28:51<16:45:44, 58.36s/it] 22%|██▏       | 297/1330 [7:29:27<14:47:52, 51.57s/it] 22%|██▏       | 298/1330 [7:30:07<13:44:55, 47.96s/it] 22%|██▏       | 299/1330 [7:31:04<14:32:57, 50.80s/it] 23%|██▎       | 300/1330 [7:32:00<14:56:34, 52.23s/it] 23%|██▎       | 301/1330 [7:32:43<14:10:43, 49.60s/it] 23%|██▎       | 302/1330 [7:33:51<15:46:46, 55.26s/it] 23%|██▎       | 303/1330 [7:35:01<17:00:57, 59.65s/it] 23%|██▎       | 304/1330 [7:35:42<15:21:14, 53.87s/it] 23%|██▎       | 305/1330 [7:36:22<14:09:21, 49.72s/it] 23%|██▎       | 306/1330 [7:37:46<17:05:42, 60.10s/it] 23%|██▎       | 307/1330 [7:38:34<16:00:09, 56.31s/it] 23%|██▎       | 308/1330 [7:39:35<16:26:37, 57.92s/it] 23%|██▎       | 309/1330 [7:41:41<22:12:56, 78.33s/it] 23%|██▎       | 310/1330 [7:42:25<19:17:19, 68.08s/it] 23%|██▎       | 311/1330 [7:43:17<17:50:18, 63.02s/it] 23%|██▎       | 312/1330 [7:44:39<19:27:56, 68.84s/it] 24%|██▎       | 313/1330 [7:45:19<16:59:27, 60.14s/it] 24%|██▎       | 314/1330 [7:46:15<16:36:34, 58.85s/it] 24%|██▎       | 315/1330 [7:47:50<19:38:46, 69.68s/it] 24%|██▍       | 316/1330 [7:48:43<18:14:35, 64.77s/it] 24%|██▍       | 317/1330 [7:49:24<16:13:46, 57.68s/it] 24%|██▍       | 318/1330 [7:51:22<21:15:54, 75.65s/it] 24%|██▍       | 319/1330 [7:52:26<20:15:44, 72.15s/it] 24%|██▍       | 320/1330 [7:54:11<23:04:11, 82.23s/it] 24%|██▍       | 321/1330 [7:54:54<19:42:43, 70.33s/it] 24%|██▍       | 322/1330 [7:56:11<20:16:13, 72.39s/it] 24%|██▍       | 323/1330 [7:57:04<18:38:03, 66.62s/it] 24%|██▍       | 324/1330 [7:58:08<18:24:24, 65.87s/it] 24%|██▍       | 325/1330 [7:59:28<19:34:02, 70.09s/it] 25%|██▍       | 326/1330 [8:01:04<21:40:28, 77.72s/it] 25%|██▍       | 327/1330 [8:01:49<18:56:25, 67.98s/it] 25%|██▍       | 328/1330 [8:02:35<17:02:56, 61.25s/it] 25%|██▍       | 329/1330 [8:03:13<15:06:20, 54.33s/it] 25%|██▍       | 330/1330 [8:04:30<17:01:02, 61.26s/it] 25%|██▍       | 331/1330 [8:05:19<15:59:01, 57.60s/it] 25%|██▍       | 332/1330 [8:07:05<19:56:54, 71.96s/it] 25%|██▌       | 333/1330 [8:13:47<47:23:39, 171.13s/it] 25%|██▌       | 334/1330 [8:14:35<37:04:31, 134.01s/it] 25%|██▌       | 335/1330 [8:15:24<29:58:30, 108.45s/it] 25%|██▌       | 336/1330 [8:16:20<25:37:51, 92.83s/it]  25%|██▌       | 337/1330 [8:16:57<21:01:28, 76.22s/it] 25%|██▌       | 338/1330 [8:17:24<16:54:05, 61.34s/it] 25%|██▌       | 339/1330 [8:18:01<14:53:06, 54.07s/it] 26%|██▌       | 340/1330 [8:18:47<14:13:52, 51.75s/it] 26%|██▌       | 341/1330 [8:19:27<13:11:04, 47.99s/it] 26%|██▌       | 342/1330 [8:20:25<13:59:16, 50.97s/it] 26%|██▌       | 343/1330 [8:21:05<13:08:30, 47.93s/it] 26%|██▌       | 344/1330 [8:22:06<14:10:58, 51.78s/it] 26%|██▌       | 345/1330 [8:23:02<14:30:08, 53.00s/it] 26%|██▌       | 346/1330 [8:23:53<14:19:43, 52.42s/it] 26%|██▌       | 347/1330 [8:24:55<15:06:29, 55.33s/it] 26%|██▌       | 348/1330 [8:26:51<20:01:20, 73.40s/it] 26%|██▌       | 349/1330 [8:27:50<18:51:14, 69.19s/it] 26%|██▋       | 350/1330 [8:28:55<18:26:24, 67.74s/it] 26%|██▋       | 351/1330 [8:29:45<17:00:22, 62.54s/it] 26%|██▋       | 352/1330 [8:30:38<16:15:04, 59.82s/it] 27%|██▋       | 353/1330 [8:31:49<17:07:27, 63.10s/it] 27%|██▋       | 354/1330 [8:32:50<16:54:32, 62.37s/it] 27%|██▋       | 355/1330 [8:40:09<47:32:13, 175.52s/it] 27%|██▋       | 356/1330 [8:40:54<36:50:26, 136.17s/it] 27%|██▋       | 357/1330 [8:42:33<33:48:40, 125.10s/it] 27%|██▋       | 358/1330 [8:43:16<27:06:03, 100.37s/it] 27%|██▋       | 359/1330 [8:45:03<27:39:17, 102.53s/it] 27%|██▋       | 360/1330 [8:45:50<23:06:05, 85.74s/it]  27%|██▋       | 361/1330 [8:46:46<20:41:44, 76.89s/it] 27%|██▋       | 362/1330 [8:48:26<22:32:32, 83.84s/it] 27%|██▋       | 363/1330 [8:49:36<21:23:59, 79.67s/it] 27%|██▋       | 364/1330 [8:50:35<19:43:43, 73.52s/it] 27%|██▋       | 365/1330 [8:52:59<25:22:41, 94.68s/it] 28%|██▊       | 366/1330 [8:55:12<28:23:03, 106.00s/it] 28%|██▊       | 367/1330 [8:55:56<23:25:56, 87.60s/it]  28%|██▊       | 368/1330 [8:56:52<20:51:06, 78.03s/it] 28%|██▊       | 369/1330 [8:57:32<17:45:20, 66.51s/it] 28%|██▊       | 370/1330 [8:58:13<15:41:04, 58.82s/it] 28%|██▊       | 371/1330 [9:01:53<28:33:51, 107.23s/it] 28%|██▊       | 372/1330 [9:03:27<27:31:17, 103.42s/it] 28%|██▊       | 373/1330 [9:04:38<24:53:39, 93.65s/it]  28%|██▊       | 374/1330 [9:05:37<22:07:22, 83.31s/it] 28%|██▊       | 375/1330 [9:06:19<18:45:55, 70.74s/it] 28%|██▊       | 376/1330 [9:07:07<16:55:58, 63.90s/it] 28%|██▊       | 377/1330 [9:08:03<16:18:45, 61.62s/it] 28%|██▊       | 378/1330 [9:08:59<15:49:28, 59.84s/it] 28%|██▊       | 379/1330 [9:10:11<16:50:21, 63.75s/it] 29%|██▊       | 380/1330 [9:10:43<14:18:15, 54.21s/it] 29%|██▊       | 381/1330 [9:11:23<13:07:43, 49.80s/it] 29%|██▊       | 382/1330 [9:15:04<26:39:06, 101.21s/it] 29%|██▉       | 383/1330 [9:15:45<21:50:01, 83.00s/it]  29%|██▉       | 384/1330 [9:16:50<20:24:23, 77.66s/it] 29%|██▉       | 385/1330 [9:24:55<52:27:42, 199.85s/it] 29%|██▉       | 386/1330 [9:29:43<59:23:24, 226.49s/it] 29%|██▉       | 387/1330 [9:30:28<45:03:44, 172.03s/it] 29%|██▉       | 388/1330 [9:31:16<35:15:40, 134.76s/it] 29%|██▉       | 389/1330 [9:31:57<27:50:54, 106.54s/it] 29%|██▉       | 390/1330 [9:34:35<31:50:17, 121.93s/it] 29%|██▉       | 391/1330 [9:35:40<27:23:20, 105.01s/it] 29%|██▉       | 392/1330 [9:37:08<26:01:50, 99.90s/it]  30%|██▉       | 393/1330 [9:37:57<21:58:26, 84.43s/it] 30%|██▉       | 394/1330 [9:38:50<19:32:47, 75.18s/it] 30%|██▉       | 395/1330 [9:39:31<16:51:25, 64.90s/it] 30%|██▉       | 396/1330 [9:40:40<17:08:32, 66.07s/it] 30%|██▉       | 397/1330 [9:41:49<17:23:18, 67.09s/it] 30%|██▉       | 398/1330 [9:42:50<16:53:11, 65.23s/it] 30%|███       | 399/1330 [9:45:02<22:02:50, 85.25s/it] 30%|███       | 400/1330 [9:45:53<19:22:47, 75.02s/it] 30%|███       | 401/1330 [9:46:56<18:24:06, 71.31s/it] 30%|███       | 402/1330 [9:47:46<16:45:15, 65.00s/it] 30%|███       | 403/1330 [9:48:55<17:01:34, 66.12s/it] 30%|███       | 404/1330 [9:49:49<16:02:39, 62.37s/it] 30%|███       | 405/1330 [9:51:58<21:11:32, 82.48s/it] 31%|███       | 406/1330 [9:52:47<18:33:15, 72.29s/it] 31%|███       | 407/1330 [9:53:50<17:52:56, 69.75s/it] 31%|███       | 408/1330 [9:54:49<17:02:16, 66.53s/it] 31%|███       | 409/1330 [9:56:06<17:49:03, 69.65s/it] 31%|███       | 410/1330 [9:57:10<17:21:12, 67.91s/it] 31%|███       | 411/1330 [9:58:04<16:16:11, 63.73s/it] 31%|███       | 412/1330 [9:59:38<18:32:25, 72.71s/it] 31%|███       | 413/1330 [10:01:07<19:46:19, 77.62s/it] 31%|███       | 414/1330 [10:01:53<17:21:24, 68.21s/it] 31%|███       | 415/1330 [10:02:46<16:07:47, 63.46s/it] 31%|███▏      | 416/1330 [10:03:32<14:46:58, 58.23s/it] 31%|███▏      | 417/1330 [10:04:24<14:20:46, 56.57s/it] 31%|███▏      | 418/1330 [10:05:05<13:07:56, 51.84s/it] 32%|███▏      | 419/1330 [10:05:50<12:37:18, 49.88s/it] 32%|███▏      | 420/1330 [10:06:48<13:10:11, 52.10s/it] 32%|███▏      | 421/1330 [10:07:32<12:32:53, 49.70s/it] 32%|███▏      | 422/1330 [10:08:13<11:54:50, 47.24s/it] 32%|███▏      | 423/1330 [10:08:48<10:57:43, 43.51s/it] 32%|███▏      | 424/1330 [10:09:26<10:30:40, 41.77s/it] 32%|███▏      | 425/1330 [10:10:39<12:50:32, 51.09s/it] 32%|███▏      | 426/1330 [10:11:43<13:48:14, 54.97s/it] 32%|███▏      | 427/1330 [10:12:25<12:49:33, 51.13s/it] 32%|███▏      | 428/1330 [10:17:25<31:30:07, 125.73s/it] 32%|███▏      | 429/1330 [10:19:58<33:34:17, 134.14s/it] 32%|███▏      | 430/1330 [10:20:49<27:17:38, 109.18s/it] 32%|███▏      | 431/1330 [10:21:48<23:28:22, 94.00s/it]  32%|███▏      | 432/1330 [10:22:28<19:23:56, 77.77s/it] 33%|███▎      | 433/1330 [10:24:26<22:24:20, 89.92s/it] 33%|███▎      | 434/1330 [10:25:19<19:37:06, 78.82s/it] 33%|███▎      | 435/1330 [10:25:56<16:28:11, 66.25s/it] 33%|███▎      | 436/1330 [10:26:45<15:09:00, 61.01s/it] 33%|███▎      | 437/1330 [10:28:53<20:06:43, 81.08s/it] 33%|███▎      | 438/1330 [10:29:44<17:54:43, 72.29s/it] 33%|███▎      | 439/1330 [10:30:22<15:20:06, 61.96s/it] 33%|███▎      | 440/1330 [10:31:04<13:49:40, 55.93s/it] 33%|███▎      | 441/1330 [10:31:44<12:38:25, 51.19s/it] 33%|███▎      | 442/1330 [10:32:21<11:32:10, 46.77s/it] 33%|███▎      | 443/1330 [10:33:38<13:48:14, 56.02s/it] 33%|███▎      | 444/1330 [10:34:21<12:49:33, 52.11s/it] 33%|███▎      | 445/1330 [10:34:50<11:05:18, 45.11s/it] 34%|███▎      | 446/1330 [10:35:32<10:50:24, 44.15s/it] 34%|███▎      | 447/1330 [10:36:06<10:03:15, 40.99s/it] 34%|███▎      | 448/1330 [10:36:38<9:23:21, 38.32s/it]  34%|███▍      | 449/1330 [10:41:19<27:14:15, 111.30s/it] 34%|███▍      | 450/1330 [10:41:59<22:00:00, 90.00s/it]  34%|███▍      | 451/1330 [10:42:51<19:09:07, 78.44s/it] 34%|███▍      | 452/1330 [10:43:56<18:10:57, 74.55s/it] 34%|███▍      | 453/1330 [10:44:50<16:35:53, 68.13s/it] 34%|███▍      | 454/1330 [10:45:34<14:52:02, 61.10s/it] 34%|███▍      | 455/1330 [10:46:45<15:34:25, 64.07s/it] 34%|███▍      | 456/1330 [10:47:28<13:59:37, 57.64s/it] 34%|███▍      | 457/1330 [10:48:14<13:09:35, 54.27s/it] 34%|███▍      | 458/1330 [10:48:54<12:05:14, 49.90s/it] 35%|███▍      | 459/1330 [10:50:23<14:52:36, 61.49s/it] 35%|███▍      | 460/1330 [10:51:14<14:08:48, 58.54s/it] 35%|███▍      | 461/1330 [10:59:47<47:02:20, 194.87s/it] 35%|███▍      | 462/1330 [11:00:34<36:14:34, 150.32s/it] 35%|███▍      | 463/1330 [11:01:11<28:03:25, 116.50s/it] 35%|███▍      | 464/1330 [11:02:06<23:34:56, 98.03s/it]  35%|███▍      | 465/1330 [11:02:51<19:45:18, 82.22s/it] 35%|███▌      | 466/1330 [11:03:30<16:37:30, 69.27s/it] 35%|███▌      | 467/1330 [11:06:04<22:39:20, 94.51s/it] 35%|███▌      | 468/1330 [11:07:04<20:09:15, 84.17s/it] 35%|███▌      | 469/1330 [11:08:36<20:40:18, 86.43s/it] 35%|███▌      | 470/1330 [11:09:42<19:14:00, 80.51s/it] 35%|███▌      | 471/1330 [11:10:27<16:40:39, 69.89s/it] 35%|███▌      | 472/1330 [11:11:01<14:04:52, 59.08s/it] 36%|███▌      | 473/1330 [11:12:22<15:36:59, 65.60s/it] 36%|███▌      | 474/1330 [11:13:03<13:51:25, 58.28s/it] 36%|███▌      | 475/1330 [11:13:40<12:18:18, 51.81s/it] 36%|███▌      | 476/1330 [11:14:28<11:59:18, 50.54s/it] 36%|███▌      | 477/1330 [11:15:02<10:50:13, 45.74s/it] 36%|███▌      | 478/1330 [11:16:14<12:40:41, 53.57s/it] 36%|███▌      | 479/1330 [11:17:18<13:25:59, 56.83s/it] 36%|███▌      | 480/1330 [11:18:14<13:20:57, 56.54s/it] 36%|███▌      | 481/1330 [11:20:36<19:23:12, 82.21s/it] 36%|███▌      | 482/1330 [11:21:20<16:39:08, 70.69s/it] 36%|███▋      | 483/1330 [11:22:39<17:13:02, 73.18s/it] 36%|███▋      | 484/1330 [11:23:17<14:43:53, 62.69s/it] 36%|███▋      | 485/1330 [11:24:42<16:17:39, 69.42s/it] 37%|███▋      | 486/1330 [11:25:36<15:09:36, 64.66s/it] 37%|███▋      | 487/1330 [11:26:39<15:00:30, 64.09s/it] 37%|███▋      | 488/1330 [11:27:26<13:48:19, 59.03s/it] 37%|███▋      | 489/1330 [11:31:50<28:07:20, 120.38s/it] 37%|███▋      | 490/1330 [11:32:54<24:10:40, 103.62s/it] 37%|███▋      | 491/1330 [11:33:44<20:25:20, 87.63s/it]  37%|███▋      | 492/1330 [11:34:42<18:18:17, 78.64s/it] 37%|███▋      | 493/1330 [11:35:19<15:22:05, 66.10s/it] 37%|███▋      | 494/1330 [11:36:42<16:33:59, 71.34s/it] 37%|███▋      | 495/1330 [11:37:33<15:05:24, 65.06s/it] 37%|███▋      | 496/1330 [11:38:22<13:56:14, 60.16s/it] 37%|███▋      | 497/1330 [11:39:48<15:43:05, 67.93s/it] 37%|███▋      | 498/1330 [11:40:28<13:46:18, 59.59s/it] 38%|███▊      | 499/1330 [11:44:11<25:05:49, 108.72s/it] 38%|███▊      | 500/1330 [11:45:29<22:54:42, 99.38s/it]  38%|███▊      | 501/1330 [11:48:26<28:17:05, 122.83s/it] 38%|███▊      | 502/1330 [11:49:11<22:50:26, 99.31s/it]  38%|███▊      | 503/1330 [11:53:41<34:35:58, 150.62s/it] 38%|███▊      | 504/1330 [11:54:27<27:21:59, 119.27s/it] 38%|███▊      | 505/1330 [11:55:11<22:07:32, 96.55s/it]  38%|███▊      | 506/1330 [11:56:10<19:31:48, 85.33s/it] 38%|███▊      | 507/1330 [11:56:59<17:02:58, 74.58s/it] 38%|███▊      | 508/1330 [11:58:36<18:31:23, 81.12s/it] 38%|███▊      | 509/1330 [11:59:28<16:31:36, 72.47s/it] 38%|███▊      | 510/1330 [12:00:08<14:18:26, 62.81s/it] 38%|███▊      | 511/1330 [12:00:46<12:34:57, 55.31s/it] 38%|███▊      | 512/1330 [12:01:57<13:37:51, 59.99s/it] 39%|███▊      | 513/1330 [12:02:56<13:32:26, 59.67s/it] 39%|███▊      | 514/1330 [12:04:55<17:32:02, 77.36s/it] 39%|███▊      | 515/1330 [12:05:48<15:51:47, 70.07s/it] 39%|███▉      | 516/1330 [12:06:56<15:45:25, 69.69s/it] 39%|███▉      | 517/1330 [12:07:39<13:54:55, 61.62s/it] 39%|███▉      | 518/1330 [12:08:41<13:53:22, 61.58s/it] 39%|███▉      | 519/1330 [12:09:55<14:44:49, 65.46s/it] 39%|███▉      | 520/1330 [12:13:02<22:55:45, 101.91s/it] 39%|███▉      | 521/1330 [12:16:07<28:31:30, 126.93s/it] 39%|███▉      | 522/1330 [12:17:26<25:14:52, 112.49s/it] 39%|███▉      | 523/1330 [12:18:22<21:25:55, 95.61s/it]  39%|███▉      | 524/1330 [12:18:57<17:16:35, 77.17s/it] 39%|███▉      | 525/1330 [12:19:47<15:28:14, 69.19s/it] 40%|███▉      | 526/1330 [12:20:24<13:18:36, 59.60s/it] 40%|███▉      | 527/1330 [12:21:57<15:31:44, 69.62s/it] 40%|███▉      | 528/1330 [12:22:46<14:06:40, 63.34s/it] 40%|███▉      | 529/1330 [12:23:33<13:01:15, 58.52s/it] 40%|███▉      | 530/1330 [12:24:34<13:09:08, 59.19s/it] 40%|███▉      | 531/1330 [12:25:08<11:26:53, 51.58s/it] 40%|████      | 532/1330 [12:26:10<12:07:16, 54.68s/it] 40%|████      | 533/1330 [12:27:00<11:48:54, 53.37s/it] 40%|████      | 534/1330 [12:27:43<11:04:20, 50.08s/it] 40%|████      | 535/1330 [12:28:21<10:17:08, 46.58s/it] 40%|████      | 536/1330 [12:34:59<33:31:57, 152.04s/it] 40%|████      | 537/1330 [12:35:41<26:13:04, 119.02s/it] 40%|████      | 538/1330 [12:36:54<23:09:47, 105.29s/it] 41%|████      | 539/1330 [12:38:10<21:11:41, 96.46s/it]  41%|████      | 540/1330 [12:38:46<17:12:13, 78.40s/it] 41%|████      | 541/1330 [12:41:17<21:55:23, 100.03s/it] 41%|████      | 542/1330 [12:42:00<18:09:14, 82.94s/it]  41%|████      | 543/1330 [12:42:48<15:50:02, 72.43s/it] 41%|████      | 544/1330 [12:44:18<16:58:44, 77.77s/it] 41%|████      | 545/1330 [12:45:10<15:17:48, 70.15s/it] 41%|████      | 546/1330 [12:45:49<13:12:57, 60.69s/it] 41%|████      | 547/1330 [12:46:49<13:10:11, 60.55s/it] 41%|████      | 548/1330 [12:48:05<14:07:45, 65.05s/it] 41%|████▏     | 549/1330 [12:48:56<13:13:04, 60.93s/it] 41%|████▏     | 550/1330 [12:49:36<11:51:19, 54.72s/it] 41%|████▏     | 551/1330 [12:50:09<10:23:23, 48.01s/it] 42%|████▏     | 552/1330 [12:51:08<11:07:18, 51.46s/it] 42%|████▏     | 553/1330 [12:51:53<10:38:39, 49.32s/it] 42%|████▏     | 554/1330 [12:52:32<9:59:43, 46.37s/it]  42%|████▏     | 555/1330 [12:54:25<14:17:27, 66.38s/it] 42%|████▏     | 556/1330 [12:56:26<17:46:59, 82.71s/it] 42%|████▏     | 557/1330 [12:57:02<14:44:16, 68.64s/it] 42%|████▏     | 558/1330 [12:58:19<15:17:59, 71.35s/it] 42%|████▏     | 559/1330 [13:00:42<19:52:41, 92.82s/it] 42%|████▏     | 560/1330 [13:01:31<16:59:54, 79.47s/it] 42%|████▏     | 561/1330 [13:02:00<13:44:56, 64.37s/it] 42%|████▏     | 562/1330 [13:02:39<12:07:34, 56.84s/it] 42%|████▏     | 563/1330 [13:03:14<10:43:56, 50.37s/it] 42%|████▏     | 564/1330 [13:04:24<11:55:16, 56.03s/it] 42%|████▏     | 565/1330 [13:09:09<26:31:31, 124.83s/it] 43%|████▎     | 566/1330 [13:10:11<22:28:48, 105.93s/it] 43%|████▎     | 567/1330 [13:10:46<17:57:11, 84.71s/it]  43%|████▎     | 568/1330 [13:12:38<19:40:41, 92.97s/it] 43%|████▎     | 569/1330 [13:13:23<16:34:45, 78.43s/it] 43%|████▎     | 570/1330 [13:14:09<14:29:23, 68.64s/it] 43%|████▎     | 571/1330 [13:15:11<14:06:36, 66.93s/it] 43%|████▎     | 572/1330 [13:15:49<12:15:04, 58.19s/it] 43%|████▎     | 573/1330 [13:16:26<10:51:33, 51.64s/it] 43%|████▎     | 574/1330 [13:17:07<10:12:37, 48.62s/it] 43%|████▎     | 575/1330 [13:18:12<11:14:24, 53.60s/it] 43%|████▎     | 576/1330 [13:19:13<11:41:35, 55.83s/it] 43%|████▎     | 577/1330 [13:19:51<10:32:32, 50.40s/it] 43%|████▎     | 578/1330 [13:20:29<9:42:59, 46.52s/it]  44%|████▎     | 579/1330 [13:21:12<9:29:58, 45.54s/it] 44%|████▎     | 580/1330 [13:21:47<8:50:57, 42.48s/it] 44%|████▎     | 581/1330 [13:24:03<14:40:19, 70.52s/it] 44%|████▍     | 582/1330 [13:24:58<13:40:29, 65.81s/it] 44%|████▍     | 583/1330 [13:25:42<12:17:21, 59.22s/it] 44%|████▍     | 584/1330 [13:26:20<10:58:35, 52.97s/it] 44%|████▍     | 585/1330 [13:27:12<10:51:34, 52.48s/it] 44%|████▍     | 586/1330 [13:27:45<9:40:21, 46.80s/it]  44%|████▍     | 587/1330 [13:28:12<8:25:35, 40.83s/it] 44%|████▍     | 588/1330 [13:28:52<8:20:15, 40.45s/it] 44%|████▍     | 589/1330 [13:29:38<8:41:27, 42.22s/it] 44%|████▍     | 590/1330 [13:30:20<8:38:42, 42.06s/it] 44%|████▍     | 591/1330 [13:31:07<8:57:21, 43.63s/it] 45%|████▍     | 592/1330 [13:31:35<7:58:21, 38.89s/it] 45%|████▍     | 593/1330 [13:32:15<8:03:13, 39.34s/it] 45%|████▍     | 594/1330 [13:32:55<8:03:07, 39.38s/it] 45%|████▍     | 595/1330 [13:34:53<12:51:32, 62.98s/it] 45%|████▍     | 596/1330 [13:35:34<11:30:08, 56.41s/it] 45%|████▍     | 597/1330 [13:37:11<14:00:28, 68.80s/it] 45%|████▍     | 598/1330 [13:38:50<15:48:33, 77.75s/it] 45%|████▌     | 599/1330 [13:39:41<14:10:00, 69.77s/it] 45%|████▌     | 600/1330 [13:40:32<12:59:03, 64.03s/it] 45%|████▌     | 601/1330 [13:41:13<11:34:18, 57.14s/it] 45%|████▌     | 602/1330 [13:42:19<12:05:06, 59.76s/it] 45%|████▌     | 603/1330 [13:43:01<11:01:32, 54.60s/it] 45%|████▌     | 604/1330 [13:44:13<12:02:07, 59.68s/it] 45%|████▌     | 605/1330 [13:45:13<12:02:20, 59.78s/it] 46%|████▌     | 606/1330 [13:45:53<10:49:11, 53.80s/it] 46%|████▌     | 607/1330 [13:47:26<13:10:45, 65.62s/it] 46%|████▌     | 608/1330 [13:48:51<14:19:31, 71.43s/it] 46%|████▌     | 609/1330 [13:49:32<12:27:56, 62.24s/it] 46%|████▌     | 610/1330 [13:50:37<12:36:25, 63.04s/it] 46%|████▌     | 611/1330 [13:51:22<11:33:05, 57.84s/it] 46%|████▌     | 612/1330 [13:52:38<12:37:17, 63.28s/it] 46%|████▌     | 613/1330 [13:53:20<11:19:40, 56.88s/it] 46%|████▌     | 614/1330 [13:54:00<10:18:18, 51.81s/it] 46%|████▌     | 615/1330 [13:56:24<15:46:44, 79.45s/it] 46%|████▋     | 616/1330 [13:57:35<15:12:53, 76.71s/it] 46%|████▋     | 617/1330 [13:58:27<13:43:37, 69.31s/it] 46%|████▋     | 618/1330 [13:59:12<12:16:28, 62.06s/it] 47%|████▋     | 619/1330 [14:02:18<19:38:39, 99.46s/it] 47%|████▋     | 620/1330 [14:03:33<18:08:18, 91.97s/it] 47%|████▋     | 621/1330 [14:04:16<15:11:45, 77.16s/it] 47%|████▋     | 622/1330 [14:04:55<12:56:21, 65.79s/it] 47%|████▋     | 623/1330 [14:05:45<12:00:34, 61.15s/it] 47%|████▋     | 624/1330 [14:07:15<13:41:49, 69.84s/it] 47%|████▋     | 625/1330 [14:08:07<12:36:31, 64.39s/it] 47%|████▋     | 626/1330 [14:08:55<11:37:51, 59.48s/it] 47%|████▋     | 627/1330 [14:10:45<14:35:12, 74.70s/it] 47%|████▋     | 628/1330 [14:12:37<16:45:41, 85.96s/it] 47%|████▋     | 629/1330 [14:13:19<14:09:54, 72.75s/it] 47%|████▋     | 630/1330 [14:14:01<12:18:33, 63.31s/it] 47%|████▋     | 631/1330 [14:14:45<11:10:37, 57.56s/it] 48%|████▊     | 632/1330 [14:15:31<10:30:08, 54.17s/it] 48%|████▊     | 633/1330 [14:16:46<11:41:00, 60.35s/it] 48%|████▊     | 634/1330 [14:17:32<10:49:35, 56.00s/it] 48%|████▊     | 635/1330 [14:18:39<11:28:34, 59.44s/it] 48%|████▊     | 636/1330 [14:19:48<12:00:22, 62.28s/it] 48%|████▊     | 637/1330 [14:20:54<12:10:56, 63.28s/it] 48%|████▊     | 638/1330 [14:21:55<12:04:48, 62.85s/it] 48%|████▊     | 639/1330 [14:22:40<11:00:09, 57.32s/it] 48%|████▊     | 640/1330 [14:23:26<10:21:11, 54.02s/it] 48%|████▊     | 641/1330 [14:24:08<9:39:19, 50.45s/it]  48%|████▊     | 642/1330 [14:24:55<9:25:57, 49.36s/it] 48%|████▊     | 643/1330 [14:25:41<9:12:18, 48.24s/it] 48%|████▊     | 644/1330 [14:26:43<10:00:55, 52.56s/it] 48%|████▊     | 645/1330 [14:27:30<9:40:47, 50.87s/it]  49%|████▊     | 646/1330 [14:28:23<9:46:32, 51.45s/it] 49%|████▊     | 647/1330 [14:30:23<13:38:22, 71.89s/it] 49%|████▊     | 648/1330 [14:31:17<12:35:57, 66.51s/it] 49%|████▉     | 649/1330 [14:32:16<12:11:07, 64.42s/it] 49%|████▉     | 650/1330 [14:33:03<11:09:36, 59.08s/it] 49%|████▉     | 651/1330 [14:33:39<9:51:14, 52.25s/it]  49%|████▉     | 652/1330 [14:34:19<9:07:54, 48.49s/it] 49%|████▉     | 653/1330 [14:35:07<9:04:59, 48.30s/it] 49%|████▉     | 654/1330 [14:36:39<11:31:36, 61.39s/it] 49%|████▉     | 655/1330 [14:37:23<10:33:18, 56.29s/it] 49%|████▉     | 656/1330 [14:38:07<9:51:58, 52.70s/it]  49%|████▉     | 657/1330 [14:39:48<12:34:00, 67.22s/it] 49%|████▉     | 658/1330 [14:41:05<13:04:09, 70.01s/it] 50%|████▉     | 659/1330 [14:41:47<11:28:15, 61.54s/it] 50%|████▉     | 660/1330 [14:42:45<11:14:59, 60.45s/it] 50%|████▉     | 661/1330 [14:44:11<12:40:12, 68.18s/it] 50%|████▉     | 662/1330 [14:44:57<11:26:53, 61.70s/it] 50%|████▉     | 663/1330 [14:47:04<15:01:09, 81.06s/it] 50%|████▉     | 664/1330 [14:48:43<15:59:07, 86.41s/it] 50%|█████     | 665/1330 [14:49:40<14:21:03, 77.69s/it] 50%|█████     | 666/1330 [14:50:23<12:23:56, 67.22s/it] 50%|█████     | 667/1330 [14:51:05<11:00:33, 59.78s/it] 50%|█████     | 668/1330 [14:52:08<11:11:14, 60.84s/it] 50%|█████     | 669/1330 [14:53:05<10:57:11, 59.65s/it] 50%|█████     | 670/1330 [14:58:28<25:24:52, 138.62s/it] 50%|█████     | 671/1330 [14:59:30<21:10:13, 115.65s/it] 51%|█████     | 672/1330 [15:01:28<21:16:37, 116.41s/it] 51%|█████     | 673/1330 [15:02:37<18:38:41, 102.16s/it] 51%|█████     | 674/1330 [15:04:01<17:35:25, 96.53s/it]  51%|█████     | 675/1330 [15:04:42<14:32:37, 79.94s/it] 51%|█████     | 676/1330 [15:05:25<12:30:28, 68.85s/it] 51%|█████     | 677/1330 [15:06:09<11:08:23, 61.41s/it] 51%|█████     | 678/1330 [15:06:41<9:30:28, 52.50s/it]  51%|█████     | 679/1330 [15:07:57<10:48:31, 59.77s/it] 51%|█████     | 680/1330 [15:08:39<9:49:42, 54.43s/it]  51%|█████     | 681/1330 [15:09:19<9:00:01, 49.92s/it] 51%|█████▏    | 682/1330 [15:10:24<9:48:38, 54.50s/it] 51%|█████▏    | 683/1330 [15:11:06<9:05:59, 50.63s/it] 51%|█████▏    | 684/1330 [15:12:49<11:57:01, 66.60s/it] 52%|█████▏    | 685/1330 [15:13:30<10:30:31, 58.65s/it] 52%|█████▏    | 686/1330 [15:17:32<20:22:51, 113.93s/it] 52%|█████▏    | 687/1330 [15:18:14<16:26:54, 92.09s/it]  52%|█████▏    | 688/1330 [15:20:23<18:24:44, 103.25s/it] 52%|█████▏    | 689/1330 [15:21:11<15:26:12, 86.70s/it]  52%|█████▏    | 690/1330 [15:22:13<14:04:37, 79.18s/it] 52%|█████▏    | 691/1330 [15:23:41<14:31:28, 81.83s/it] 52%|█████▏    | 692/1330 [15:24:24<12:28:44, 70.41s/it] 52%|█████▏    | 693/1330 [15:25:05<10:52:12, 61.43s/it] 52%|█████▏    | 694/1330 [15:25:45<9:44:45, 55.17s/it]  52%|█████▏    | 695/1330 [15:27:07<11:07:02, 63.03s/it] 52%|█████▏    | 696/1330 [15:30:11<17:30:45, 99.44s/it] 52%|█████▏    | 697/1330 [15:31:09<15:17:32, 86.97s/it] 52%|█████▏    | 698/1330 [15:31:55<13:04:51, 74.51s/it] 53%|█████▎    | 699/1330 [15:32:38<11:25:14, 65.16s/it] 53%|█████▎    | 700/1330 [15:33:13<9:49:23, 56.13s/it]  53%|█████▎    | 701/1330 [15:33:58<9:14:55, 52.93s/it] 53%|█████▎    | 702/1330 [15:34:30<8:07:33, 46.58s/it] 53%|█████▎    | 703/1330 [15:35:19<8:12:55, 47.17s/it] 53%|█████▎    | 704/1330 [15:35:55<7:38:30, 43.95s/it] 53%|█████▎    | 705/1330 [15:36:37<7:32:49, 43.47s/it] 53%|█████▎    | 706/1330 [15:40:19<16:48:26, 96.96s/it] 53%|█████▎    | 707/1330 [15:40:58<13:45:34, 79.51s/it] 53%|█████▎    | 708/1330 [15:41:45<12:04:25, 69.88s/it] 53%|█████▎    | 709/1330 [15:42:25<10:28:15, 60.70s/it] 53%|█████▎    | 710/1330 [15:43:17<10:02:01, 58.26s/it] 53%|█████▎    | 711/1330 [15:44:35<11:01:42, 64.14s/it] 54%|█████▎    | 712/1330 [15:45:21<10:05:13, 58.76s/it] 54%|█████▎    | 713/1330 [15:46:04<9:14:00, 53.87s/it]  54%|█████▎    | 714/1330 [15:47:02<9:26:33, 55.18s/it] 54%|█████▍    | 715/1330 [15:50:46<18:04:26, 105.80s/it] 54%|█████▍    | 716/1330 [15:51:29<14:49:20, 86.91s/it]  54%|█████▍    | 717/1330 [15:52:20<12:58:04, 76.16s/it] 54%|█████▍    | 718/1330 [15:52:56<10:55:28, 64.26s/it] 54%|█████▍    | 719/1330 [15:53:33<9:29:23, 55.91s/it]  54%|█████▍    | 720/1330 [15:54:12<8:38:43, 51.02s/it] 54%|█████▍    | 721/1330 [15:55:29<9:56:51, 58.80s/it] 54%|█████▍    | 722/1330 [15:56:40<10:31:34, 62.33s/it] 54%|█████▍    | 723/1330 [15:57:21<9:27:11, 56.06s/it]  54%|█████▍    | 724/1330 [15:58:50<11:03:39, 65.71s/it] 55%|█████▍    | 725/1330 [15:59:54<10:58:21, 65.29s/it] 55%|█████▍    | 726/1330 [16:00:33<9:37:45, 57.39s/it]  55%|█████▍    | 727/1330 [16:01:38<10:00:36, 59.76s/it] 55%|█████▍    | 728/1330 [16:02:34<9:47:50, 58.59s/it]  55%|█████▍    | 729/1330 [16:03:25<9:23:49, 56.29s/it] 55%|█████▍    | 730/1330 [16:04:12<8:55:00, 53.50s/it] 55%|█████▍    | 731/1330 [16:04:52<8:12:22, 49.32s/it] 55%|█████▌    | 732/1330 [16:05:45<8:25:14, 50.69s/it] 55%|█████▌    | 733/1330 [16:06:28<8:01:00, 48.34s/it] 55%|█████▌    | 734/1330 [16:06:58<7:06:08, 42.90s/it] 55%|█████▌    | 735/1330 [16:07:34<6:42:47, 40.62s/it] 55%|█████▌    | 736/1330 [16:08:32<7:34:40, 45.93s/it] 55%|█████▌    | 737/1330 [16:10:36<11:26:01, 69.41s/it] 55%|█████▌    | 738/1330 [16:11:27<10:29:31, 63.80s/it] 56%|█████▌    | 739/1330 [16:12:02<9:04:46, 55.31s/it]  56%|█████▌    | 740/1330 [16:12:45<8:25:54, 51.45s/it] 56%|█████▌    | 741/1330 [16:13:22<7:41:16, 46.99s/it] 56%|█████▌    | 742/1330 [16:14:42<9:19:16, 57.07s/it] 56%|█████▌    | 743/1330 [16:15:24<8:34:46, 52.62s/it] 56%|█████▌    | 744/1330 [16:15:57<7:35:16, 46.61s/it] 56%|█████▌    | 745/1330 [16:17:03<8:31:26, 52.46s/it] 56%|█████▌    | 746/1330 [16:18:27<10:01:31, 61.80s/it] 56%|█████▌    | 747/1330 [16:19:22<9:42:34, 59.96s/it]  56%|█████▌    | 748/1330 [16:20:11<9:09:17, 56.63s/it] 56%|█████▋    | 749/1330 [16:21:36<10:29:56, 65.05s/it] 56%|█████▋    | 750/1330 [16:22:30<9:58:37, 61.93s/it]  56%|█████▋    | 751/1330 [16:23:11<8:55:04, 55.45s/it] 57%|█████▋    | 752/1330 [16:23:47<7:58:14, 49.64s/it] 57%|█████▋    | 753/1330 [16:24:21<7:13:27, 45.07s/it] 57%|█████▋    | 754/1330 [16:24:57<6:44:45, 42.16s/it] 57%|█████▋    | 755/1330 [16:27:44<12:44:06, 79.73s/it] 57%|█████▋    | 756/1330 [16:28:17<10:27:34, 65.60s/it] 57%|█████▋    | 757/1330 [16:30:05<12:27:26, 78.27s/it] 57%|█████▋    | 758/1330 [16:30:44<10:34:39, 66.57s/it] 57%|█████▋    | 759/1330 [16:31:45<10:17:28, 64.88s/it] 57%|█████▋    | 760/1330 [16:32:54<10:29:31, 66.27s/it] 57%|█████▋    | 761/1330 [16:34:20<11:23:43, 72.10s/it] 57%|█████▋    | 762/1330 [16:36:49<15:01:19, 95.21s/it] 57%|█████▋    | 763/1330 [16:37:39<12:52:39, 81.76s/it] 57%|█████▋    | 764/1330 [16:38:14<10:36:49, 67.51s/it] 58%|█████▊    | 765/1330 [16:39:25<10:46:08, 68.62s/it] 58%|█████▊    | 766/1330 [16:40:03<9:19:16, 59.50s/it]  58%|█████▊    | 767/1330 [16:45:14<21:05:30, 134.87s/it] 58%|█████▊    | 768/1330 [16:45:53<16:34:42, 106.20s/it] 58%|█████▊    | 769/1330 [16:46:34<13:29:44, 86.60s/it]  58%|█████▊    | 770/1330 [16:47:06<10:53:58, 70.07s/it] 58%|█████▊    | 771/1330 [16:47:45<9:26:56, 60.85s/it]  58%|█████▊    | 772/1330 [16:48:52<9:42:02, 62.58s/it] 58%|█████▊    | 773/1330 [16:51:21<13:42:29, 88.60s/it] 58%|█████▊    | 774/1330 [16:51:48<10:50:37, 70.21s/it] 58%|█████▊    | 775/1330 [16:52:16<8:51:11, 57.43s/it]  58%|█████▊    | 776/1330 [16:52:41<7:22:04, 47.88s/it] 58%|█████▊    | 777/1330 [16:53:26<7:12:02, 46.88s/it] 58%|█████▊    | 778/1330 [16:53:53<6:18:05, 41.10s/it] 59%|█████▊    | 779/1330 [16:54:29<6:03:22, 39.57s/it] 59%|█████▊    | 780/1330 [16:55:22<6:39:27, 43.58s/it] 59%|█████▊    | 781/1330 [16:55:44<5:37:56, 36.93s/it] 59%|█████▉    | 782/1330 [16:56:15<5:20:33, 35.10s/it] 59%|█████▉    | 783/1330 [16:57:03<5:56:13, 39.07s/it] 59%|█████▉    | 784/1330 [16:57:25<5:07:39, 33.81s/it] 59%|█████▉    | 785/1330 [16:58:13<5:46:02, 38.10s/it] 59%|█████▉    | 786/1330 [16:58:35<5:01:55, 33.30s/it] 59%|█████▉    | 787/1330 [16:58:59<4:37:40, 30.68s/it] 59%|█████▉    | 788/1330 [16:59:24<4:20:06, 28.79s/it] 59%|█████▉    | 789/1330 [16:59:42<3:51:51, 25.71s/it] 59%|█████▉    | 790/1330 [17:02:55<11:23:20, 75.93s/it] 59%|█████▉    | 791/1330 [17:03:16<8:54:13, 59.47s/it]  60%|█████▉    | 792/1330 [17:03:43<7:23:51, 49.50s/it] 60%|█████▉    | 793/1330 [17:04:02<6:03:00, 40.56s/it] 60%|█████▉    | 794/1330 [17:04:20<5:01:09, 33.71s/it] 60%|█████▉    | 795/1330 [17:04:49<4:47:30, 32.24s/it] 60%|█████▉    | 796/1330 [17:05:05<4:04:41, 27.49s/it] 60%|█████▉    | 797/1330 [17:05:20<3:31:20, 23.79s/it] 60%|██████    | 798/1330 [17:05:31<2:56:35, 19.92s/it] 60%|██████    | 799/1330 [17:06:00<3:19:54, 22.59s/it] 60%|██████    | 800/1330 [17:06:17<3:04:37, 20.90s/it] 60%|██████    | 801/1330 [17:06:30<2:43:21, 18.53s/it] 60%|██████    | 802/1330 [17:08:52<8:08:02, 55.46s/it] 60%|██████    | 803/1330 [17:09:24<7:05:09, 48.40s/it] 60%|██████    | 804/1330 [17:09:37<5:33:19, 38.02s/it] 61%|██████    | 805/1330 [17:10:07<5:09:21, 35.36s/it] 61%|██████    | 806/1330 [17:10:30<4:36:55, 31.71s/it] 61%|██████    | 807/1330 [17:10:49<4:04:22, 28.04s/it] 61%|██████    | 808/1330 [17:10:57<3:10:38, 21.91s/it] 61%|██████    | 809/1330 [17:11:09<2:44:55, 18.99s/it] 61%|██████    | 810/1330 [17:11:29<2:47:15, 19.30s/it] 61%|██████    | 811/1330 [17:11:52<2:55:07, 20.24s/it] 61%|██████    | 812/1330 [17:12:20<3:15:57, 22.70s/it] 61%|██████    | 813/1330 [17:13:00<3:59:33, 27.80s/it] 61%|██████    | 814/1330 [17:13:24<3:49:47, 26.72s/it] 61%|██████▏   | 815/1330 [17:13:45<3:34:30, 24.99s/it] 61%|██████▏   | 816/1330 [17:14:10<3:34:18, 25.02s/it] 61%|██████▏   | 817/1330 [17:14:26<3:10:11, 22.25s/it] 62%|██████▏   | 818/1330 [17:14:51<3:18:26, 23.26s/it] 62%|██████▏   | 819/1330 [17:15:08<3:00:50, 21.23s/it] 62%|██████▏   | 820/1330 [17:15:22<2:42:11, 19.08s/it] 62%|██████▏   | 821/1330 [17:15:40<2:40:13, 18.89s/it] 62%|██████▏   | 822/1330 [17:16:14<3:16:28, 23.21s/it] 62%|██████▏   | 823/1330 [17:16:32<3:04:14, 21.80s/it] 62%|██████▏   | 824/1330 [17:17:35<4:46:46, 34.01s/it] 62%|██████▏   | 825/1330 [17:17:55<4:12:51, 30.04s/it] 62%|██████▏   | 826/1330 [17:18:09<3:29:47, 24.97s/it] 62%|██████▏   | 827/1330 [17:18:26<3:11:35, 22.85s/it] 62%|██████▏   | 828/1330 [17:18:43<2:54:42, 20.88s/it] 62%|██████▏   | 829/1330 [17:19:16<3:26:27, 24.73s/it] 62%|██████▏   | 830/1330 [17:19:31<3:00:57, 21.71s/it] 62%|██████▏   | 831/1330 [17:19:43<2:34:59, 18.64s/it] 63%|██████▎   | 832/1330 [17:19:58<2:25:53, 17.58s/it] 63%|██████▎   | 833/1330 [17:20:12<2:18:35, 16.73s/it] 63%|██████▎   | 834/1330 [17:20:26<2:09:41, 15.69s/it] 63%|██████▎   | 835/1330 [17:20:40<2:05:06, 15.17s/it] 63%|██████▎   | 836/1330 [17:20:50<1:52:11, 13.63s/it] 63%|██████▎   | 837/1330 [17:21:02<1:49:09, 13.28s/it] 63%|██████▎   | 838/1330 [17:21:14<1:44:17, 12.72s/it] 63%|██████▎   | 839/1330 [17:21:55<2:55:11, 21.41s/it] 63%|██████▎   | 840/1330 [17:22:14<2:49:23, 20.74s/it] 63%|██████▎   | 841/1330 [17:22:38<2:55:17, 21.51s/it] 63%|██████▎   | 842/1330 [17:22:48<2:27:01, 18.08s/it] 63%|██████▎   | 843/1330 [17:23:07<2:30:39, 18.56s/it] 63%|██████▎   | 844/1330 [17:23:39<3:01:43, 22.44s/it] 64%|██████▎   | 845/1330 [17:24:00<2:57:44, 21.99s/it] 64%|██████▎   | 846/1330 [17:24:11<2:31:08, 18.74s/it] 64%|██████▎   | 847/1330 [17:24:27<2:23:21, 17.81s/it] 64%|██████▍   | 848/1330 [17:24:41<2:15:00, 16.81s/it] 64%|██████▍   | 849/1330 [17:25:06<2:34:33, 19.28s/it] 64%|██████▍   | 850/1330 [17:25:20<2:22:12, 17.78s/it] 64%|██████▍   | 851/1330 [17:25:43<2:32:35, 19.11s/it] 64%|██████▍   | 852/1330 [17:25:56<2:19:24, 17.50s/it] 64%|██████▍   | 853/1330 [17:26:18<2:28:12, 18.64s/it] 64%|██████▍   | 854/1330 [17:26:34<2:23:00, 18.03s/it] 64%|██████▍   | 855/1330 [17:26:55<2:28:58, 18.82s/it] 64%|██████▍   | 856/1330 [17:27:05<2:07:54, 16.19s/it] 64%|██████▍   | 857/1330 [17:27:20<2:03:48, 15.70s/it] 65%|██████▍   | 858/1330 [17:28:43<4:42:28, 35.91s/it] 65%|██████▍   | 859/1330 [17:28:55<3:46:26, 28.85s/it] 65%|██████▍   | 860/1330 [17:29:05<3:00:41, 23.07s/it] 65%|██████▍   | 861/1330 [17:29:25<2:54:55, 22.38s/it] 65%|██████▍   | 862/1330 [17:29:39<2:34:18, 19.78s/it] 65%|██████▍   | 863/1330 [17:29:53<2:19:16, 17.89s/it] 65%|██████▍   | 864/1330 [17:30:00<1:54:34, 14.75s/it] 65%|██████▌   | 865/1330 [17:30:24<2:16:09, 17.57s/it] 65%|██████▌   | 866/1330 [17:30:34<1:57:37, 15.21s/it] 65%|██████▌   | 867/1330 [17:30:55<2:12:09, 17.13s/it] 65%|██████▌   | 868/1330 [17:31:07<1:58:09, 15.34s/it] 65%|██████▌   | 869/1330 [17:31:26<2:06:30, 16.47s/it] 65%|██████▌   | 870/1330 [17:31:46<2:13:59, 17.48s/it] 65%|██████▌   | 871/1330 [17:31:58<2:01:33, 15.89s/it] 66%|██████▌   | 872/1330 [17:32:18<2:11:15, 17.20s/it] 66%|██████▌   | 873/1330 [17:32:32<2:04:32, 16.35s/it] 66%|██████▌   | 874/1330 [17:33:16<3:06:23, 24.52s/it] 66%|██████▌   | 875/1330 [17:33:28<2:36:21, 20.62s/it] 66%|██████▌   | 876/1330 [17:33:41<2:20:10, 18.52s/it] 66%|██████▌   | 877/1330 [17:34:03<2:26:25, 19.39s/it] 66%|██████▌   | 878/1330 [17:34:24<2:31:27, 20.10s/it] 66%|██████▌   | 879/1330 [17:34:59<3:03:42, 24.44s/it] 66%|██████▌   | 880/1330 [17:35:24<3:05:52, 24.78s/it] 66%|██████▌   | 881/1330 [17:35:43<2:51:12, 22.88s/it] 66%|██████▋   | 882/1330 [17:35:55<2:26:38, 19.64s/it] 66%|██████▋   | 883/1330 [17:37:35<5:24:57, 43.62s/it] 66%|██████▋   | 884/1330 [17:38:33<5:57:32, 48.10s/it] 67%|██████▋   | 885/1330 [17:38:49<4:44:43, 38.39s/it] 67%|██████▋   | 886/1330 [17:39:10<4:06:00, 33.24s/it] 67%|██████▋   | 887/1330 [17:39:22<3:17:38, 26.77s/it] 67%|██████▋   | 888/1330 [17:39:41<3:00:37, 24.52s/it] 67%|██████▋   | 889/1330 [17:39:51<2:27:28, 20.06s/it] 67%|██████▋   | 890/1330 [17:40:07<2:18:56, 18.95s/it] 67%|██████▋   | 891/1330 [17:40:30<2:28:28, 20.29s/it] 67%|██████▋   | 892/1330 [17:40:51<2:28:18, 20.32s/it] 67%|██████▋   | 893/1330 [17:41:22<2:50:47, 23.45s/it] 67%|██████▋   | 894/1330 [17:41:40<2:39:32, 21.95s/it] 67%|██████▋   | 895/1330 [17:41:56<2:25:14, 20.03s/it] 67%|██████▋   | 896/1330 [17:42:09<2:09:29, 17.90s/it] 67%|██████▋   | 897/1330 [17:42:22<2:00:35, 16.71s/it] 68%|██████▊   | 898/1330 [17:42:40<2:02:27, 17.01s/it] 68%|██████▊   | 899/1330 [17:44:53<6:12:39, 51.88s/it] 68%|██████▊   | 900/1330 [17:45:09<4:53:27, 40.95s/it] 68%|██████▊   | 901/1330 [17:45:38<4:27:16, 37.38s/it] 68%|██████▊   | 902/1330 [17:45:50<3:33:20, 29.91s/it] 68%|██████▊   | 903/1330 [17:46:25<3:43:57, 31.47s/it] 68%|██████▊   | 904/1330 [17:46:43<3:14:13, 27.35s/it] 68%|██████▊   | 905/1330 [17:46:59<2:48:51, 23.84s/it] 68%|██████▊   | 906/1330 [17:47:21<2:45:24, 23.41s/it] 68%|██████▊   | 907/1330 [17:47:41<2:38:12, 22.44s/it] 68%|██████▊   | 908/1330 [17:47:57<2:23:28, 20.40s/it] 68%|██████▊   | 909/1330 [17:48:10<2:06:42, 18.06s/it] 68%|██████▊   | 910/1330 [17:48:23<1:57:26, 16.78s/it] 68%|██████▊   | 911/1330 [17:48:40<1:57:04, 16.77s/it] 69%|██████▊   | 912/1330 [17:48:56<1:54:04, 16.37s/it] 69%|██████▊   | 913/1330 [17:49:16<2:01:51, 17.53s/it] 69%|██████▊   | 914/1330 [17:49:33<1:59:50, 17.28s/it] 69%|██████▉   | 915/1330 [17:49:53<2:05:40, 18.17s/it] 69%|██████▉   | 916/1330 [17:50:14<2:10:57, 18.98s/it] 69%|██████▉   | 917/1330 [17:50:33<2:11:18, 19.08s/it] 69%|██████▉   | 918/1330 [17:50:57<2:20:32, 20.47s/it] 69%|██████▉   | 919/1330 [17:51:10<2:06:12, 18.43s/it] 69%|██████▉   | 920/1330 [17:51:19<1:44:44, 15.33s/it] 69%|██████▉   | 921/1330 [17:51:43<2:04:01, 18.19s/it] 69%|██████▉   | 922/1330 [17:51:54<1:48:18, 15.93s/it] 69%|██████▉   | 923/1330 [17:52:13<1:54:24, 16.87s/it] 69%|██████▉   | 924/1330 [17:52:41<2:15:42, 20.05s/it] 70%|██████▉   | 925/1330 [17:52:52<1:57:30, 17.41s/it] 70%|██████▉   | 926/1330 [17:53:11<2:01:33, 18.05s/it] 70%|██████▉   | 927/1330 [17:53:47<2:36:18, 23.27s/it] 70%|██████▉   | 928/1330 [17:54:12<2:39:54, 23.87s/it] 70%|██████▉   | 929/1330 [17:54:35<2:38:17, 23.69s/it] 70%|██████▉   | 930/1330 [17:54:52<2:23:15, 21.49s/it] 70%|███████   | 931/1330 [17:55:11<2:18:25, 20.82s/it] 70%|███████   | 932/1330 [17:55:29<2:12:37, 19.99s/it] 70%|███████   | 933/1330 [17:55:51<2:16:58, 20.70s/it] 70%|███████   | 934/1330 [17:56:37<3:06:19, 28.23s/it] 70%|███████   | 935/1330 [17:58:25<5:43:56, 52.24s/it] 70%|███████   | 936/1330 [18:03:30<14:00:43, 128.03s/it] 70%|███████   | 937/1330 [18:04:28<11:40:37, 106.97s/it] 71%|███████   | 938/1330 [18:05:09<9:28:33, 87.02s/it]   71%|███████   | 939/1330 [18:06:16<8:49:11, 81.21s/it] 71%|███████   | 940/1330 [18:07:14<8:01:41, 74.11s/it] 71%|███████   | 941/1330 [18:08:14<7:32:57, 69.86s/it] 71%|███████   | 942/1330 [18:08:48<6:23:02, 59.23s/it] 71%|███████   | 943/1330 [18:10:05<6:56:19, 64.55s/it] 71%|███████   | 944/1330 [18:10:44<6:05:47, 56.86s/it] 71%|███████   | 945/1330 [18:11:14<5:13:14, 48.82s/it] 71%|███████   | 946/1330 [18:11:39<4:26:36, 41.66s/it] 71%|███████   | 947/1330 [18:12:11<4:06:38, 38.64s/it] 71%|███████▏  | 948/1330 [18:16:37<11:20:09, 106.83s/it] 71%|███████▏  | 949/1330 [18:16:57<8:33:29, 80.86s/it]   71%|███████▏  | 950/1330 [18:17:27<6:55:16, 65.57s/it] 72%|███████▏  | 951/1330 [18:17:53<5:39:24, 53.73s/it] 72%|███████▏  | 952/1330 [18:18:34<5:15:09, 50.03s/it] 72%|███████▏  | 953/1330 [18:19:03<4:33:57, 43.60s/it] 72%|███████▏  | 954/1330 [18:19:23<3:49:42, 36.66s/it] 72%|███████▏  | 955/1330 [18:19:52<3:34:17, 34.29s/it] 72%|███████▏  | 956/1330 [18:20:14<3:10:38, 30.58s/it] 72%|███████▏  | 957/1330 [18:21:37<4:46:56, 46.16s/it] 72%|███████▏  | 958/1330 [18:22:27<4:54:22, 47.48s/it] 72%|███████▏  | 959/1330 [18:23:16<4:56:07, 47.89s/it] 72%|███████▏  | 960/1330 [18:23:57<4:42:56, 45.88s/it] 72%|███████▏  | 961/1330 [18:24:43<4:42:01, 45.86s/it] 72%|███████▏  | 962/1330 [18:25:12<4:11:16, 40.97s/it] 72%|███████▏  | 963/1330 [18:25:41<3:47:06, 37.13s/it] 72%|███████▏  | 964/1330 [18:26:09<3:29:40, 34.37s/it] 73%|███████▎  | 965/1330 [18:26:25<2:56:34, 29.03s/it] 73%|███████▎  | 966/1330 [18:27:03<3:11:25, 31.55s/it] 73%|███████▎  | 967/1330 [18:27:48<3:36:09, 35.73s/it] 73%|███████▎  | 968/1330 [18:28:05<3:02:26, 30.24s/it] 73%|███████▎  | 969/1330 [18:28:35<3:00:34, 30.01s/it] 73%|███████▎  | 970/1330 [18:28:54<2:40:32, 26.76s/it] 73%|███████▎  | 971/1330 [18:29:18<2:34:29, 25.82s/it] 73%|███████▎  | 972/1330 [18:29:37<2:23:01, 23.97s/it] 73%|███████▎  | 973/1330 [18:29:51<2:03:42, 20.79s/it] 73%|███████▎  | 974/1330 [18:30:24<2:26:11, 24.64s/it] 73%|███████▎  | 975/1330 [18:30:52<2:30:36, 25.46s/it] 73%|███████▎  | 976/1330 [18:34:43<8:34:28, 87.20s/it] 73%|███████▎  | 977/1330 [18:35:43<7:44:46, 79.00s/it] 74%|███████▎  | 978/1330 [18:36:05<6:02:33, 61.80s/it] 74%|███████▎  | 979/1330 [18:36:29<4:55:57, 50.59s/it] 74%|███████▎  | 980/1330 [18:37:04<4:27:00, 45.77s/it] 74%|███████▍  | 981/1330 [18:37:31<3:54:30, 40.32s/it] 74%|███████▍  | 982/1330 [18:38:11<3:52:55, 40.16s/it] 74%|███████▍  | 983/1330 [18:38:32<3:19:13, 34.45s/it] 74%|███████▍  | 984/1330 [18:38:55<2:59:25, 31.11s/it] 74%|███████▍  | 985/1330 [18:39:09<2:29:20, 25.97s/it] 74%|███████▍  | 986/1330 [18:39:34<2:26:02, 25.47s/it] 74%|███████▍  | 987/1330 [18:39:56<2:19:46, 24.45s/it] 74%|███████▍  | 988/1330 [18:40:50<3:10:53, 33.49s/it] 74%|███████▍  | 989/1330 [18:41:12<2:49:25, 29.81s/it] 74%|███████▍  | 990/1330 [18:41:37<2:40:48, 28.38s/it] 75%|███████▍  | 991/1330 [18:41:52<2:18:23, 24.49s/it] 75%|███████▍  | 992/1330 [18:42:22<2:26:28, 26.00s/it] 75%|███████▍  | 993/1330 [18:42:42<2:16:02, 24.22s/it] 75%|███████▍  | 994/1330 [18:43:17<2:34:49, 27.65s/it] 75%|███████▍  | 995/1330 [18:43:39<2:24:03, 25.80s/it] 75%|███████▍  | 996/1330 [18:44:00<2:16:32, 24.53s/it] 75%|███████▍  | 997/1330 [18:44:25<2:16:36, 24.61s/it] 75%|███████▌  | 998/1330 [18:44:51<2:18:09, 24.97s/it] 75%|███████▌  | 999/1330 [18:45:25<2:33:30, 27.83s/it] 75%|███████▌  | 1000/1330 [18:45:59<2:41:54, 29.44s/it] 75%|███████▌  | 1001/1330 [18:46:28<2:41:59, 29.54s/it] 75%|███████▌  | 1002/1330 [18:46:56<2:38:40, 29.03s/it] 75%|███████▌  | 1003/1330 [18:47:34<2:53:10, 31.78s/it] 75%|███████▌  | 1004/1330 [18:48:19<3:13:21, 35.59s/it] 76%|███████▌  | 1005/1330 [18:48:41<2:50:29, 31.47s/it] 76%|███████▌  | 1006/1330 [18:49:17<2:57:23, 32.85s/it] 76%|███████▌  | 1007/1330 [18:51:56<6:21:34, 70.88s/it] 76%|███████▌  | 1008/1330 [18:52:41<5:37:30, 62.89s/it] 76%|███████▌  | 1009/1330 [18:53:13<4:47:03, 53.66s/it] 76%|███████▌  | 1010/1330 [18:53:53<4:24:26, 49.58s/it] 76%|███████▌  | 1011/1330 [18:54:39<4:18:38, 48.65s/it] 76%|███████▌  | 1012/1330 [18:55:35<4:28:24, 50.64s/it] 76%|███████▌  | 1013/1330 [18:57:00<5:22:08, 60.97s/it] 76%|███████▌  | 1014/1330 [18:57:36<4:42:41, 53.67s/it] 76%|███████▋  | 1015/1330 [18:58:07<4:05:29, 46.76s/it] 76%|███████▋  | 1016/1330 [18:58:33<3:32:14, 40.55s/it] 76%|███████▋  | 1017/1330 [19:00:27<5:26:31, 62.59s/it] 77%|███████▋  | 1018/1330 [19:01:24<5:17:25, 61.04s/it] 77%|███████▋  | 1019/1330 [19:04:35<8:38:25, 100.02s/it] 77%|███████▋  | 1020/1330 [19:05:10<6:55:53, 80.50s/it]  77%|███████▋  | 1021/1330 [19:05:49<5:49:22, 67.84s/it] 77%|███████▋  | 1022/1330 [19:07:43<6:59:47, 81.78s/it] 77%|███████▋  | 1023/1330 [19:08:23<5:54:28, 69.28s/it] 77%|███████▋  | 1024/1330 [19:08:49<4:47:28, 56.37s/it] 77%|███████▋  | 1025/1330 [19:09:16<4:01:15, 47.46s/it] 77%|███████▋  | 1026/1330 [19:09:40<3:24:23, 40.34s/it] 77%|███████▋  | 1027/1330 [19:10:43<3:58:41, 47.27s/it] 77%|███████▋  | 1028/1330 [19:15:52<10:32:26, 125.65s/it] 77%|███████▋  | 1029/1330 [19:16:23<8:08:42, 97.42s/it]   77%|███████▋  | 1030/1330 [19:17:33<7:25:25, 89.08s/it] 78%|███████▊  | 1031/1330 [19:18:24<6:27:35, 77.78s/it] 78%|███████▊  | 1032/1330 [19:18:53<5:12:44, 62.97s/it] 78%|███████▊  | 1033/1330 [19:19:33<4:37:48, 56.12s/it] 78%|███████▊  | 1034/1330 [19:20:01<3:54:46, 47.59s/it] 78%|███████▊  | 1035/1330 [19:20:15<3:04:58, 37.62s/it] 78%|███████▊  | 1036/1330 [19:20:35<2:38:31, 32.35s/it] 78%|███████▊  | 1037/1330 [19:20:57<2:23:28, 29.38s/it] 78%|███████▊  | 1038/1330 [19:21:22<2:16:01, 27.95s/it] 78%|███████▊  | 1039/1330 [19:21:51<2:17:03, 28.26s/it] 78%|███████▊  | 1040/1330 [19:22:21<2:18:35, 28.67s/it] 78%|███████▊  | 1041/1330 [19:22:47<2:15:06, 28.05s/it] 78%|███████▊  | 1042/1330 [19:23:22<2:24:27, 30.09s/it] 78%|███████▊  | 1043/1330 [19:23:52<2:23:52, 30.08s/it] 78%|███████▊  | 1044/1330 [19:24:39<2:48:01, 35.25s/it] 79%|███████▊  | 1045/1330 [19:25:15<2:48:16, 35.43s/it] 79%|███████▊  | 1046/1330 [19:25:59<2:59:57, 38.02s/it] 79%|███████▊  | 1047/1330 [19:30:12<8:02:46, 102.35s/it] 79%|███████▉  | 1048/1330 [19:31:01<6:46:15, 86.44s/it]  79%|███████▉  | 1049/1330 [19:31:43<5:41:44, 72.97s/it] 79%|███████▉  | 1050/1330 [19:32:27<5:00:51, 64.47s/it] 79%|███████▉  | 1051/1330 [19:33:20<4:43:26, 60.95s/it] 79%|███████▉  | 1052/1330 [19:34:17<4:36:32, 59.69s/it] 79%|███████▉  | 1053/1330 [19:44:03<16:45:14, 217.74s/it] 79%|███████▉  | 1054/1330 [19:44:46<12:40:19, 165.29s/it] 79%|███████▉  | 1055/1330 [19:46:00<10:32:13, 137.94s/it] 79%|███████▉  | 1056/1330 [19:46:35<8:08:16, 106.92s/it]  79%|███████▉  | 1057/1330 [19:47:38<7:07:19, 93.92s/it]  80%|███████▉  | 1058/1330 [19:48:18<5:52:00, 77.65s/it] 80%|███████▉  | 1059/1330 [19:49:33<5:46:12, 76.65s/it] 80%|███████▉  | 1060/1330 [19:50:55<5:53:17, 78.51s/it] 80%|███████▉  | 1061/1330 [19:51:59<5:32:22, 74.13s/it] 80%|███████▉  | 1062/1330 [19:52:38<4:43:16, 63.42s/it] 80%|███████▉  | 1063/1330 [19:53:10<4:01:05, 54.18s/it] 80%|████████  | 1064/1330 [19:54:06<4:02:38, 54.73s/it] 80%|████████  | 1065/1330 [19:54:39<3:32:12, 48.05s/it] 80%|████████  | 1066/1330 [19:55:23<3:25:50, 46.78s/it] 80%|████████  | 1067/1330 [19:56:59<4:30:36, 61.74s/it] 80%|████████  | 1068/1330 [19:57:37<3:58:43, 54.67s/it] 80%|████████  | 1069/1330 [19:58:17<3:37:58, 50.11s/it] 80%|████████  | 1070/1330 [19:58:57<3:23:57, 47.07s/it] 81%|████████  | 1071/1330 [20:00:35<4:29:08, 62.35s/it] 81%|████████  | 1072/1330 [20:01:28<4:16:40, 59.69s/it] 81%|████████  | 1073/1330 [20:02:19<4:04:22, 57.05s/it] 81%|████████  | 1074/1330 [20:02:55<3:36:13, 50.68s/it] 81%|████████  | 1075/1330 [20:03:30<3:15:39, 46.04s/it] 81%|████████  | 1076/1330 [20:04:38<3:42:11, 52.49s/it] 81%|████████  | 1077/1330 [20:05:34<3:45:51, 53.56s/it] 81%|████████  | 1078/1330 [20:06:17<3:31:39, 50.40s/it] 81%|████████  | 1079/1330 [20:06:54<3:13:43, 46.31s/it] 81%|████████  | 1080/1330 [20:07:29<2:59:13, 43.01s/it] 81%|████████▏ | 1081/1330 [20:08:00<2:43:25, 39.38s/it] 81%|████████▏ | 1082/1330 [20:08:30<2:30:41, 36.46s/it] 81%|████████▏ | 1083/1330 [20:09:00<2:22:44, 34.68s/it] 82%|████████▏ | 1084/1330 [20:10:34<3:35:18, 52.51s/it] 82%|████████▏ | 1085/1330 [20:11:22<3:28:38, 51.09s/it] 82%|████████▏ | 1086/1330 [20:11:58<3:08:58, 46.47s/it] 82%|████████▏ | 1087/1330 [20:12:49<3:13:43, 47.84s/it] 82%|████████▏ | 1088/1330 [20:15:07<5:02:05, 74.90s/it] 82%|████████▏ | 1089/1330 [20:15:49<4:21:53, 65.20s/it] 82%|████████▏ | 1090/1330 [20:16:20<3:39:36, 54.90s/it] 82%|████████▏ | 1091/1330 [20:17:57<4:28:42, 67.46s/it] 82%|████████▏ | 1092/1330 [20:18:43<4:02:17, 61.08s/it] 82%|████████▏ | 1093/1330 [20:20:17<4:39:43, 70.81s/it] 82%|████████▏ | 1094/1330 [20:21:25<4:36:03, 70.19s/it] 82%|████████▏ | 1095/1330 [20:22:05<3:59:26, 61.14s/it] 82%|████████▏ | 1096/1330 [20:22:48<3:37:01, 55.65s/it] 82%|████████▏ | 1097/1330 [20:23:32<3:22:12, 52.07s/it] 83%|████████▎ | 1098/1330 [20:24:13<3:08:18, 48.70s/it] 83%|████████▎ | 1099/1330 [20:25:28<3:37:48, 56.57s/it] 83%|████████▎ | 1100/1330 [20:26:10<3:19:52, 52.14s/it] 83%|████████▎ | 1101/1330 [20:26:36<2:50:12, 44.60s/it] 83%|████████▎ | 1102/1330 [20:27:19<2:47:20, 44.04s/it] 83%|████████▎ | 1103/1330 [20:30:41<5:45:31, 91.33s/it] 83%|████████▎ | 1104/1330 [20:31:34<5:00:28, 79.77s/it] 83%|████████▎ | 1105/1330 [20:32:24<4:25:46, 70.87s/it] 83%|████████▎ | 1106/1330 [20:33:43<4:34:04, 73.41s/it] 83%|████████▎ | 1107/1330 [20:34:35<4:08:27, 66.85s/it] 83%|████████▎ | 1108/1330 [20:35:28<3:52:44, 62.90s/it] 83%|████████▎ | 1109/1330 [20:36:09<3:27:07, 56.24s/it] 83%|████████▎ | 1110/1330 [20:38:52<5:24:04, 88.38s/it] 84%|████████▎ | 1111/1330 [20:39:41<4:39:14, 76.50s/it] 84%|████████▎ | 1112/1330 [20:40:46<4:24:40, 72.85s/it] 84%|████████▎ | 1113/1330 [20:41:36<3:59:40, 66.27s/it] 84%|████████▍ | 1114/1330 [20:42:51<4:07:36, 68.78s/it] 84%|████████▍ | 1115/1330 [20:43:39<3:43:54, 62.48s/it] 84%|████████▍ | 1116/1330 [20:44:26<3:26:53, 58.01s/it] 84%|████████▍ | 1117/1330 [20:45:07<3:07:14, 52.74s/it] 84%|████████▍ | 1118/1330 [20:45:40<2:45:38, 46.88s/it] 84%|████████▍ | 1119/1330 [20:46:17<2:34:49, 44.02s/it] 84%|████████▍ | 1120/1330 [20:46:55<2:27:06, 42.03s/it] 84%|████████▍ | 1121/1330 [20:47:29<2:17:52, 39.58s/it] 84%|████████▍ | 1122/1330 [20:49:16<3:28:06, 60.03s/it] 84%|████████▍ | 1123/1330 [20:50:20<3:30:20, 60.97s/it] 85%|████████▍ | 1124/1330 [20:51:02<3:10:07, 55.38s/it] 85%|████████▍ | 1125/1330 [20:55:29<6:45:52, 118.79s/it] 85%|████████▍ | 1126/1330 [20:56:10<5:24:40, 95.49s/it]  85%|████████▍ | 1127/1330 [20:56:39<4:15:46, 75.60s/it] 85%|████████▍ | 1128/1330 [20:57:17<3:36:21, 64.26s/it] 85%|████████▍ | 1129/1330 [20:57:46<2:59:57, 53.72s/it] 85%|████████▍ | 1130/1330 [20:58:55<3:14:13, 58.27s/it] 85%|████████▌ | 1131/1330 [20:59:39<2:58:56, 53.95s/it] 85%|████████▌ | 1132/1330 [21:00:15<2:40:40, 48.69s/it] 85%|████████▌ | 1133/1330 [21:01:30<3:06:06, 56.69s/it] 85%|████████▌ | 1134/1330 [21:01:57<2:35:25, 47.58s/it] 85%|████████▌ | 1135/1330 [21:02:40<2:30:14, 46.23s/it] 85%|████████▌ | 1136/1330 [21:05:06<4:06:08, 76.13s/it] 85%|████████▌ | 1137/1330 [21:05:36<3:20:47, 62.42s/it] 86%|████████▌ | 1138/1330 [21:07:25<4:04:37, 76.44s/it] 86%|████████▌ | 1139/1330 [21:07:59<3:22:53, 63.74s/it] 86%|████████▌ | 1140/1330 [21:08:37<2:57:15, 55.98s/it] 86%|████████▌ | 1141/1330 [21:09:22<2:45:18, 52.48s/it] 86%|████████▌ | 1142/1330 [21:09:56<2:26:59, 46.91s/it] 86%|████████▌ | 1143/1330 [21:10:34<2:17:58, 44.27s/it] 86%|████████▌ | 1144/1330 [21:10:54<1:55:23, 37.22s/it] 86%|████████▌ | 1145/1330 [21:11:29<1:52:41, 36.55s/it] 86%|████████▌ | 1146/1330 [21:13:36<3:14:44, 63.50s/it] 86%|████████▌ | 1147/1330 [21:17:22<5:42:40, 112.35s/it] 86%|████████▋ | 1148/1330 [21:24:24<10:22:45, 205.31s/it] 86%|████████▋ | 1149/1330 [21:25:51<8:32:18, 169.82s/it]  86%|████████▋ | 1150/1330 [21:26:22<6:24:18, 128.10s/it] 87%|████████▋ | 1151/1330 [21:26:55<4:56:59, 99.55s/it]  87%|████████▋ | 1152/1330 [21:28:16<4:38:45, 93.96s/it] 87%|████████▋ | 1153/1330 [21:29:08<4:00:22, 81.48s/it] 87%|████████▋ | 1154/1330 [21:29:39<3:13:58, 66.13s/it] 87%|████████▋ | 1155/1330 [21:32:14<4:30:54, 92.89s/it] 87%|████████▋ | 1156/1330 [21:32:51<3:40:22, 75.99s/it] 87%|████████▋ | 1157/1330 [21:33:30<3:07:16, 64.95s/it] 87%|████████▋ | 1158/1330 [21:34:10<2:44:41, 57.45s/it] 87%|████████▋ | 1159/1330 [21:34:46<2:25:57, 51.21s/it] 87%|████████▋ | 1160/1330 [21:35:44<2:30:55, 53.27s/it] 87%|████████▋ | 1161/1330 [21:36:18<2:13:06, 47.26s/it] 87%|████████▋ | 1162/1330 [21:36:49<1:58:41, 42.39s/it] 87%|████████▋ | 1163/1330 [21:38:00<2:22:11, 51.09s/it] 88%|████████▊ | 1164/1330 [21:39:19<2:44:01, 59.29s/it] 88%|████████▊ | 1165/1330 [21:39:57<2:25:50, 53.04s/it] 88%|████████▊ | 1166/1330 [21:40:32<2:10:05, 47.60s/it] 88%|████████▊ | 1167/1330 [21:40:55<1:49:24, 40.27s/it] 88%|████████▊ | 1168/1330 [21:41:22<1:38:19, 36.42s/it] 88%|████████▊ | 1169/1330 [21:42:02<1:40:24, 37.42s/it] 88%|████████▊ | 1170/1330 [21:42:32<1:33:17, 34.99s/it] 88%|████████▊ | 1171/1330 [21:43:03<1:29:49, 33.89s/it] 88%|████████▊ | 1172/1330 [21:43:46<1:36:17, 36.57s/it] 88%|████████▊ | 1173/1330 [21:44:26<1:38:15, 37.55s/it] 88%|████████▊ | 1174/1330 [21:44:58<1:33:35, 36.00s/it] 88%|████████▊ | 1175/1330 [21:45:52<1:46:56, 41.40s/it] 88%|████████▊ | 1176/1330 [21:46:24<1:38:46, 38.49s/it] 88%|████████▊ | 1177/1330 [21:47:12<1:45:28, 41.36s/it] 89%|████████▊ | 1178/1330 [21:47:45<1:38:31, 38.89s/it] 89%|████████▊ | 1179/1330 [21:48:19<1:34:08, 37.41s/it] 89%|████████▊ | 1180/1330 [21:50:16<2:33:04, 61.23s/it] 89%|████████▉ | 1181/1330 [21:50:59<2:18:51, 55.92s/it] 89%|████████▉ | 1182/1330 [21:51:46<2:11:37, 53.36s/it] 89%|████████▉ | 1183/1330 [21:52:13<1:51:12, 45.39s/it] 89%|████████▉ | 1184/1330 [21:52:50<1:44:27, 42.93s/it] 89%|████████▉ | 1185/1330 [21:53:13<1:29:15, 36.93s/it] 89%|████████▉ | 1186/1330 [21:54:05<1:39:19, 41.39s/it] 89%|████████▉ | 1187/1330 [21:54:33<1:29:01, 37.36s/it] 89%|████████▉ | 1188/1330 [21:54:59<1:20:04, 33.84s/it] 89%|████████▉ | 1189/1330 [21:55:52<1:33:14, 39.68s/it] 89%|████████▉ | 1190/1330 [21:56:36<1:35:34, 40.96s/it] 90%|████████▉ | 1191/1330 [21:57:17<1:34:51, 40.95s/it] 90%|████████▉ | 1192/1330 [21:58:09<1:42:00, 44.35s/it] 90%|████████▉ | 1193/1330 [21:58:38<1:30:21, 39.57s/it] 90%|████████▉ | 1194/1330 [22:01:37<3:04:45, 81.51s/it] 90%|████████▉ | 1195/1330 [22:02:20<2:37:12, 69.87s/it] 90%|████████▉ | 1196/1330 [22:03:10<2:22:56, 64.00s/it] 90%|█████████ | 1197/1330 [22:04:26<2:29:37, 67.50s/it] 90%|█████████ | 1198/1330 [22:04:59<2:05:37, 57.10s/it] 90%|█████████ | 1199/1330 [22:05:36<1:52:00, 51.30s/it] 90%|█████████ | 1200/1330 [22:06:21<1:46:39, 49.22s/it] 90%|█████████ | 1201/1330 [22:06:55<1:36:20, 44.81s/it] 90%|█████████ | 1202/1330 [22:09:42<2:53:39, 81.41s/it] 90%|█████████ | 1203/1330 [22:10:15<2:21:50, 67.01s/it] 91%|█████████ | 1204/1330 [22:10:42<1:55:16, 54.90s/it] 91%|█████████ | 1205/1330 [22:11:27<1:48:28, 52.07s/it] 91%|█████████ | 1206/1330 [22:11:55<1:32:41, 44.85s/it] 91%|█████████ | 1207/1330 [22:12:36<1:29:30, 43.66s/it] 91%|█████████ | 1208/1330 [22:13:30<1:34:43, 46.58s/it] 91%|█████████ | 1209/1330 [22:14:05<1:27:07, 43.21s/it] 91%|█████████ | 1210/1330 [22:14:56<1:30:58, 45.49s/it] 91%|█████████ | 1211/1330 [22:15:37<1:27:40, 44.21s/it] 91%|█████████ | 1212/1330 [22:16:21<1:26:29, 43.98s/it] 91%|█████████ | 1213/1330 [22:16:56<1:20:46, 41.43s/it] 91%|█████████▏| 1214/1330 [22:17:23<1:11:57, 37.22s/it] 91%|█████████▏| 1215/1330 [22:18:13<1:18:27, 40.94s/it] 91%|█████████▏| 1216/1330 [22:18:51<1:15:59, 40.00s/it] 92%|█████████▏| 1217/1330 [22:22:17<2:49:15, 89.87s/it] 92%|█████████▏| 1218/1330 [22:23:33<2:40:04, 85.75s/it] 92%|█████████▏| 1219/1330 [22:24:19<2:16:28, 73.77s/it] 92%|█████████▏| 1220/1330 [22:24:45<1:49:10, 59.55s/it] 92%|█████████▏| 1221/1330 [22:25:21<1:35:00, 52.30s/it] 92%|█████████▏| 1222/1330 [22:25:47<1:20:15, 44.59s/it] 92%|█████████▏| 1223/1330 [22:26:29<1:17:38, 43.54s/it] 92%|█████████▏| 1224/1330 [22:27:39<1:31:09, 51.60s/it] 92%|█████████▏| 1225/1330 [22:34:17<4:32:19, 155.61s/it] 92%|█████████▏| 1226/1330 [22:35:00<3:31:09, 121.83s/it] 92%|█████████▏| 1227/1330 [22:35:30<2:41:38, 94.16s/it]  92%|█████████▏| 1228/1330 [22:35:58<2:06:09, 74.21s/it] 92%|█████████▏| 1229/1330 [22:36:24<1:40:53, 59.94s/it] 92%|█████████▏| 1230/1330 [22:37:04<1:29:47, 53.88s/it] 93%|█████████▎| 1231/1330 [22:38:05<1:32:26, 56.02s/it] 93%|█████████▎| 1232/1330 [22:38:30<1:16:31, 46.85s/it] 93%|█████████▎| 1233/1330 [22:38:55<1:04:52, 40.13s/it] 93%|█████████▎| 1234/1330 [22:39:17<55:32, 34.71s/it]   93%|█████████▎| 1235/1330 [22:39:48<53:13, 33.62s/it] 93%|█████████▎| 1236/1330 [22:41:59<1:38:38, 62.96s/it] 93%|█████████▎| 1237/1330 [22:42:47<1:30:16, 58.24s/it] 93%|█████████▎| 1238/1330 [22:43:20<1:17:46, 50.72s/it] 93%|█████████▎| 1239/1330 [22:43:48<1:06:47, 44.04s/it] 93%|█████████▎| 1240/1330 [22:44:40<1:09:22, 46.25s/it] 93%|█████████▎| 1241/1330 [22:45:35<1:12:51, 49.12s/it] 93%|█████████▎| 1242/1330 [22:46:02<1:02:09, 42.38s/it] 93%|█████████▎| 1243/1330 [22:46:39<58:55, 40.64s/it]   94%|█████████▎| 1244/1330 [22:48:05<1:17:45, 54.25s/it] 94%|█████████▎| 1245/1330 [22:48:35<1:06:49, 47.18s/it] 94%|█████████▎| 1246/1330 [22:49:04<58:26, 41.74s/it]   94%|█████████▍| 1247/1330 [22:49:34<52:32, 37.99s/it] 94%|█████████▍| 1248/1330 [22:50:05<49:02, 35.89s/it] 94%|█████████▍| 1249/1330 [22:50:37<47:06, 34.89s/it] 94%|█████████▍| 1250/1330 [22:51:13<46:51, 35.14s/it] 94%|█████████▍| 1251/1330 [22:52:28<1:01:57, 47.06s/it] 94%|█████████▍| 1252/1330 [22:53:00<55:16, 42.52s/it]   94%|█████████▍| 1253/1330 [22:53:19<45:45, 35.65s/it] 94%|█████████▍| 1254/1330 [22:53:44<40:52, 32.28s/it] 94%|█████████▍| 1255/1330 [22:54:30<45:27, 36.36s/it] 94%|█████████▍| 1256/1330 [22:55:35<55:38, 45.12s/it] 95%|█████████▍| 1257/1330 [22:56:17<53:40, 44.11s/it] 95%|█████████▍| 1258/1330 [22:56:52<49:31, 41.27s/it] 95%|█████████▍| 1259/1330 [22:57:25<46:05, 38.96s/it] 95%|█████████▍| 1260/1330 [22:57:50<40:37, 34.82s/it] 95%|█████████▍| 1261/1330 [22:58:13<35:47, 31.12s/it] 95%|█████████▍| 1262/1330 [22:59:16<46:07, 40.70s/it] 95%|█████████▍| 1263/1330 [22:59:39<39:37, 35.48s/it] 95%|█████████▌| 1264/1330 [23:00:07<36:38, 33.31s/it] 95%|█████████▌| 1265/1330 [23:00:37<34:47, 32.12s/it] 95%|█████████▌| 1266/1330 [23:01:15<36:05, 33.84s/it] 95%|█████████▌| 1267/1330 [23:01:40<32:55, 31.36s/it] 95%|█████████▌| 1268/1330 [23:02:17<34:14, 33.14s/it] 95%|█████████▌| 1269/1330 [23:02:48<32:55, 32.38s/it] 95%|█████████▌| 1270/1330 [23:03:44<39:21, 39.36s/it] 96%|█████████▌| 1271/1330 [23:04:11<35:04, 35.67s/it] 96%|█████████▌| 1272/1330 [23:04:36<31:35, 32.68s/it] 96%|█████████▌| 1273/1330 [23:07:39<1:13:40, 77.55s/it] 96%|█████████▌| 1274/1330 [23:08:20<1:02:14, 66.69s/it] 96%|█████████▌| 1275/1330 [23:08:47<50:06, 54.67s/it]   96%|█████████▌| 1276/1330 [23:09:15<42:08, 46.82s/it] 96%|█████████▌| 1277/1330 [23:10:53<54:56, 62.19s/it] 96%|█████████▌| 1278/1330 [23:11:22<45:08, 52.08s/it] 96%|█████████▌| 1279/1330 [23:11:46<37:06, 43.66s/it] 96%|█████████▌| 1280/1330 [23:12:41<39:18, 47.17s/it] 96%|█████████▋| 1281/1330 [23:13:14<34:56, 42.78s/it] 96%|█████████▋| 1282/1330 [23:13:52<33:13, 41.53s/it] 96%|█████████▋| 1283/1330 [23:20:02<1:49:39, 139.98s/it] 97%|█████████▋| 1284/1330 [23:24:43<2:19:38, 182.15s/it] 97%|█████████▋| 1285/1330 [23:25:24<1:44:51, 139.82s/it] 97%|█████████▋| 1286/1330 [23:26:16<1:23:21, 113.67s/it] 97%|█████████▋| 1287/1330 [23:26:39<1:01:55, 86.40s/it]  97%|█████████▋| 1288/1330 [23:27:13<49:23, 70.55s/it]   97%|█████████▋| 1289/1330 [23:28:31<49:50, 72.94s/it] 97%|█████████▋| 1290/1330 [23:30:38<59:20, 89.02s/it] 97%|█████████▋| 1291/1330 [23:32:12<58:51, 90.56s/it] 97%|█████████▋| 1292/1330 [23:35:31<1:17:58, 123.11s/it] 97%|█████████▋| 1293/1330 [23:36:33<1:04:42, 104.94s/it] 97%|█████████▋| 1294/1330 [23:37:09<50:27, 84.08s/it]    97%|█████████▋| 1295/1330 [23:37:43<40:14, 68.98s/it] 97%|█████████▋| 1296/1330 [23:38:17<33:15, 58.68s/it] 98%|█████████▊| 1297/1330 [23:38:56<28:57, 52.66s/it] 98%|█████████▊| 1298/1330 [23:39:23<24:00, 45.02s/it] 98%|█████████▊| 1299/1330 [23:39:55<21:10, 40.98s/it] 98%|█████████▊| 1300/1330 [23:41:13<26:08, 52.28s/it] 98%|█████████▊| 1301/1330 [23:41:50<23:05, 47.77s/it] 98%|█████████▊| 1302/1330 [23:42:34<21:38, 46.38s/it] 98%|█████████▊| 1303/1330 [23:43:29<22:06, 49.13s/it] 98%|█████████▊| 1304/1330 [23:43:54<18:10, 41.95s/it] 98%|█████████▊| 1305/1330 [23:44:29<16:34, 39.78s/it] 98%|█████████▊| 1306/1330 [23:45:12<16:21, 40.89s/it] 98%|█████████▊| 1307/1330 [23:45:58<16:09, 42.15s/it] 98%|█████████▊| 1308/1330 [23:46:29<14:16, 38.93s/it] 98%|█████████▊| 1309/1330 [23:47:25<15:27, 44.14s/it] 98%|█████████▊| 1310/1330 [23:48:09<14:38, 43.93s/it] 99%|█████████▊| 1311/1330 [23:48:56<14:12, 44.85s/it] 99%|█████████▊| 1312/1330 [23:49:32<12:43, 42.41s/it] 99%|█████████▊| 1313/1330 [23:50:25<12:54, 45.58s/it] 99%|█████████▉| 1314/1330 [23:51:09<11:59, 44.96s/it] 99%|█████████▉| 1315/1330 [23:52:04<11:57, 47.86s/it] 99%|█████████▉| 1316/1330 [23:52:41<10:27, 44.82s/it] 99%|█████████▉| 1317/1330 [23:53:13<08:52, 40.99s/it] 99%|█████████▉| 1318/1330 [23:53:45<07:38, 38.20s/it] 99%|█████████▉| 1319/1330 [23:58:58<22:07, 120.72s/it] 99%|█████████▉| 1320/1330 [24:01:28<21:34, 129.42s/it] 99%|█████████▉| 1321/1330 [24:02:10<15:29, 103.24s/it] 99%|█████████▉| 1322/1330 [24:07:51<23:15, 174.40s/it] 99%|█████████▉| 1323/1330 [24:08:42<16:02, 137.54s/it]100%|█████████▉| 1324/1330 [24:09:14<10:35, 105.93s/it]100%|█████████▉| 1325/1330 [24:09:54<07:10, 86.11s/it] 100%|█████████▉| 1326/1330 [24:10:27<04:40, 70.03s/it]100%|█████████▉| 1327/1330 [24:11:08<03:04, 61.52s/it]100%|█████████▉| 1328/1330 [24:11:43<01:47, 53.59s/it]100%|█████████▉| 1329/1330 [24:12:35<00:53, 53.12s/it]100%|██████████| 1330/1330 [24:13:23<00:00, 51.41s/it]100%|██████████| 1330/1330 [24:13:23<00:00, 65.57s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train with 691,452 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1it [00:00,  5.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4it [00:00, 15.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 9it [00:00, 27.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 13it [00:00, 28.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 18it [00:00, 32.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 23it [00:00, 37.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 28it [00:00, 38.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 32it [00:00, 38.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 36it [00:01, 38.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 40it [00:01, 33.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 44it [00:01, 33.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 49it [00:01, 36.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 56it [00:01, 38.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 61it [00:01, 39.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 66it [00:01, 39.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 71it [00:02, 41.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 76it [00:02, 36.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 80it [00:02, 36.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 84it [00:02, 36.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:02, 35.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 94it [00:02, 36.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 98it [00:02, 34.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 103it [00:02, 38.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 107it [00:03, 35.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 112it [00:03, 36.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 118it [00:03, 37.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 122it [00:03, 35.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 127it [00:03, 38.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 131it [00:03, 38.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 135it [00:03, 36.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 139it [00:03, 35.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 143it [00:04, 33.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 148it [00:04, 36.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 152it [00:04, 24.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 157it [00:04, 29.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 162it [00:04, 31.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 169it [00:04, 38.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 175it [00:04, 40.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 182it [00:05, 45.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 188it [00:05, 47.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 195it [00:05, 48.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 201it [00:05, 50.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 208it [00:05, 52.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 214it [00:05, 47.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 219it [00:05, 42.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 228it [00:05, 52.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 234it [00:06, 51.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 242it [00:06, 57.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 250it [00:06, 61.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 257it [00:06, 56.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 263it [00:06, 46.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 273it [00:06, 58.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 280it [00:06, 58.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 288it [00:06, 62.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 295it [00:07, 62.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 303it [00:07, 66.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 311it [00:07, 67.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 318it [00:07, 65.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 325it [00:07, 50.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 338it [00:07, 65.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 346it [00:07, 63.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 353it [00:08, 56.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 360it [00:08, 57.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 367it [00:08, 59.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 374it [00:08, 58.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 380it [00:08, 58.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 386it [00:08, 57.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 392it [00:08, 46.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 398it [00:08, 48.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 408it [00:09, 59.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 418it [00:09, 67.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 426it [00:09, 64.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 433it [00:09, 64.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 440it [00:09, 60.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 449it [00:09, 66.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 456it [00:09, 55.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 462it [00:09, 55.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 468it [00:10, 54.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 474it [00:10, 54.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 480it [00:10, 51.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 486it [00:10, 52.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 494it [00:10, 58.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 501it [00:10, 57.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 507it [00:10, 53.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 513it [00:10, 52.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 519it [00:11, 49.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 525it [00:11, 49.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 531it [00:11, 48.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 539it [00:11, 55.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 545it [00:11, 52.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 551it [00:11, 48.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 557it [00:11, 48.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 566it [00:11, 55.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 572it [00:12, 55.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 578it [00:12, 54.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 584it [00:12, 54.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 590it [00:12, 50.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 596it [00:12, 50.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 602it [00:12, 50.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 610it [00:12, 56.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 616it [00:12, 52.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 622it [00:12, 54.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 630it [00:13, 59.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 637it [00:13, 60.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 645it [00:13, 65.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 652it [00:13, 59.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 659it [00:13, 52.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 665it [00:13, 44.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 671it [00:13, 44.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 681it [00:14, 54.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 687it [00:14, 55.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 695it [00:14, 57.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 702it [00:14, 56.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 708it [00:14, 56.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 714it [00:14, 55.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 720it [00:14, 56.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 726it [00:14, 56.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 732it [00:14, 54.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 739it [00:15, 57.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 747it [00:15, 61.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 754it [00:15, 60.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 761it [00:15, 52.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 771it [00:15, 61.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 778it [00:15, 63.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 785it [00:15, 63.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 796it [00:15, 74.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 804it [00:16, 71.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 812it [00:16, 70.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 820it [00:16, 68.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 827it [00:16, 56.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 833it [00:16, 47.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 839it [00:16, 46.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 844it [00:16, 46.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 850it [00:17, 45.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 855it [00:17, 46.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 861it [00:17, 49.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 868it [00:17, 52.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 874it [00:17, 46.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 884it [00:17, 56.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 890it [00:17, 54.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 898it [00:17, 58.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 905it [00:18, 51.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 911it [00:18, 51.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 919it [00:18, 58.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 926it [00:18, 54.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 932it [00:18, 53.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 943it [00:18, 65.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 950it [00:18, 58.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 959it [00:18, 65.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 966it [00:19, 59.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 973it [00:19, 61.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 980it [00:19, 58.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 987it [00:19, 56.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 997it [00:19, 65.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1005it [00:19, 66.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1012it [00:19, 64.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1019it [00:19, 54.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1025it [00:20, 55.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1032it [00:20, 55.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1039it [00:20, 53.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1047it [00:20, 58.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1054it [00:20, 48.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1061it [00:20, 52.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1067it [00:20, 52.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1074it [00:20, 52.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1082it [00:21, 57.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1088it [00:21, 55.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1094it [00:21, 52.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1100it [00:21, 50.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1106it [00:21, 51.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1113it [00:21, 55.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1119it [00:21, 51.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1125it [00:21, 51.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1131it [00:22, 46.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1137it [00:22, 49.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1143it [00:22, 51.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1149it [00:22, 49.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1156it [00:22, 53.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1162it [00:22, 50.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1168it [00:22, 45.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1175it [00:22, 50.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1181it [00:23, 48.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1187it [00:23, 50.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1193it [00:23, 47.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1198it [00:23, 45.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1206it [00:23, 50.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1212it [00:23, 51.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1218it [00:23, 49.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1224it [00:23, 51.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1233it [00:24, 55.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1239it [00:24, 55.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1246it [00:24, 57.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1252it [00:24, 57.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1258it [00:24, 54.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1264it [00:24, 52.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1270it [00:24, 53.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1276it [00:24, 54.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1283it [00:25, 56.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1289it [00:25, 48.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1298it [00:25, 56.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1306it [00:25, 58.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1313it [00:25, 57.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1319it [00:25, 47.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1326it [00:25, 48.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1332it [00:26, 46.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1339it [00:26, 51.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1345it [00:26, 49.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1353it [00:26, 56.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1360it [00:26, 46.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1366it [00:26, 45.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1372it [00:26, 47.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1379it [00:26, 51.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1386it [00:27, 55.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1396it [00:27, 64.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1403it [00:27, 65.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1412it [00:27, 69.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1421it [00:27, 72.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1429it [00:27, 73.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1438it [00:27, 77.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1450it [00:27, 87.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1459it [00:27, 72.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1467it [00:28, 70.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1475it [00:28, 66.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1482it [00:28, 63.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1492it [00:28, 71.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1500it [00:28, 59.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1507it [00:28, 59.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1514it [00:28, 58.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1523it [00:29, 62.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1531it [00:29, 65.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1538it [00:29, 63.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1545it [00:29, 58.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1552it [00:29, 60.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1562it [00:29, 59.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1572it [00:29, 66.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1582it [00:29, 71.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1590it [00:30, 66.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1597it [00:30, 60.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1604it [00:30, 59.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1612it [00:30, 63.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1621it [00:30, 67.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1629it [00:30, 66.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1636it [00:30, 42.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1645it [00:31, 50.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1652it [00:31, 49.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1659it [00:31, 53.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1665it [00:31, 54.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1671it [00:31, 53.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1677it [00:31, 53.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1684it [00:31, 57.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1691it [00:31, 54.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1697it [00:32, 47.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1703it [00:32, 44.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1710it [00:32, 48.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1716it [00:32, 49.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1724it [00:32, 56.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1731it [00:32, 59.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1739it [00:32, 53.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1746it [00:32, 56.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1754it [00:33, 62.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1761it [00:33, 61.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1771it [00:33, 70.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1779it [00:33, 69.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1787it [00:33, 72.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1795it [00:33, 63.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1804it [00:33, 68.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1812it [00:33, 56.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1819it [00:34, 57.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1827it [00:34, 59.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1839it [00:34, 67.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1846it [00:34, 60.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1853it [00:34, 58.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1859it [00:34, 48.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1868it [00:34, 56.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1875it [00:35, 57.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1884it [00:35, 64.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1892it [00:35, 66.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1901it [00:35, 70.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1909it [00:35, 67.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1916it [00:35, 64.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1923it [00:35, 64.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1930it [00:35, 65.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1937it [00:35, 63.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1946it [00:36, 68.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1953it [00:36, 66.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1960it [00:36, 63.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1967it [00:36, 61.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1974it [00:36, 60.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1981it [00:36, 36.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1986it [00:37, 38.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1992it [00:37, 42.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1998it [00:37, 43.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2007it [00:37, 50.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2013it [00:37, 53.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2019it [00:37, 47.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2025it [00:37, 49.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2033it [00:37, 56.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2040it [00:37, 59.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2047it [00:38, 55.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2056it [00:38, 61.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2064it [00:38, 64.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2071it [00:38, 44.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2077it [00:38, 47.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2083it [00:38, 49.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2089it [00:38, 49.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2097it [00:39, 51.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2108it [00:39, 64.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2115it [00:39, 62.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2124it [00:39, 67.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2132it [00:39, 58.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2139it [00:39, 59.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2146it [00:39, 52.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2152it [00:40, 48.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2158it [00:40, 47.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2163it [00:40, 42.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2169it [00:40, 45.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2174it [00:40, 44.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2180it [00:40, 46.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2187it [00:40, 51.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2193it [00:40, 49.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2202it [00:41, 57.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2208it [00:41, 57.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2214it [00:41, 51.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2220it [00:41, 52.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2226it [00:41, 51.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2233it [00:41, 56.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2239it [00:41, 55.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2245it [00:41, 54.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2251it [00:42, 52.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2257it [00:42, 51.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2264it [00:42, 53.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2271it [00:42, 56.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2277it [00:42, 55.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2283it [00:42, 53.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2291it [00:42, 54.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2297it [00:42, 51.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2306it [00:42, 59.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2313it [00:43, 56.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2320it [00:43, 57.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2328it [00:43, 62.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2336it [00:43, 62.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2343it [00:43, 58.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2349it [00:43, 58.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2356it [00:43, 61.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2363it [00:43, 62.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2370it [00:44, 61.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2377it [00:44, 58.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2383it [00:44, 57.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2389it [00:44, 57.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2396it [00:44, 59.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2402it [00:44, 56.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2411it [00:44, 62.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2424it [00:44, 78.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2432it [00:45, 48.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2439it [00:45, 47.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2446it [00:45, 51.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2453it [00:45, 53.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2460it [00:45, 55.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2467it [00:45, 48.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2475it [00:45, 52.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2481it [00:46, 52.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2490it [00:46, 60.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2497it [00:46, 60.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2505it [00:46, 64.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2513it [00:46, 63.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2520it [00:46, 62.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2527it [00:46, 62.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2534it [00:46, 59.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2540it [00:47, 50.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2546it [00:47, 51.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2552it [00:47, 52.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2559it [00:47, 56.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2565it [00:47, 55.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2574it [00:47, 59.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2580it [00:47, 53.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2587it [00:47, 56.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2593it [00:48, 52.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2599it [00:48, 53.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2609it [00:48, 65.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2617it [00:48, 68.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2625it [00:48, 64.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2632it [00:48, 62.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2639it [00:48, 63.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2646it [00:48, 62.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2653it [00:49, 39.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2666it [00:49, 54.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2673it [00:49, 55.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2681it [00:49, 60.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2692it [00:49, 69.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2701it [00:49, 72.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2710it [00:49, 74.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2718it [00:49, 69.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2727it [00:50, 72.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2735it [00:50, 74.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2743it [00:50, 64.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2750it [00:50, 65.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2757it [00:50, 66.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2764it [00:50, 64.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2771it [00:50, 61.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2780it [00:50, 63.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2787it [00:51, 63.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2795it [00:51, 67.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2803it [00:51, 69.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2810it [00:51, 66.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2818it [00:51, 69.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2826it [00:51, 69.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2836it [00:51, 76.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2844it [00:51, 72.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2852it [00:51, 66.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2859it [00:52, 66.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2867it [00:52, 69.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2876it [00:52, 69.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2886it [00:52, 77.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2895it [00:52, 80.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2904it [00:52, 74.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2912it [00:52, 71.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2920it [00:52, 69.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2930it [00:53, 74.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2939it [00:53, 78.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2951it [00:53, 83.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2960it [00:53, 80.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2969it [00:53, 70.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2977it [00:53, 66.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2984it [00:53, 59.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2993it [00:53, 62.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3000it [00:54, 56.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3006it [00:54, 56.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3015it [00:54, 60.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3027it [00:54, 68.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3034it [00:54, 67.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3042it [00:54, 67.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3051it [00:54, 68.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3058it [00:54, 67.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3066it [00:55, 70.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3076it [00:55, 78.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3084it [00:55, 70.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3092it [00:55, 65.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3100it [00:55, 66.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3107it [00:55, 62.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3114it [00:55, 61.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3121it [00:55, 59.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3128it [00:56, 62.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3135it [00:56, 61.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3143it [00:56, 66.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3150it [00:56, 67.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3160it [00:56, 75.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3168it [00:56, 69.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3177it [00:56, 74.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3185it [00:57, 48.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3197it [00:57, 60.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3207it [00:57, 67.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3216it [00:57, 72.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3225it [00:57, 72.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3233it [00:57, 70.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3241it [00:57, 67.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3249it [00:58, 42.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3257it [00:58, 47.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3264it [00:58, 50.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3273it [00:58, 58.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3281it [00:58, 62.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3289it [00:58, 60.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3296it [00:58, 62.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3304it [00:58, 64.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3312it [00:58, 66.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3322it [00:59, 75.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3331it [00:59, 75.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3339it [00:59, 49.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3348it [00:59, 57.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3356it [00:59, 59.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3363it [00:59, 60.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3371it [00:59, 62.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3378it [01:00, 62.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3385it [01:00, 58.14it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3394it [01:00, 62.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3405it [01:00, 74.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3415it [01:00, 80.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3424it [01:00, 61.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3434it [01:00, 70.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3442it [01:00, 70.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3450it [01:01, 70.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3458it [01:01, 70.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3466it [01:01, 72.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3475it [01:01, 73.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3484it [01:01, 75.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3492it [01:01, 74.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3500it [01:01, 68.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3507it [01:01, 68.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3514it [01:02, 64.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3521it [01:02, 61.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3529it [01:02, 65.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3536it [01:02, 66.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3548it [01:02, 77.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3558it [01:02, 80.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3572it [01:02, 94.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3582it [01:02, 90.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3592it [01:02, 89.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3601it [01:03, 77.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3610it [01:03, 76.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3624it [01:03, 89.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3634it [01:03, 88.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3643it [01:03, 88.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3653it [01:03, 91.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3663it [01:03, 88.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3672it [01:03, 82.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3681it [01:04, 81.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3690it [01:04, 82.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3702it [01:04, 90.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3714it [01:04, 94.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3724it [01:04, 71.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3734it [01:04, 54.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3741it [01:04, 55.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3748it [01:05, 53.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3757it [01:05, 61.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3765it [01:05, 65.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3773it [01:05, 67.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3781it [01:05, 61.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3789it [01:05, 64.70it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3797it [01:05, 68.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3805it [01:05, 63.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3812it [01:06, 55.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3819it [01:06, 58.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3826it [01:06, 57.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3834it [01:06, 61.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3843it [01:06, 65.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3853it [01:06, 72.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3864it [01:06, 78.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3872it [01:06, 78.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3880it [01:07, 68.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3888it [01:07, 66.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3895it [01:07, 60.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3904it [01:07, 66.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3911it [01:07, 66.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3918it [01:07, 42.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3926it [01:07, 49.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3933it [01:08, 53.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3940it [01:08, 54.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3947it [01:08, 56.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3958it [01:08, 67.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3966it [01:08, 49.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3974it [01:08, 55.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3982it [01:08, 59.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3991it [01:09, 64.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 3999it [01:09, 53.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4007it [01:09, 58.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4014it [01:09, 54.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4022it [01:09, 59.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4029it [01:09, 61.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4039it [01:09, 67.37it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4049it [01:09, 72.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4063it [01:10, 87.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4072it [01:10, 80.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4081it [01:10, 76.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 4092it [01:10, 58.11it/s]INFO:root:Writing test split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [01:42<2:04:52, 102.64s/it]  3%|▎         | 2/74 [02:50<1:38:36, 82.17s/it]   4%|▍         | 3/74 [03:30<1:14:31, 62.98s/it]  5%|▌         | 4/74 [04:15<1:04:56, 55.66s/it]  7%|▋         | 5/74 [05:31<1:12:41, 63.22s/it]  8%|▊         | 6/74 [07:53<1:41:44, 89.77s/it]  9%|▉         | 7/74 [09:41<1:47:01, 95.85s/it] 11%|█         | 8/74 [10:28<1:28:31, 80.47s/it] 12%|█▏        | 9/74 [11:12<1:14:39, 68.91s/it] 14%|█▎        | 10/74 [11:40<1:00:02, 56.29s/it] 15%|█▍        | 11/74 [12:10<50:37, 48.21s/it]   16%|█▌        | 12/74 [12:47<46:24, 44.91s/it] 18%|█▊        | 13/74 [13:45<49:34, 48.76s/it] 19%|█▉        | 14/74 [14:42<51:23, 51.40s/it] 20%|██        | 15/74 [15:21<46:48, 47.61s/it] 22%|██▏       | 16/74 [16:19<49:06, 50.81s/it] 23%|██▎       | 17/74 [16:52<42:57, 45.23s/it] 24%|██▍       | 18/74 [17:20<37:27, 40.14s/it] 26%|██▌       | 19/74 [17:55<35:26, 38.67s/it] 27%|██▋       | 20/74 [18:37<35:34, 39.52s/it] 28%|██▊       | 21/74 [19:18<35:30, 40.20s/it] 30%|██▉       | 22/74 [23:36<1:31:17, 105.33s/it] 31%|███       | 23/74 [24:38<1:18:38, 92.51s/it]  32%|███▏      | 24/74 [25:22<1:04:55, 77.91s/it] 34%|███▍      | 25/74 [29:02<1:38:23, 120.49s/it] 35%|███▌      | 26/74 [30:04<1:22:27, 103.08s/it] 36%|███▋      | 27/74 [31:25<1:15:33, 96.47s/it]  38%|███▊      | 28/74 [31:56<58:54, 76.83s/it]   39%|███▉      | 29/74 [32:34<48:40, 64.90s/it] 41%|████      | 30/74 [33:13<41:58, 57.24s/it] 42%|████▏     | 31/74 [33:47<35:57, 50.18s/it] 43%|████▎     | 32/74 [34:25<32:35, 46.56s/it] 45%|████▍     | 33/74 [35:00<29:27, 43.11s/it] 46%|████▌     | 34/74 [35:54<30:56, 46.42s/it] 47%|████▋     | 35/74 [36:24<27:01, 41.57s/it] 49%|████▊     | 36/74 [37:03<25:44, 40.66s/it] 50%|█████     | 37/74 [37:34<23:23, 37.93s/it] 51%|█████▏    | 38/74 [38:01<20:41, 34.49s/it] 53%|█████▎    | 39/74 [38:30<19:08, 32.81s/it] 54%|█████▍    | 40/74 [39:04<18:51, 33.28s/it] 55%|█████▌    | 41/74 [39:35<17:57, 32.65s/it] 57%|█████▋    | 42/74 [40:04<16:43, 31.37s/it] 58%|█████▊    | 43/74 [40:46<17:52, 34.61s/it] 59%|█████▉    | 44/74 [41:17<16:52, 33.74s/it] 61%|██████    | 45/74 [41:49<15:58, 33.04s/it] 62%|██████▏   | 46/74 [42:59<20:37, 44.19s/it] 64%|██████▎   | 47/74 [43:34<18:40, 41.50s/it] 65%|██████▍   | 48/74 [44:05<16:34, 38.23s/it] 66%|██████▌   | 49/74 [44:35<14:53, 35.75s/it] 68%|██████▊   | 50/74 [52:40<1:08:11, 170.46s/it] 69%|██████▉   | 51/74 [53:46<53:19, 139.09s/it]   70%|███████   | 52/74 [54:13<38:40, 105.47s/it] 72%|███████▏  | 53/74 [55:31<34:06, 97.43s/it]  73%|███████▎  | 54/74 [57:10<32:38, 97.91s/it] 74%|███████▍  | 55/74 [58:33<29:33, 93.36s/it] 76%|███████▌  | 56/74 [59:07<22:40, 75.58s/it] 77%|███████▋  | 57/74 [1:05:39<48:20, 170.60s/it] 78%|███████▊  | 58/74 [1:06:59<38:13, 143.37s/it] 80%|███████▉  | 59/74 [1:12:22<49:16, 197.07s/it] 81%|████████  | 60/74 [1:12:59<34:46, 149.02s/it] 82%|████████▏ | 61/74 [1:13:42<25:27, 117.48s/it] 84%|████████▍ | 62/74 [1:14:18<18:34, 92.89s/it]  85%|████████▌ | 63/74 [1:14:55<13:56, 76.01s/it] 86%|████████▋ | 64/74 [1:15:22<10:13, 61.39s/it] 88%|████████▊ | 65/74 [1:16:04<08:19, 55.54s/it] 89%|████████▉ | 66/74 [1:18:30<11:01, 82.66s/it] 91%|█████████ | 67/74 [1:19:06<08:00, 68.69s/it] 92%|█████████▏| 68/74 [1:19:50<06:08, 61.43s/it] 93%|█████████▎| 69/74 [1:20:37<04:44, 56.90s/it] 95%|█████████▍| 70/74 [1:21:22<03:33, 53.41s/it] 96%|█████████▌| 71/74 [1:22:11<02:36, 52.18s/it] 97%|█████████▋| 72/74 [1:24:52<02:49, 84.71s/it] 99%|█████████▊| 73/74 [1:25:41<01:13, 73.92s/it]100%|██████████| 74/74 [1:26:42<00:00, 70.32s/it]100%|██████████| 74/74 [1:26:42<00:00, 70.31s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test with 43,142 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 8it [00:00, 76.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 18it [00:00, 87.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 27it [00:00, 83.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 38it [00:00, 89.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 47it [00:00, 71.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 55it [00:00, 64.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 62it [00:00, 65.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 71it [00:00, 70.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 79it [00:01, 71.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:01, 75.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 97it [00:01, 71.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 105it [00:01, 69.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 112it [00:01, 63.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 121it [00:01, 70.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 131it [00:01, 77.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 142it [00:01, 83.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 154it [00:02, 93.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 164it [00:02, 88.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 177it [00:02, 95.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 187it [00:02, 92.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 198it [00:02, 93.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 208it [00:02, 88.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 221it [00:02, 87.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 235it [00:02, 98.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 245it [00:02, 81.68it/s]INFO:root:Writing val split into a DL friendly .parquet dataset.  0%|          | 0/74 [00:00<?, ?it/s]  1%|▏         | 1/74 [01:14<1:30:36, 74.47s/it]  3%|▎         | 2/74 [02:01<1:10:19, 58.61s/it]  4%|▍         | 3/74 [03:00<1:09:28, 58.71s/it]  5%|▌         | 4/74 [03:40<59:49, 51.27s/it]    7%|▋         | 5/74 [04:18<53:32, 46.56s/it]  8%|▊         | 6/74 [05:39<1:05:53, 58.13s/it]  9%|▉         | 7/74 [08:29<1:45:36, 94.57s/it] 11%|█         | 8/74 [17:47<4:26:18, 242.10s/it] 12%|█▏        | 9/74 [18:41<3:18:52, 183.57s/it] 14%|█▎        | 10/74 [24:14<4:05:00, 229.70s/it] 15%|█▍        | 11/74 [25:15<3:06:50, 177.95s/it] 16%|█▌        | 12/74 [26:01<2:22:21, 137.76s/it] 18%|█▊        | 13/74 [26:54<1:53:51, 112.00s/it] 19%|█▉        | 14/74 [27:44<1:33:17, 93.28s/it]  20%|██        | 15/74 [28:34<1:18:53, 80.23s/it] 22%|██▏       | 16/74 [29:45<1:15:03, 77.65s/it] 23%|██▎       | 17/74 [30:26<1:03:15, 66.58s/it] 24%|██▍       | 18/74 [31:05<54:18, 58.18s/it]   26%|██▌       | 19/74 [35:22<1:48:16, 118.11s/it] 27%|██▋       | 20/74 [36:24<1:30:57, 101.06s/it] 28%|██▊       | 21/74 [37:04<1:13:07, 82.78s/it]  30%|██▉       | 22/74 [37:52<1:02:47, 72.44s/it] 31%|███       | 23/74 [38:35<54:01, 63.57s/it]   32%|███▏      | 24/74 [39:51<55:56, 67.12s/it] 34%|███▍      | 25/74 [40:31<48:13, 59.06s/it] 35%|███▌      | 26/74 [41:21<45:13, 56.54s/it] 36%|███▋      | 27/74 [43:56<1:07:22, 86.01s/it] 38%|███▊      | 28/74 [44:47<57:45, 75.33s/it]   39%|███▉      | 29/74 [45:55<54:59, 73.33s/it] 41%|████      | 30/74 [47:38<1:00:07, 82.00s/it] 42%|████▏     | 31/74 [48:34<53:11, 74.23s/it]   43%|████▎     | 32/74 [49:57<53:51, 76.93s/it] 45%|████▍     | 33/74 [50:51<47:55, 70.13s/it] 46%|████▌     | 34/74 [51:56<45:42, 68.57s/it] 47%|████▋     | 35/74 [52:51<41:58, 64.57s/it] 49%|████▊     | 36/74 [53:35<36:58, 58.39s/it] 50%|█████     | 37/74 [54:12<32:04, 52.00s/it] 51%|█████▏    | 38/74 [55:33<36:19, 60.55s/it] 53%|█████▎    | 39/74 [56:28<34:23, 58.94s/it] 54%|█████▍    | 40/74 [57:18<31:55, 56.33s/it] 55%|█████▌    | 41/74 [58:11<30:23, 55.26s/it] 57%|█████▋    | 42/74 [58:52<27:09, 50.91s/it] 58%|█████▊    | 43/74 [59:27<23:51, 46.19s/it] 59%|█████▉    | 44/74 [1:00:05<21:51, 43.70s/it] 61%|██████    | 45/74 [1:00:38<19:39, 40.66s/it] 62%|██████▏   | 46/74 [1:01:26<19:56, 42.74s/it] 64%|██████▎   | 47/74 [1:02:06<18:51, 41.92s/it] 65%|██████▍   | 48/74 [1:03:01<19:54, 45.95s/it] 66%|██████▌   | 49/74 [1:03:49<19:19, 46.38s/it] 68%|██████▊   | 50/74 [1:04:38<18:51, 47.16s/it] 69%|██████▉   | 51/74 [1:05:23<17:53, 46.69s/it] 70%|███████   | 52/74 [1:06:08<16:55, 46.15s/it] 72%|███████▏  | 53/74 [1:06:59<16:37, 47.49s/it] 73%|███████▎  | 54/74 [1:07:46<15:47, 47.39s/it] 74%|███████▍  | 55/74 [1:08:48<16:23, 51.78s/it] 76%|███████▌  | 56/74 [1:09:28<14:28, 48.26s/it] 77%|███████▋  | 57/74 [1:10:40<15:42, 55.47s/it] 78%|███████▊  | 58/74 [1:12:44<20:15, 75.94s/it] 80%|███████▉  | 59/74 [1:13:35<17:07, 68.50s/it] 81%|████████  | 60/74 [1:14:08<13:29, 57.85s/it] 82%|████████▏ | 61/74 [1:15:22<13:32, 62.48s/it] 84%|████████▍ | 62/74 [1:16:28<12:42, 63.58s/it] 85%|████████▌ | 63/74 [1:18:13<13:56, 76.08s/it] 86%|████████▋ | 64/74 [1:19:40<13:12, 79.27s/it] 88%|████████▊ | 65/74 [1:20:34<10:45, 71.69s/it] 89%|████████▉ | 66/74 [1:21:31<08:59, 67.42s/it] 91%|█████████ | 67/74 [1:24:55<12:38, 108.35s/it] 92%|█████████▏| 68/74 [1:25:48<09:10, 91.79s/it]  93%|█████████▎| 69/74 [1:27:10<07:23, 88.72s/it] 95%|█████████▍| 70/74 [1:27:57<05:04, 76.17s/it] 96%|█████████▌| 71/74 [1:28:45<03:23, 67.72s/it] 97%|█████████▋| 72/74 [1:29:48<02:12, 66.35s/it] 99%|█████████▊| 73/74 [1:30:54<01:06, 66.35s/it]100%|██████████| 74/74 [1:31:39<00:00, 60.00s/it]100%|██████████| 74/74 [1:31:39<00:00, 74.32s/it]INFO:root:Created dataset at /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val with 40,437 samplesINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 8it [00:00, 68.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 16it [00:00, 71.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 24it [00:00, 70.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 32it [00:00, 67.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 40it [00:00, 71.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 53it [00:00, 89.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 65it [00:00, 97.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 75it [00:00, 93.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:00, 104.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 100it [00:01, 96.01it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 113it [00:01, 102.44it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 124it [00:01, 87.56it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 134it [00:01, 80.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 143it [00:01, 79.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 152it [00:01, 80.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 162it [00:01, 83.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 171it [00:02, 81.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 181it [00:02, 85.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 198it [00:02, 105.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 209it [00:02, 104.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 224it [00:02, 117.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 235it [00:02, 93.30it/s] INFO:root:Using meta information from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleINFO:root:Using train file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_train.pickleINFO:root:Using test file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_test.pickleINFO:root:Using val file-row count dictionary from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/file_row_count_dict_val.pickleINFO:root:Tokenzier created based on 7,555,415,275 tokensINFO:root:Using tabular tokenizer, created from meta information and containing 265 tokensINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=train/ dataset, with 691,452 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=test/ dataset, with 43,142 samplesINFO:root:Loaded /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/split=val/ dataset, with 40,437 samples691452 training patients40437 validation patients43142 test patients265 vocab elementsGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.is_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: Noneoptim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [01:03<23:29:18, 63.63s/it]  0%|          | 2/1330 [03:24<40:07:45, 108.78s/it]  0%|          | 3/1330 [04:31<33:12:31, 90.09s/it]   0%|          | 4/1330 [05:36<29:30:51, 80.13s/it]  0%|          | 5/1330 [06:37<26:56:15, 73.19s/it]  0%|          | 6/1330 [07:21<23:15:09, 63.22s/it]  1%|          | 7/1330 [08:12<21:42:58, 59.09s/it]  1%|          | 8/1330 [08:57<20:04:46, 54.68s/it]  1%|          | 9/1330 [09:48<19:40:52, 53.64s/it]  1%|          | 10/1330 [11:18<23:46:57, 64.86s/it]  1%|          | 11/1330 [12:12<22:30:34, 61.44s/it]  1%|          | 12/1330 [12:56<20:32:41, 56.12s/it]  1%|          | 13/1330 [13:41<19:16:54, 52.71s/it]  1%|          | 14/1330 [14:30<18:50:54, 51.56s/it]  1%|          | 15/1330 [15:14<18:05:37, 49.53s/it]  1%|          | 16/1330 [17:21<26:32:04, 72.70s/it]  1%|▏         | 17/1330 [18:21<25:05:43, 68.81s/it]  1%|▏         | 18/1330 [19:25<24:37:46, 67.58s/it]  1%|▏         | 19/1330 [20:34<24:44:41, 67.95s/it]  2%|▏         | 20/1330 [22:07<27:29:14, 75.54s/it]  2%|▏         | 21/1330 [24:33<35:04:51, 96.48s/it]  2%|▏         | 22/1330 [28:21<49:25:35, 136.04s/it]  2%|▏         | 23/1330 [29:11<40:00:02, 110.18s/it]  2%|▏         | 24/1330 [29:53<32:35:44, 89.85s/it]   2%|▏         | 25/1330 [30:32<26:58:46, 74.43s/it]  2%|▏         | 26/1330 [31:42<26:28:03, 73.07s/it]  2%|▏         | 27/1330 [32:33<24:05:59, 66.58s/it]  2%|▏         | 28/1330 [33:16<21:33:15, 59.60s/it]  2%|▏         | 29/1330 [34:47<24:55:03, 68.95s/it]  2%|▏         | 30/1330 [36:05<25:51:21, 71.60s/it]  2%|▏         | 31/1330 [37:16<25:47:52, 71.50s/it]  2%|▏         | 32/1330 [38:01<22:53:29, 63.49s/it]  2%|▏         | 33/1330 [38:44<20:37:01, 57.23s/it]  3%|▎         | 34/1330 [39:26<18:58:32, 52.71s/it]  3%|▎         | 35/1330 [40:20<19:06:24, 53.12s/it]  3%|▎         | 36/1330 [41:04<18:06:50, 50.39s/it]  3%|▎         | 37/1330 [41:44<17:02:45, 47.46s/it]  3%|▎         | 38/1330 [42:37<17:32:57, 48.90s/it]  3%|▎         | 39/1330 [43:14<16:17:59, 45.45s/it]  3%|▎         | 40/1330 [44:09<17:16:20, 48.20s/it]  3%|▎         | 41/1330 [45:06<18:13:26, 50.90s/it]  3%|▎         | 42/1330 [48:59<37:43:11, 105.43s/it]  3%|▎         | 43/1330 [49:46<31:25:50, 87.92s/it]   3%|▎         | 44/1330 [51:46<34:51:26, 97.58s/it]  3%|▎         | 45/1330 [52:56<31:54:26, 89.39s/it]  3%|▎         | 46/1330 [53:36<26:35:44, 74.57s/it]  4%|▎         | 47/1330 [1:04:34<88:58:17, 249.65s/it]  4%|▎         | 48/1330 [1:06:22<73:42:06, 206.96s/it]  4%|▎         | 49/1330 [1:07:52<61:08:58, 171.85s/it]  4%|▍         | 50/1330 [1:09:34<53:42:19, 151.05s/it]  4%|▍         | 51/1330 [1:10:38<44:21:24, 124.85s/it]  4%|▍         | 52/1330 [1:11:47<38:21:52, 108.07s/it]  4%|▍         | 53/1330 [1:13:08<35:27:39, 99.97s/it]   4%|▍         | 54/1330 [1:14:09<31:16:00, 88.21s/it]  4%|▍         | 55/1330 [1:14:59<27:11:46, 76.79s/it]  4%|▍         | 56/1330 [1:16:06<26:11:46, 74.02s/it]  4%|▍         | 57/1330 [1:17:59<30:16:28, 85.62s/it]  4%|▍         | 58/1330 [1:19:10<28:43:47, 81.31s/it]  4%|▍         | 59/1330 [1:20:00<25:21:28, 71.82s/it]  5%|▍         | 60/1330 [1:22:01<30:35:55, 86.74s/it]  5%|▍         | 61/1330 [1:22:53<26:49:09, 76.08s/it]  5%|▍         | 62/1330 [1:24:10<26:58:36, 76.59s/it]  5%|▍         | 63/1330 [1:27:27<39:39:25, 112.68s/it]  5%|▍         | 64/1330 [1:29:06<38:09:33, 108.51s/it]  5%|▍         | 65/1330 [1:29:56<32:00:18, 91.08s/it]   5%|▍         | 66/1330 [1:31:03<29:25:52, 83.82s/it]  5%|▌         | 67/1330 [1:33:12<34:07:26, 97.27s/it]  5%|▌         | 68/1330 [1:34:18<30:51:47, 88.04s/it]  5%|▌         | 69/1330 [1:35:26<28:43:01, 81.98s/it]  5%|▌         | 70/1330 [1:36:25<26:14:30, 74.98s/it]  5%|▌         | 71/1330 [1:37:24<24:32:13, 70.16s/it]  5%|▌         | 72/1330 [1:39:31<30:27:42, 87.17s/it]  5%|▌         | 73/1330 [1:41:05<31:08:51, 89.21s/it]  6%|▌         | 74/1330 [1:42:22<29:49:29, 85.49s/it]  6%|▌         | 75/1330 [1:43:25<27:27:24, 78.76s/it]  6%|▌         | 76/1330 [1:44:34<26:24:33, 75.82s/it]  6%|▌         | 77/1330 [1:46:37<31:18:54, 89.97s/it]  6%|▌         | 78/1330 [1:47:39<28:22:55, 81.61s/it]  6%|▌         | 79/1330 [1:49:41<32:38:44, 93.94s/it]  6%|▌         | 80/1330 [1:50:50<30:00:49, 86.44s/it]  6%|▌         | 81/1330 [1:51:43<26:30:14, 76.39s/it]  6%|▌         | 82/1330 [1:52:33<23:42:07, 68.37s/it]  6%|▌         | 83/1330 [1:54:30<28:45:02, 83.00s/it]  6%|▋         | 84/1330 [1:55:15<24:45:03, 71.51s/it]  6%|▋         | 85/1330 [1:55:55<21:26:41, 62.01s/it]  6%|▋         | 86/1330 [1:56:42<19:52:45, 57.53s/it]  7%|▋         | 87/1330 [1:57:45<20:30:52, 59.42s/it]  7%|▋         | 88/1330 [1:59:32<25:21:44, 73.51s/it]  7%|▋         | 89/1330 [2:00:28<23:31:13, 68.23s/it]  7%|▋         | 90/1330 [2:08:28<66:03:48, 191.80s/it]  7%|▋         | 91/1330 [2:10:19<57:42:52, 167.69s/it]  7%|▋         | 92/1330 [2:11:07<45:18:31, 131.75s/it]  7%|▋         | 93/1330 [2:12:12<38:21:42, 111.64s/it]  7%|▋         | 94/1330 [2:13:01<31:50:05, 92.72s/it]   7%|▋         | 95/1330 [2:13:57<28:06:54, 81.95s/it]  7%|▋         | 96/1330 [2:15:01<26:10:01, 76.34s/it]  7%|▋         | 97/1330 [2:16:26<27:03:29, 79.00s/it]  7%|▋         | 98/1330 [2:18:56<34:18:47, 100.27s/it]  7%|▋         | 99/1330 [2:20:01<30:42:36, 89.81s/it]   8%|▊         | 100/1330 [2:21:08<28:21:24, 83.00s/it]  8%|▊         | 101/1330 [2:24:24<39:51:23, 116.75s/it]  8%|▊         | 102/1330 [2:25:26<34:16:17, 100.47s/it]  8%|▊         | 103/1330 [2:29:32<49:06:57, 144.11s/it]  8%|▊         | 104/1330 [2:30:25<39:47:43, 116.85s/it]  8%|▊         | 105/1330 [2:31:43<35:44:17, 105.03s/it]  8%|▊         | 106/1330 [2:32:34<30:14:38, 88.95s/it]   8%|▊         | 107/1330 [2:35:58<41:56:56, 123.48s/it]  8%|▊         | 108/1330 [2:36:56<35:10:56, 103.65s/it]  8%|▊         | 109/1330 [2:37:48<29:56:21, 88.27s/it]   8%|▊         | 110/1330 [2:38:43<26:28:36, 78.13s/it]  8%|▊         | 111/1330 [2:40:47<31:08:46, 91.98s/it]  8%|▊         | 112/1330 [2:45:08<48:18:13, 142.77s/it]  8%|▊         | 113/1330 [2:46:10<40:04:44, 118.56s/it]  9%|▊         | 114/1330 [2:47:35<36:35:29, 108.33s/it]  9%|▊         | 115/1330 [2:48:55<33:42:26, 99.87s/it]   9%|▊         | 116/1330 [2:51:11<37:21:12, 110.77s/it]  9%|▉         | 117/1330 [2:52:16<32:39:13, 96.91s/it]   9%|▉         | 118/1330 [2:53:07<28:02:46, 83.31s/it]  9%|▉         | 119/1330 [2:53:59<24:51:51, 73.92s/it]  9%|▉         | 120/1330 [2:58:24<44:05:41, 131.19s/it]  9%|▉         | 121/1330 [2:59:23<36:46:47, 109.52s/it]  9%|▉         | 122/1330 [3:00:23<31:44:42, 94.60s/it]   9%|▉         | 123/1330 [3:01:29<28:52:59, 86.15s/it]  9%|▉         | 124/1330 [3:05:02<41:32:48, 124.02s/it]  9%|▉         | 125/1330 [3:06:24<37:23:17, 111.70s/it]  9%|▉         | 126/1330 [3:07:12<30:52:50, 92.33s/it]  10%|▉         | 127/1330 [3:07:59<26:18:29, 78.73s/it] 10%|▉         | 128/1330 [3:10:51<35:39:20, 106.79s/it] 10%|▉         | 129/1330 [3:11:45<30:23:11, 91.08s/it]  10%|▉         | 130/1330 [3:13:01<28:50:06, 86.51s/it] 10%|▉         | 131/1330 [3:14:01<26:10:39, 78.60s/it] 10%|▉         | 132/1330 [3:17:37<39:48:03, 119.60s/it] 10%|█         | 133/1330 [3:26:02<78:14:30, 235.31s/it] 10%|█         | 134/1330 [3:27:41<64:36:14, 194.46s/it] 10%|█         | 135/1330 [3:28:52<52:16:14, 157.47s/it] 10%|█         | 136/1330 [3:29:57<43:01:15, 129.71s/it] 10%|█         | 137/1330 [3:31:21<38:25:37, 115.96s/it] 10%|█         | 138/1330 [3:32:57<36:24:07, 109.94s/it] 10%|█         | 139/1330 [3:34:05<32:13:48, 97.42s/it]  11%|█         | 140/1330 [3:34:57<27:41:26, 83.77s/it] 11%|█         | 141/1330 [3:35:50<24:38:58, 74.63s/it] 11%|█         | 142/1330 [3:36:50<23:12:04, 70.31s/it] 11%|█         | 143/1330 [3:37:55<22:33:55, 68.44s/it] 11%|█         | 144/1330 [3:39:15<23:43:01, 71.99s/it] 11%|█         | 145/1330 [3:43:40<42:45:18, 129.89s/it] 11%|█         | 146/1330 [3:45:19<39:42:56, 120.76s/it] 11%|█         | 147/1330 [3:47:28<40:28:26, 123.17s/it] 11%|█         | 148/1330 [3:49:12<38:35:02, 117.51s/it] 11%|█         | 149/1330 [3:51:43<41:51:06, 127.58s/it] 11%|█▏        | 150/1330 [3:53:43<40:59:04, 125.04s/it] 11%|█▏        | 151/1330 [3:54:46<34:52:34, 106.49s/it] 11%|█▏        | 152/1330 [3:55:44<30:06:15, 92.00s/it]  12%|█▏        | 153/1330 [3:56:40<26:31:18, 81.12s/it] 12%|█▏        | 154/1330 [3:57:38<24:16:48, 74.33s/it] 12%|█▏        | 155/1330 [3:58:47<23:44:27, 72.74s/it] 12%|█▏        | 156/1330 [4:00:49<28:33:17, 87.56s/it] 12%|█▏        | 157/1330 [4:02:00<26:54:43, 82.59s/it] 12%|█▏        | 158/1330 [4:03:47<29:11:52, 89.69s/it] 12%|█▏        | 159/1330 [4:05:27<30:14:48, 92.99s/it] 12%|█▏        | 160/1330 [4:06:33<27:31:00, 84.67s/it] 12%|█▏        | 161/1330 [4:07:35<25:20:57, 78.06s/it] 12%|█▏        | 162/1330 [4:08:31<23:08:00, 71.30s/it] 12%|█▏        | 163/1330 [4:17:54<70:58:35, 218.95s/it] 12%|█▏        | 164/1330 [4:19:53<61:09:38, 188.83s/it] 12%|█▏        | 165/1330 [4:21:49<54:06:32, 167.20s/it] 12%|█▏        | 166/1330 [4:23:53<49:51:07, 154.18s/it] 13%|█▎        | 167/1330 [4:24:54<40:47:56, 126.29s/it] 13%|█▎        | 168/1330 [4:25:52<34:07:20, 105.71s/it] 13%|█▎        | 169/1330 [4:26:57<30:05:48, 93.32s/it]  13%|█▎        | 170/1330 [4:28:25<29:34:50, 91.80s/it] 13%|█▎        | 171/1330 [4:29:37<27:42:09, 86.05s/it] 13%|█▎        | 172/1330 [4:32:05<33:38:03, 104.56s/it] 13%|█▎        | 173/1330 [4:33:05<29:14:47, 91.00s/it]  13%|█▎        | 174/1330 [4:34:40<29:41:24, 92.46s/it] 13%|█▎        | 175/1330 [4:35:31<25:40:36, 80.03s/it] 13%|█▎        | 176/1330 [4:36:34<24:00:10, 74.88s/it] 13%|█▎        | 177/1330 [4:37:32<22:20:01, 69.73s/it] 13%|█▎        | 178/1330 [4:38:28<20:57:38, 65.50s/it] 13%|█▎        | 179/1330 [4:40:29<26:17:31, 82.23s/it] 14%|█▎        | 180/1330 [4:41:25<23:44:50, 74.34s/it] 14%|█▎        | 181/1330 [4:42:16<21:29:51, 67.36s/it] 14%|█▎        | 182/1330 [4:43:16<20:45:37, 65.10s/it] 14%|█▍        | 183/1330 [4:46:15<31:37:53, 99.28s/it] 14%|█▍        | 184/1330 [4:47:20<28:23:33, 89.19s/it] 14%|█▍        | 185/1330 [4:48:11<24:42:50, 77.70s/it] 14%|█▍        | 186/1330 [4:49:16<23:28:09, 73.85s/it] 14%|█▍        | 187/1330 [4:50:20<22:28:31, 70.79s/it] 14%|█▍        | 188/1330 [4:51:09<20:22:35, 64.23s/it] 14%|█▍        | 189/1330 [4:52:02<19:16:44, 60.83s/it] 14%|█▍        | 190/1330 [4:53:01<19:05:25, 60.29s/it] 14%|█▍        | 191/1330 [4:54:24<21:15:44, 67.20s/it] 14%|█▍        | 192/1330 [4:55:17<19:54:05, 62.96s/it] 15%|█▍        | 193/1330 [4:57:33<26:49:28, 84.93s/it] 15%|█▍        | 194/1330 [4:58:38<24:55:29, 78.99s/it] 15%|█▍        | 195/1330 [4:59:24<21:45:27, 69.01s/it] 15%|█▍        | 196/1330 [5:00:05<19:03:16, 60.49s/it] 15%|█▍        | 197/1330 [5:01:37<22:03:10, 70.07s/it] 15%|█▍        | 198/1330 [5:02:21<19:33:54, 62.22s/it] 15%|█▍        | 199/1330 [5:09:33<54:22:59, 173.10s/it] 15%|█▌        | 200/1330 [5:13:12<58:39:40, 186.89s/it] 15%|█▌        | 201/1330 [5:15:07<51:48:07, 165.18s/it] 15%|█▌        | 202/1330 [5:17:12<47:58:53, 153.13s/it] 15%|█▌        | 203/1330 [5:18:13<39:17:13, 125.50s/it] 15%|█▌        | 204/1330 [5:19:05<32:26:14, 103.71s/it] 15%|█▌        | 205/1330 [5:19:53<27:07:55, 86.82s/it]  15%|█▌        | 206/1330 [5:20:41<23:26:39, 75.09s/it] 16%|█▌        | 207/1330 [5:27:04<52:17:49, 167.65s/it] 16%|█▌        | 208/1330 [5:28:16<43:17:28, 138.90s/it] 16%|█▌        | 209/1330 [5:28:59<34:16:07, 110.05s/it] 16%|█▌        | 210/1330 [5:29:39<27:44:15, 89.16s/it]  16%|█▌        | 211/1330 [5:30:57<26:37:37, 85.66s/it] 16%|█▌        | 212/1330 [5:31:47<23:19:31, 75.11s/it] 16%|█▌        | 213/1330 [5:32:34<20:38:55, 66.55s/it] 16%|█▌        | 214/1330 [5:33:28<19:28:04, 62.80s/it] 16%|█▌        | 215/1330 [5:34:14<17:55:39, 57.88s/it] 16%|█▌        | 216/1330 [5:35:29<19:27:00, 62.86s/it] 16%|█▋        | 217/1330 [5:36:33<19:36:24, 63.42s/it] 16%|█▋        | 218/1330 [5:37:47<20:33:58, 66.58s/it] 16%|█▋        | 219/1330 [5:46:40<63:39:53, 206.29s/it] 17%|█▋        | 220/1330 [5:47:42<50:19:04, 163.19s/it] 17%|█▋        | 221/1330 [5:50:44<52:01:45, 168.90s/it] 17%|█▋        | 222/1330 [5:52:01<43:29:11, 141.29s/it] 17%|█▋        | 223/1330 [5:56:58<57:44:47, 187.79s/it] 17%|█▋        | 224/1330 [5:58:10<47:02:15, 153.11s/it] 17%|█▋        | 225/1330 [5:59:11<38:32:26, 125.56s/it] 17%|█▋        | 226/1330 [6:04:16<55:01:28, 179.43s/it] 17%|█▋        | 227/1330 [6:06:03<48:15:35, 157.51s/it] 17%|█▋        | 228/1330 [6:08:06<45:06:10, 147.34s/it] 17%|█▋        | 229/1330 [6:09:31<39:18:03, 128.50s/it] 17%|█▋        | 230/1330 [6:10:33<33:10:37, 108.58s/it] 17%|█▋        | 231/1330 [6:11:31<28:34:29, 93.60s/it]  17%|█▋        | 232/1330 [6:12:29<25:13:34, 82.71s/it] 18%|█▊        | 233/1330 [6:20:28<61:29:30, 201.80s/it] 18%|█▊        | 234/1330 [6:21:28<48:27:46, 159.18s/it] 18%|█▊        | 235/1330 [6:22:35<39:58:54, 131.45s/it] 18%|█▊        | 236/1330 [6:23:51<34:52:22, 114.76s/it] 18%|█▊        | 237/1330 [6:24:46<29:24:37, 96.87s/it]  18%|█▊        | 238/1330 [6:27:22<34:48:30, 114.75s/it] 18%|█▊        | 239/1330 [6:28:53<32:33:14, 107.42s/it] 18%|█▊        | 240/1330 [6:30:08<29:38:33, 97.90s/it]  18%|█▊        | 241/1330 [6:31:11<26:26:04, 87.39s/it] 18%|█▊        | 242/1330 [6:33:02<28:30:21, 94.32s/it] 18%|█▊        | 243/1330 [6:33:53<24:34:32, 81.39s/it] 18%|█▊        | 244/1330 [6:34:42<21:35:24, 71.57s/it] 18%|█▊        | 245/1330 [6:35:47<21:00:15, 69.69s/it] 18%|█▊        | 246/1330 [6:37:32<24:09:57, 80.26s/it] 19%|█▊        | 247/1330 [6:38:51<24:03:16, 79.96s/it] 19%|█▊        | 248/1330 [6:39:59<22:55:26, 76.27s/it] 19%|█▊        | 249/1330 [6:41:12<22:38:39, 75.41s/it] 19%|█▉        | 250/1330 [6:42:19<21:53:23, 72.97s/it] 19%|█▉        | 251/1330 [6:45:07<30:24:18, 101.44s/it] 19%|█▉        | 252/1330 [6:54:44<73:05:12, 244.07s/it] 19%|█▉        | 253/1330 [6:56:56<62:57:43, 210.46s/it] 19%|█▉        | 254/1330 [7:00:51<65:03:21, 217.66s/it] 19%|█▉        | 255/1330 [7:02:04<52:06:20, 174.49s/it] 19%|█▉        | 256/1330 [7:03:20<43:13:54, 144.91s/it] 19%|█▉        | 257/1330 [7:11:11<72:18:43, 242.61s/it] 19%|█▉        | 258/1330 [7:12:32<57:49:21, 194.18s/it] 19%|█▉        | 259/1330 [7:13:25<45:09:16, 151.78s/it] 20%|█▉        | 260/1330 [7:14:13<35:51:51, 120.66s/it] 20%|█▉        | 261/1330 [7:15:00<29:17:57, 98.67s/it]  20%|█▉        | 262/1330 [7:15:53<25:10:25, 84.86s/it] 20%|█▉        | 263/1330 [7:17:42<27:15:46, 91.98s/it] 20%|█▉        | 264/1330 [7:18:53<25:27:00, 85.95s/it] 20%|█▉        | 265/1330 [7:20:02<23:51:22, 80.64s/it] 20%|██        | 266/1330 [7:20:57<21:37:53, 73.19s/it] 20%|██        | 267/1330 [7:21:53<20:04:04, 67.96s/it] 20%|██        | 268/1330 [7:26:42<39:35:58, 134.24s/it] 20%|██        | 269/1330 [7:27:55<34:09:36, 115.91s/it] 20%|██        | 270/1330 [7:28:47<28:26:23, 96.59s/it]  20%|██        | 271/1330 [7:30:17<27:53:02, 94.79s/it] 20%|██        | 272/1330 [7:31:27<25:39:15, 87.29s/it] 21%|██        | 273/1330 [7:34:12<32:28:19, 110.60s/it] 21%|██        | 274/1330 [7:35:19<28:35:26, 97.47s/it]  21%|██        | 275/1330 [7:36:22<25:32:18, 87.15s/it] 21%|██        | 276/1330 [7:39:03<32:00:57, 109.35s/it] 21%|██        | 277/1330 [7:41:08<33:20:53, 114.01s/it] 21%|██        | 278/1330 [7:42:07<28:27:35, 97.39s/it]  21%|██        | 279/1330 [7:43:16<25:55:50, 88.82s/it] 21%|██        | 280/1330 [7:45:09<28:05:54, 96.34s/it] 21%|██        | 281/1330 [7:46:08<24:45:36, 84.97s/it] 21%|██        | 282/1330 [7:47:10<22:47:05, 78.27s/it] 21%|██▏       | 283/1330 [7:48:10<21:08:44, 72.71s/it] 21%|██▏       | 284/1330 [7:49:11<20:05:00, 69.12s/it] 21%|██▏       | 285/1330 [7:50:32<21:05:00, 72.63s/it] 22%|██▏       | 286/1330 [7:51:54<21:55:50, 75.62s/it] 22%|██▏       | 287/1330 [7:53:16<22:23:58, 77.31s/it] 22%|██▏       | 288/1330 [7:54:09<20:17:47, 70.12s/it] 22%|██▏       | 289/1330 [7:55:12<19:38:19, 67.92s/it] 22%|██▏       | 290/1330 [7:58:28<30:43:16, 106.34s/it] 22%|██▏       | 291/1330 [7:59:46<28:15:37, 97.92s/it]  22%|██▏       | 292/1330 [8:00:48<25:06:57, 87.11s/it] 22%|██▏       | 293/1330 [8:02:19<25:28:41, 88.45s/it] 22%|██▏       | 294/1330 [8:03:57<26:11:55, 91.04s/it] 22%|██▏       | 295/1330 [8:04:52<23:08:04, 80.47s/it] 22%|██▏       | 296/1330 [8:05:38<20:07:56, 70.09s/it] 22%|██▏       | 297/1330 [8:06:25<18:05:42, 63.06s/it] 22%|██▏       | 298/1330 [8:07:12<16:44:34, 58.41s/it] 22%|██▏       | 299/1330 [8:08:17<17:17:29, 60.38s/it] 23%|██▎       | 300/1330 [8:09:21<17:34:10, 61.41s/it] 23%|██▎       | 301/1330 [8:10:14<16:46:19, 58.68s/it] 23%|██▎       | 302/1330 [8:11:37<18:51:21, 66.03s/it] 23%|██▎       | 303/1330 [8:12:57<20:01:22, 70.19s/it] 23%|██▎       | 304/1330 [8:13:49<18:27:00, 64.74s/it] 23%|██▎       | 305/1330 [8:14:39<17:13:36, 60.50s/it] 23%|██▎       | 306/1330 [8:16:25<21:05:14, 74.13s/it] 23%|██▎       | 307/1330 [8:17:22<19:34:31, 68.89s/it] 23%|██▎       | 308/1330 [8:18:38<20:11:02, 71.10s/it] 23%|██▎       | 309/1330 [8:21:21<27:59:22, 98.69s/it] 23%|██▎       | 310/1330 [8:22:11<23:49:58, 84.12s/it] 23%|██▎       | 311/1330 [8:23:16<22:11:01, 78.37s/it] 23%|██▎       | 312/1330 [8:25:04<24:39:57, 87.23s/it] 24%|██▎       | 313/1330 [8:25:54<21:30:03, 76.11s/it] 24%|██▎       | 314/1330 [8:27:01<20:39:12, 73.18s/it] 24%|██▎       | 315/1330 [8:29:08<25:13:19, 89.46s/it] 24%|██▍       | 316/1330 [8:30:25<24:07:10, 85.63s/it] 24%|██▍       | 317/1330 [8:31:20<21:33:54, 76.64s/it] 24%|██▍       | 318/1330 [8:34:01<28:37:03, 101.80s/it] 24%|██▍       | 319/1330 [8:35:22<26:50:28, 95.58s/it]  24%|██▍       | 320/1330 [8:37:43<30:36:07, 109.08s/it] 24%|██▍       | 321/1330 [8:38:34<25:44:35, 91.85s/it]  24%|██▍       | 322/1330 [8:40:09<25:58:43, 92.78s/it] 24%|██▍       | 323/1330 [8:41:16<23:47:35, 85.06s/it] 24%|██▍       | 324/1330 [8:42:35<23:15:29, 83.23s/it] 24%|██▍       | 325/1330 [8:44:19<24:59:40, 89.53s/it] 25%|██▍       | 326/1330 [8:46:24<27:56:21, 100.18s/it] 25%|██▍       | 327/1330 [8:47:25<24:34:16, 88.19s/it]  25%|██▍       | 328/1330 [8:48:26<22:17:19, 80.08s/it] 25%|██▍       | 329/1330 [8:49:16<19:47:59, 71.21s/it] 25%|██▍       | 330/1330 [8:50:55<22:05:49, 79.55s/it] 25%|██▍       | 331/1330 [8:51:58<20:40:07, 74.48s/it] 25%|██▍       | 332/1330 [8:54:08<25:13:52, 91.01s/it] 25%|██▌       | 333/1330 [9:02:25<58:58:36, 212.95s/it] 25%|██▌       | 334/1330 [9:03:23<46:02:37, 166.42s/it] 25%|██▌       | 335/1330 [9:04:25<37:19:11, 135.03s/it] 25%|██▌       | 336/1330 [9:05:35<31:56:44, 115.70s/it] 25%|██▌       | 337/1330 [9:06:20<26:02:30, 94.41s/it]  25%|██▌       | 338/1330 [9:06:53<20:55:10, 75.92s/it] 25%|██▌       | 339/1330 [9:07:40<18:31:57, 67.32s/it] 26%|██▌       | 340/1330 [9:08:40<17:56:17, 65.23s/it] 26%|██▌       | 341/1330 [9:09:31<16:44:55, 60.97s/it] 26%|██▌       | 342/1330 [9:10:40<17:20:54, 63.21s/it] 26%|██▌       | 343/1330 [9:11:26<15:55:35, 58.09s/it] 26%|██▌       | 344/1330 [9:12:42<17:24:32, 63.56s/it] 26%|██▌       | 345/1330 [9:13:48<17:32:52, 64.13s/it] 26%|██▌       | 346/1330 [9:14:49<17:15:54, 63.16s/it] 26%|██▌       | 347/1330 [9:16:00<17:53:08, 65.50s/it] 26%|██▌       | 348/1330 [9:18:21<24:04:45, 88.27s/it] 26%|██▌       | 349/1330 [9:19:32<22:38:16, 83.07s/it] 26%|██▋       | 350/1330 [9:20:50<22:09:47, 81.42s/it] 26%|██▋       | 351/1330 [9:21:45<19:59:36, 73.52s/it] 26%|██▋       | 352/1330 [9:22:42<18:38:51, 68.64s/it] 27%|██▋       | 353/1330 [9:24:01<19:29:37, 71.83s/it] 27%|██▋       | 354/1330 [9:25:10<19:13:51, 70.93s/it] 27%|██▋       | 355/1330 [9:33:51<55:47:36, 206.01s/it] 27%|██▋       | 356/1330 [9:34:45<43:20:35, 160.20s/it] 27%|██▋       | 357/1330 [9:36:39<39:34:15, 146.41s/it] 27%|██▋       | 358/1330 [9:37:29<31:44:48, 117.58s/it] 27%|██▋       | 359/1330 [9:39:25<31:32:30, 116.94s/it] 27%|██▋       | 360/1330 [9:40:25<26:54:46, 99.88s/it]  27%|██▋       | 361/1330 [9:41:36<24:36:16, 91.41s/it] 27%|██▋       | 362/1330 [9:43:36<26:52:07, 99.93s/it] 27%|██▋       | 363/1330 [9:45:02<25:44:49, 95.85s/it] 27%|██▋       | 364/1330 [9:46:17<24:01:59, 89.56s/it] 27%|██▋       | 365/1330 [9:49:10<30:40:31, 114.44s/it] 28%|██▊       | 366/1330 [9:51:54<34:39:55, 129.46s/it] 28%|██▊       | 367/1330 [9:52:41<27:59:08, 104.62s/it] 28%|██▊       | 368/1330 [9:53:45<24:41:50, 92.42s/it]  28%|██▊       | 369/1330 [9:54:31<20:57:41, 78.52s/it] 28%|██▊       | 370/1330 [9:55:17<18:19:18, 68.71s/it] 28%|██▊       | 371/1330 [9:59:23<32:28:29, 121.91s/it] 28%|██▊       | 372/1330 [10:01:10<31:14:49, 117.42s/it] 28%|██▊       | 373/1330 [10:02:59<30:31:50, 114.85s/it] 28%|██▊       | 374/1330 [10:04:06<26:42:14, 100.56s/it] 28%|██▊       | 375/1330 [10:04:53<22:26:55, 84.62s/it]  28%|██▊       | 376/1330 [10:05:46<19:53:11, 75.04s/it] 28%|██▊       | 377/1330 [10:06:48<18:48:53, 71.07s/it] 28%|██▊       | 378/1330 [10:07:51<18:12:20, 68.84s/it] 28%|██▊       | 379/1330 [10:09:19<19:37:56, 74.32s/it] 29%|██▊       | 380/1330 [10:10:01<17:06:40, 64.84s/it] 29%|██▊       | 381/1330 [10:10:51<15:54:47, 60.37s/it] 29%|██▊       | 382/1330 [10:14:54<30:18:18, 115.08s/it] 29%|██▉       | 383/1330 [10:15:39<24:42:30, 93.93s/it]  29%|██▉       | 384/1330 [10:16:41<22:13:46, 84.59s/it] 29%|██▉       | 385/1330 [10:24:48<53:51:32, 205.18s/it] 29%|██▉       | 386/1330 [10:29:21<59:09:45, 225.62s/it] 29%|██▉       | 387/1330 [10:30:04<44:42:18, 170.67s/it] 29%|██▉       | 388/1330 [10:30:48<34:44:44, 132.79s/it] 29%|██▉       | 389/1330 [10:31:26<27:17:44, 104.43s/it] 29%|██▉       | 390/1330 [10:33:50<30:19:55, 116.17s/it] 29%|██▉       | 391/1330 [10:34:52<26:06:03, 100.07s/it] 29%|██▉       | 392/1330 [10:36:10<24:18:44, 93.31s/it]  30%|██▉       | 393/1330 [10:36:53<20:23:02, 78.32s/it] 30%|██▉       | 394/1330 [10:38:14<20:32:47, 79.03s/it] 30%|██▉       | 395/1330 [10:38:52<17:19:57, 66.74s/it] 30%|██▉       | 396/1330 [10:39:55<17:01:26, 65.62s/it] 30%|██▉       | 397/1330 [10:40:56<16:40:27, 64.34s/it] 30%|██▉       | 398/1330 [10:41:53<16:04:59, 62.12s/it] 30%|███       | 399/1330 [10:44:01<21:07:08, 81.66s/it] 30%|███       | 400/1330 [10:44:50<18:37:42, 72.11s/it] 30%|███       | 401/1330 [10:45:48<17:27:07, 67.63s/it] 30%|███       | 402/1330 [10:46:33<15:42:52, 60.96s/it] 30%|███       | 403/1330 [10:47:34<15:43:34, 61.07s/it] 30%|███       | 404/1330 [10:48:20<14:33:24, 56.59s/it] 30%|███       | 405/1330 [10:50:21<19:27:09, 75.71s/it] 31%|███       | 406/1330 [10:51:05<17:01:56, 66.36s/it] 31%|███       | 407/1330 [10:52:02<16:15:13, 63.40s/it] 31%|███       | 408/1330 [10:52:58<15:40:26, 61.20s/it] 31%|███       | 409/1330 [10:54:12<16:37:00, 64.95s/it] 31%|███       | 410/1330 [10:55:08<15:55:52, 62.34s/it] 31%|███       | 411/1330 [10:55:58<14:57:18, 58.58s/it] 31%|███       | 412/1330 [10:57:22<16:54:46, 66.32s/it] 31%|███       | 413/1330 [10:58:41<17:51:30, 70.11s/it] 31%|███       | 414/1330 [10:59:23<15:39:53, 61.56s/it] 31%|███       | 415/1330 [11:00:05<14:12:57, 55.93s/it] 31%|███▏      | 416/1330 [11:00:45<12:59:37, 51.18s/it] 31%|███▏      | 417/1330 [11:01:34<12:46:40, 50.38s/it] 31%|███▏      | 418/1330 [11:02:10<11:40:07, 46.06s/it] 32%|███▏      | 419/1330 [11:02:51<11:17:47, 44.64s/it] 32%|███▏      | 420/1330 [11:03:42<11:44:02, 46.42s/it] 32%|███▏      | 421/1330 [11:04:22<11:14:09, 44.50s/it] 32%|███▏      | 422/1330 [11:04:59<10:37:52, 42.15s/it] 32%|███▏      | 423/1330 [11:05:34<10:08:58, 40.28s/it] 32%|███▏      | 424/1330 [11:06:05<9:25:58, 37.48s/it]  32%|███▏      | 425/1330 [11:07:16<11:56:36, 47.51s/it] 32%|███▏      | 426/1330 [11:08:11<12:27:59, 49.65s/it] 32%|███▏      | 427/1330 [11:08:49<11:34:57, 46.18s/it] 32%|███▏      | 428/1330 [11:13:39<29:52:01, 119.20s/it] 32%|███▏      | 429/1330 [11:16:09<32:09:23, 128.48s/it] 32%|███▏      | 430/1330 [11:16:54<25:51:59, 103.47s/it] 32%|███▏      | 431/1330 [11:17:49<22:15:10, 89.11s/it]  32%|███▏      | 432/1330 [11:18:26<18:15:54, 73.22s/it] 33%|███▎      | 433/1330 [11:20:27<21:52:42, 87.81s/it] 33%|███▎      | 434/1330 [11:21:23<19:28:09, 78.22s/it] 33%|███▎      | 435/1330 [11:21:59<16:15:37, 65.41s/it] 33%|███▎      | 436/1330 [11:22:46<14:53:38, 59.98s/it] 33%|███▎      | 437/1330 [11:24:45<19:16:10, 77.68s/it] 33%|███▎      | 438/1330 [11:25:36<17:13:37, 69.53s/it] 33%|███▎      | 439/1330 [11:26:10<14:35:43, 58.97s/it] 33%|███▎      | 440/1330 [11:26:50<13:12:46, 53.45s/it] 33%|███▎      | 441/1330 [11:27:27<11:56:09, 48.33s/it] 33%|███▎      | 442/1330 [11:28:03<11:00:27, 44.63s/it] 33%|███▎      | 443/1330 [11:29:24<13:42:15, 55.62s/it] 33%|███▎      | 444/1330 [11:30:12<13:06:00, 53.23s/it] 33%|███▎      | 445/1330 [11:30:49<11:52:00, 48.27s/it] 34%|███▎      | 446/1330 [11:31:41<12:10:49, 49.60s/it] 34%|███▎      | 447/1330 [11:32:24<11:42:05, 47.71s/it] 34%|███▎      | 448/1330 [11:33:00<10:47:21, 44.04s/it] 34%|███▍      | 449/1330 [11:37:23<26:53:16, 109.87s/it] 34%|███▍      | 450/1330 [11:38:02<21:35:30, 88.33s/it]  34%|███▍      | 451/1330 [11:38:50<18:39:06, 76.39s/it] 34%|███▍      | 452/1330 [11:39:49<17:21:39, 71.18s/it] 34%|███▍      | 453/1330 [11:40:40<15:51:52, 65.12s/it] 34%|███▍      | 454/1330 [11:41:19<13:56:06, 57.27s/it] 34%|███▍      | 455/1330 [11:42:28<14:48:16, 60.91s/it] 34%|███▍      | 456/1330 [11:43:09<13:19:37, 54.89s/it] 34%|███▍      | 457/1330 [11:43:59<12:55:56, 53.33s/it] 34%|███▍      | 458/1330 [11:44:40<12:00:06, 49.55s/it] 35%|███▍      | 459/1330 [11:46:07<14:45:08, 60.97s/it] 35%|███▍      | 460/1330 [11:46:54<13:43:05, 56.76s/it] 35%|███▍      | 461/1330 [11:54:52<44:12:18, 183.13s/it] 35%|███▍      | 462/1330 [11:55:39<34:18:07, 142.27s/it] 35%|███▍      | 463/1330 [11:56:16<26:37:30, 110.55s/it] 35%|███▍      | 464/1330 [11:57:08<22:23:25, 93.08s/it]  35%|███▍      | 465/1330 [11:57:50<18:38:56, 77.61s/it] 35%|███▌      | 466/1330 [11:58:24<15:32:17, 64.74s/it] 35%|███▌      | 467/1330 [12:00:59<22:00:37, 91.82s/it] 35%|███▌      | 468/1330 [12:01:57<19:34:11, 81.73s/it] 35%|███▌      | 469/1330 [12:03:25<19:57:34, 83.45s/it] 35%|███▌      | 470/1330 [12:04:28<18:28:19, 77.32s/it] 35%|███▌      | 471/1330 [12:05:11<16:00:15, 67.07s/it] 35%|███▌      | 472/1330 [12:05:42<13:25:11, 56.31s/it] 36%|███▌      | 473/1330 [12:07:03<15:10:23, 63.74s/it] 36%|███▌      | 474/1330 [12:07:45<13:33:06, 56.99s/it] 36%|███▌      | 475/1330 [12:08:21<12:05:29, 50.91s/it] 36%|███▌      | 476/1330 [12:09:10<11:54:47, 50.22s/it] 36%|███▌      | 477/1330 [12:09:44<10:45:40, 45.42s/it] 36%|███▌      | 478/1330 [12:10:56<12:35:37, 53.21s/it] 36%|███▌      | 479/1330 [12:11:57<13:09:09, 55.64s/it] 36%|███▌      | 480/1330 [12:12:47<12:44:31, 53.97s/it] 36%|███▌      | 481/1330 [12:15:01<18:24:47, 78.08s/it] 36%|███▌      | 482/1330 [12:15:47<16:04:44, 68.26s/it] 36%|███▋      | 483/1330 [12:17:04<16:40:50, 70.90s/it] 36%|███▋      | 484/1330 [12:17:40<14:11:41, 60.40s/it] 36%|███▋      | 485/1330 [12:19:01<15:40:46, 66.80s/it] 37%|███▋      | 486/1330 [12:19:57<14:50:54, 63.33s/it] 37%|███▋      | 487/1330 [12:21:01<14:55:18, 63.72s/it] 37%|███▋      | 488/1330 [12:21:49<13:49:11, 59.09s/it] 37%|███▋      | 489/1330 [12:26:39<29:56:50, 128.19s/it] 37%|███▋      | 490/1330 [12:27:51<25:58:39, 111.33s/it] 37%|███▋      | 491/1330 [12:28:44<21:54:25, 94.00s/it]  37%|███▋      | 492/1330 [12:29:42<19:21:20, 83.15s/it] 37%|███▋      | 493/1330 [12:30:20<16:10:29, 69.57s/it] 37%|███▋      | 494/1330 [12:31:51<17:38:02, 75.94s/it] 37%|███▋      | 495/1330 [12:32:47<16:13:29, 69.95s/it] 37%|███▋      | 496/1330 [12:33:38<14:51:53, 64.16s/it] 37%|███▋      | 497/1330 [12:35:05<16:25:35, 70.99s/it] 37%|███▋      | 498/1330 [12:35:45<14:16:05, 61.74s/it] 38%|███▊      | 499/1330 [12:39:50<26:59:46, 116.95s/it] 38%|███▊      | 500/1330 [12:41:16<24:48:00, 107.57s/it] 38%|███▊      | 501/1330 [12:44:22<30:09:20, 130.95s/it] 38%|███▊      | 502/1330 [12:45:09<24:19:44, 105.78s/it] 38%|███▊      | 503/1330 [12:49:41<35:45:21, 155.65s/it] 38%|███▊      | 504/1330 [12:50:28<28:13:39, 123.03s/it] 38%|███▊      | 505/1330 [12:51:14<22:57:10, 100.16s/it] 38%|███▊      | 506/1330 [12:52:14<20:08:29, 88.00s/it]  38%|███▊      | 507/1330 [12:52:59<17:11:57, 75.23s/it] 38%|███▊      | 508/1330 [12:54:34<18:29:51, 81.01s/it] 38%|███▊      | 509/1330 [12:55:25<16:25:34, 72.03s/it] 38%|███▊      | 510/1330 [12:56:04<14:08:41, 62.10s/it] 38%|███▊      | 511/1330 [12:56:39<12:15:47, 53.90s/it] 38%|███▊      | 512/1330 [12:57:47<13:13:00, 58.17s/it] 39%|███▊      | 513/1330 [12:58:46<13:14:20, 58.34s/it] 39%|███▊      | 514/1330 [13:00:41<17:05:17, 75.39s/it] 39%|███▊      | 515/1330 [13:01:35<15:36:05, 68.91s/it] 39%|███▉      | 516/1330 [13:02:39<15:17:10, 67.60s/it] 39%|███▉      | 517/1330 [13:03:19<13:23:27, 59.30s/it] 39%|███▉      | 518/1330 [13:04:18<13:19:19, 59.06s/it] 39%|███▉      | 519/1330 [13:05:27<14:02:29, 62.33s/it] 39%|███▉      | 520/1330 [13:08:25<21:48:04, 96.89s/it] 39%|███▉      | 521/1330 [13:11:26<27:26:01, 122.08s/it] 39%|███▉      | 522/1330 [13:12:51<24:54:38, 110.99s/it] 39%|███▉      | 523/1330 [13:13:54<21:40:52, 96.72s/it]  39%|███▉      | 524/1330 [13:14:28<17:26:18, 77.89s/it] 39%|███▉      | 525/1330 [13:15:22<15:48:03, 70.66s/it] 40%|███▉      | 526/1330 [13:15:58<13:26:47, 60.21s/it] 40%|███▉      | 527/1330 [13:17:40<16:13:56, 72.77s/it] 40%|███▉      | 528/1330 [13:18:30<14:39:34, 65.80s/it] 40%|███▉      | 529/1330 [13:19:21<13:41:55, 61.57s/it] 40%|███▉      | 530/1330 [13:20:27<13:56:07, 62.71s/it] 40%|███▉      | 531/1330 [13:21:01<12:03:06, 54.30s/it] 40%|████      | 532/1330 [13:22:06<12:42:05, 57.30s/it] 40%|████      | 533/1330 [13:22:57<12:17:49, 55.54s/it] 40%|████      | 534/1330 [13:23:38<11:17:37, 51.08s/it] 40%|████      | 535/1330 [13:24:19<10:36:42, 48.05s/it] 40%|████      | 536/1330 [13:31:17<35:06:07, 159.15s/it] 40%|████      | 537/1330 [13:32:01<27:26:53, 124.61s/it] 40%|████      | 538/1330 [13:33:10<23:45:30, 107.99s/it] 41%|████      | 539/1330 [13:34:20<21:10:24, 96.37s/it]  41%|████      | 540/1330 [13:34:52<16:54:53, 77.08s/it] 41%|████      | 541/1330 [13:37:12<21:02:59, 96.05s/it] 41%|████      | 542/1330 [13:37:57<17:42:04, 80.87s/it] 41%|████      | 543/1330 [13:38:47<15:36:05, 71.37s/it] 41%|████      | 544/1330 [13:40:20<17:01:22, 77.97s/it] 41%|████      | 545/1330 [13:41:17<15:36:54, 71.61s/it] 41%|████      | 546/1330 [13:41:57<13:33:09, 62.23s/it] 41%|████      | 547/1330 [13:43:01<13:37:14, 62.62s/it] 41%|████      | 548/1330 [13:44:14<14:19:00, 65.91s/it] 41%|████▏     | 549/1330 [13:45:04<13:15:01, 61.08s/it] 41%|████▏     | 550/1330 [13:45:42<11:44:12, 54.17s/it] 41%|████▏     | 551/1330 [13:46:14<10:18:10, 47.61s/it] 42%|████▏     | 552/1330 [13:47:12<10:57:07, 50.68s/it] 42%|████▏     | 553/1330 [13:47:59<10:40:20, 49.45s/it] 42%|████▏     | 554/1330 [13:48:43<10:20:41, 47.99s/it] 42%|████▏     | 555/1330 [13:50:44<15:00:13, 69.70s/it] 42%|████▏     | 556/1330 [13:52:44<18:16:16, 84.98s/it] 42%|████▏     | 557/1330 [13:53:20<15:05:46, 70.31s/it] 42%|████▏     | 558/1330 [13:54:33<15:13:12, 70.97s/it] 42%|████▏     | 559/1330 [13:56:58<19:56:43, 93.13s/it] 42%|████▏     | 560/1330 [13:57:47<17:06:55, 80.02s/it] 42%|████▏     | 561/1330 [13:58:16<13:47:50, 64.59s/it] 42%|████▏     | 562/1330 [13:58:54<12:06:41, 56.77s/it] 42%|████▏     | 563/1330 [13:59:30<10:46:11, 50.55s/it] 42%|████▏     | 564/1330 [14:00:39<11:52:41, 55.82s/it] 42%|████▏     | 565/1330 [14:05:09<25:34:09, 120.33s/it] 43%|████▎     | 566/1330 [14:06:18<22:13:45, 104.74s/it] 43%|████▎     | 567/1330 [14:06:57<18:02:22, 85.11s/it]  43%|████▎     | 568/1330 [14:08:56<20:11:43, 95.41s/it] 43%|████▎     | 569/1330 [14:09:45<17:11:32, 81.33s/it] 43%|████▎     | 570/1330 [14:10:33<15:03:23, 71.32s/it] 43%|████▎     | 571/1330 [14:11:33<14:19:06, 67.91s/it] 43%|████▎     | 572/1330 [14:12:07<12:10:31, 57.83s/it] 43%|████▎     | 573/1330 [14:12:42<10:43:15, 50.98s/it] 43%|████▎     | 574/1330 [14:13:22<10:00:31, 47.66s/it] 43%|████▎     | 575/1330 [14:14:31<11:19:11, 53.98s/it] 43%|████▎     | 576/1330 [14:15:35<11:56:40, 57.03s/it] 43%|████▎     | 577/1330 [14:16:13<10:43:43, 51.29s/it] 43%|████▎     | 578/1330 [14:16:51<9:52:44, 47.29s/it]  44%|████▎     | 579/1330 [14:17:35<9:41:55, 46.49s/it] 44%|████▎     | 580/1330 [14:18:09<8:51:50, 42.55s/it] 44%|████▎     | 581/1330 [14:20:21<14:27:02, 69.46s/it] 44%|████▍     | 582/1330 [14:21:11<13:14:27, 63.73s/it] 44%|████▍     | 583/1330 [14:21:52<11:47:28, 56.83s/it] 44%|████▍     | 584/1330 [14:22:30<10:33:56, 50.99s/it] 44%|████▍     | 585/1330 [14:23:21<10:36:40, 51.28s/it] 44%|████▍     | 586/1330 [14:23:50<9:12:22, 44.55s/it]  44%|████▍     | 587/1330 [14:24:16<8:00:53, 38.83s/it] 44%|████▍     | 588/1330 [14:24:56<8:03:40, 39.11s/it] 44%|████▍     | 589/1330 [14:25:38<8:17:00, 40.24s/it] 44%|████▍     | 590/1330 [14:26:17<8:09:44, 39.71s/it] 44%|████▍     | 591/1330 [14:27:02<8:27:08, 41.18s/it] 45%|████▍     | 592/1330 [14:27:28<7:33:35, 36.88s/it] 45%|████▍     | 593/1330 [14:28:07<7:38:17, 37.31s/it] 45%|████▍     | 594/1330 [14:28:43<7:32:42, 36.91s/it] 45%|████▍     | 595/1330 [14:30:42<12:34:33, 61.60s/it] 45%|████▍     | 596/1330 [14:31:24<11:22:57, 55.83s/it] 45%|████▍     | 597/1330 [14:33:07<14:13:49, 69.89s/it] 45%|████▍     | 598/1330 [14:34:22<14:31:30, 71.43s/it] 45%|████▌     | 599/1330 [14:35:10<13:04:33, 64.40s/it] 45%|████▌     | 600/1330 [14:35:52<11:43:42, 57.84s/it] 45%|████▌     | 601/1330 [14:36:31<10:31:51, 52.01s/it] 45%|████▌     | 602/1330 [14:37:36<11:19:07, 55.97s/it] 45%|████▌     | 603/1330 [14:38:17<10:24:03, 51.50s/it] 45%|████▌     | 604/1330 [14:39:32<11:47:28, 58.47s/it] 45%|████▌     | 605/1330 [14:40:32<11:53:09, 59.02s/it] 46%|████▌     | 606/1330 [14:41:10<10:37:09, 52.80s/it] 46%|████▌     | 607/1330 [14:42:38<12:42:51, 63.31s/it] 46%|████▌     | 608/1330 [14:43:59<13:42:49, 68.38s/it] 46%|████▌     | 609/1330 [14:44:38<11:56:36, 59.63s/it] 46%|████▌     | 610/1330 [14:45:41<12:09:32, 60.79s/it] 46%|████▌     | 611/1330 [14:46:25<11:06:18, 55.60s/it] 46%|████▌     | 612/1330 [14:47:41<12:19:43, 61.82s/it] 46%|████▌     | 613/1330 [14:48:21<10:58:43, 55.12s/it] 46%|████▌     | 614/1330 [14:49:01<10:04:21, 50.64s/it] 46%|████▌     | 615/1330 [14:51:31<15:59:37, 80.53s/it] 46%|████▋     | 616/1330 [14:52:40<15:18:17, 77.17s/it] 46%|████▋     | 617/1330 [14:53:33<13:48:37, 69.73s/it] 46%|████▋     | 618/1330 [14:54:16<12:12:02, 61.69s/it] 47%|████▋     | 619/1330 [14:57:18<19:18:45, 97.79s/it] 47%|████▋     | 620/1330 [14:58:30<17:48:09, 90.27s/it] 47%|████▋     | 621/1330 [14:59:09<14:42:30, 74.68s/it] 47%|████▋     | 622/1330 [14:59:46<12:30:21, 63.59s/it] 47%|████▋     | 623/1330 [15:00:37<11:42:03, 59.58s/it] 47%|████▋     | 624/1330 [15:02:09<13:35:10, 69.28s/it] 47%|████▋     | 625/1330 [15:02:58<12:24:36, 63.37s/it] 47%|████▋     | 626/1330 [15:03:43<11:20:13, 57.97s/it] 47%|████▋     | 627/1330 [15:05:17<13:24:38, 68.68s/it] 47%|████▋     | 628/1330 [15:06:45<14:29:54, 74.35s/it] 47%|████▋     | 629/1330 [15:07:19<12:09:16, 62.42s/it] 47%|████▋     | 630/1330 [15:07:53<10:26:48, 53.73s/it] 47%|████▋     | 631/1330 [15:08:26<9:12:56, 47.46s/it]  48%|████▊     | 632/1330 [15:09:01<8:29:23, 43.79s/it] 48%|████▊     | 633/1330 [15:09:53<8:57:37, 46.28s/it] 48%|████▊     | 634/1330 [15:10:27<8:12:56, 42.50s/it] 48%|████▊     | 635/1330 [15:11:16<8:37:16, 44.66s/it] 48%|████▊     | 636/1330 [15:12:08<9:02:11, 46.88s/it] 48%|████▊     | 637/1330 [15:12:53<8:54:04, 46.24s/it] 48%|████▊     | 638/1330 [15:13:34<8:33:27, 44.52s/it] 48%|████▊     | 639/1330 [15:14:05<7:45:58, 40.46s/it] 48%|████▊     | 640/1330 [15:14:37<7:18:31, 38.13s/it] 48%|████▊     | 641/1330 [15:15:04<6:37:56, 34.65s/it] 48%|████▊     | 642/1330 [15:15:27<5:59:08, 31.32s/it] 48%|████▊     | 643/1330 [15:16:01<6:06:55, 32.05s/it] 48%|████▊     | 644/1330 [15:16:38<6:24:36, 33.64s/it] 48%|████▊     | 645/1330 [15:17:12<6:22:40, 33.52s/it] 49%|████▊     | 646/1330 [15:17:50<6:39:27, 35.04s/it] 49%|████▊     | 647/1330 [15:19:07<9:01:51, 47.60s/it] 49%|████▊     | 648/1330 [15:19:41<8:12:20, 43.32s/it] 49%|████▉     | 649/1330 [15:20:09<7:21:37, 38.91s/it] 49%|████▉     | 650/1330 [15:20:40<6:55:04, 36.62s/it] 49%|████▉     | 651/1330 [15:21:04<6:10:31, 32.74s/it] 49%|████▉     | 652/1330 [15:21:33<5:57:00, 31.59s/it] 49%|████▉     | 653/1330 [15:22:01<5:43:33, 30.45s/it] 49%|████▉     | 654/1330 [15:22:47<6:36:54, 35.23s/it] 49%|████▉     | 655/1330 [15:23:06<5:41:38, 30.37s/it] 49%|████▉     | 656/1330 [15:23:31<5:23:49, 28.83s/it] 49%|████▉     | 657/1330 [15:24:13<6:06:43, 32.69s/it] 49%|████▉     | 658/1330 [15:24:40<5:46:48, 30.96s/it] 50%|████▉     | 659/1330 [15:25:04<5:23:13, 28.90s/it] 50%|████▉     | 660/1330 [15:25:28<5:06:58, 27.49s/it] 50%|████▉     | 661/1330 [15:26:09<5:49:45, 31.37s/it] 50%|████▉     | 662/1330 [15:26:31<5:19:16, 28.68s/it] 50%|████▉     | 663/1330 [15:27:12<5:58:43, 32.27s/it] 50%|████▉     | 664/1330 [15:27:45<6:02:23, 32.65s/it] 50%|█████     | 665/1330 [15:28:18<6:00:17, 32.51s/it] 50%|█████     | 666/1330 [15:28:30<4:52:18, 26.41s/it] 50%|█████     | 667/1330 [15:28:46<4:18:27, 23.39s/it] 50%|█████     | 668/1330 [15:29:13<4:30:38, 24.53s/it] 50%|█████     | 669/1330 [15:29:37<4:27:46, 24.31s/it] 50%|█████     | 670/1330 [15:33:07<14:38:49, 79.89s/it] 50%|█████     | 671/1330 [15:33:35<11:47:44, 64.44s/it] 51%|█████     | 672/1330 [15:34:48<12:15:06, 67.03s/it] 51%|█████     | 673/1330 [15:35:18<10:12:12, 55.91s/it] 51%|█████     | 674/1330 [15:35:57<9:14:14, 50.69s/it]  51%|█████     | 675/1330 [15:36:18<7:38:57, 42.04s/it] 51%|█████     | 676/1330 [15:36:46<6:50:33, 37.67s/it] 51%|█████     | 677/1330 [15:37:16<6:26:11, 35.48s/it] 51%|█████     | 678/1330 [15:37:37<5:38:31, 31.15s/it] 51%|█████     | 679/1330 [15:38:07<5:31:41, 30.57s/it] 51%|█████     | 680/1330 [15:38:31<5:10:56, 28.70s/it] 51%|█████     | 681/1330 [15:38:55<4:56:41, 27.43s/it] 51%|█████▏    | 682/1330 [15:39:28<5:12:07, 28.90s/it] 51%|█████▏    | 683/1330 [15:39:54<5:02:06, 28.02s/it] 51%|█████▏    | 684/1330 [15:41:00<7:04:45, 39.45s/it] 52%|█████▏    | 685/1330 [15:41:27<6:25:46, 35.89s/it] 52%|█████▏    | 686/1330 [15:44:23<13:54:35, 77.76s/it] 52%|█████▏    | 687/1330 [15:44:45<10:56:00, 61.21s/it] 52%|█████▏    | 688/1330 [15:46:08<12:02:49, 67.55s/it] 52%|█████▏    | 689/1330 [15:46:40<10:07:43, 56.89s/it] 52%|█████▏    | 690/1330 [15:47:23<9:23:26, 52.82s/it]  52%|█████▏    | 691/1330 [15:48:19<9:31:58, 53.71s/it] 52%|█████▏    | 692/1330 [15:48:44<7:59:25, 45.09s/it] 52%|█████▏    | 693/1330 [15:49:12<7:04:43, 40.01s/it] 52%|█████▏    | 694/1330 [15:49:41<6:27:30, 36.56s/it] 52%|█████▏    | 695/1330 [15:50:26<6:55:44, 39.28s/it] 52%|█████▏    | 696/1330 [15:52:32<11:28:41, 65.18s/it] 52%|█████▏    | 697/1330 [15:53:02<9:38:39, 54.85s/it]  52%|█████▏    | 698/1330 [15:53:44<8:56:12, 50.91s/it] 53%|█████▎    | 699/1330 [15:54:15<7:50:57, 44.78s/it] 53%|█████▎    | 700/1330 [15:54:39<6:44:26, 38.52s/it] 53%|█████▎    | 701/1330 [15:55:13<6:32:22, 37.43s/it] 53%|█████▎    | 702/1330 [15:55:38<5:50:17, 33.47s/it] 53%|█████▎    | 703/1330 [15:56:11<5:49:13, 33.42s/it] 53%|█████▎    | 704/1330 [15:56:36<5:23:14, 30.98s/it] 53%|█████▎    | 705/1330 [15:57:02<5:07:32, 29.52s/it] 53%|█████▎    | 706/1330 [15:59:55<12:33:29, 72.45s/it] 53%|█████▎    | 707/1330 [16:00:19<10:00:32, 57.84s/it] 53%|█████▎    | 708/1330 [16:00:51<8:39:52, 50.15s/it]  53%|█████▎    | 709/1330 [16:01:21<7:36:17, 44.09s/it] 53%|█████▎    | 710/1330 [16:01:57<7:09:39, 41.58s/it] 53%|█████▎    | 711/1330 [16:02:45<7:28:24, 43.46s/it] 54%|█████▎    | 712/1330 [16:03:12<6:37:47, 38.62s/it] 54%|█████▎    | 713/1330 [16:03:34<5:46:07, 33.66s/it] 54%|█████▎    | 714/1330 [16:04:10<5:54:15, 34.51s/it] 54%|█████▍    | 715/1330 [16:06:44<11:59:17, 70.17s/it] 54%|█████▍    | 716/1330 [16:07:05<9:29:11, 55.62s/it]  54%|█████▍    | 717/1330 [16:07:31<7:55:24, 46.53s/it] 54%|█████▍    | 718/1330 [16:07:55<6:46:19, 39.84s/it] 54%|█████▍    | 719/1330 [16:08:18<5:54:39, 34.83s/it] 54%|█████▍    | 720/1330 [16:08:44<5:27:55, 32.26s/it] 54%|█████▍    | 721/1330 [16:09:21<5:42:01, 33.70s/it] 54%|█████▍    | 722/1330 [16:09:59<5:54:35, 34.99s/it] 54%|█████▍    | 723/1330 [16:10:22<5:17:22, 31.37s/it] 54%|█████▍    | 724/1330 [16:11:04<5:48:58, 34.55s/it] 55%|█████▍    | 725/1330 [16:11:47<6:13:46, 37.07s/it] 55%|█████▍    | 726/1330 [16:12:03<5:09:15, 30.72s/it] 55%|█████▍    | 727/1330 [16:12:36<5:15:09, 31.36s/it] 55%|█████▍    | 728/1330 [16:13:04<5:04:09, 30.31s/it] 55%|█████▍    | 729/1330 [16:13:36<5:08:44, 30.82s/it] 55%|█████▍    | 730/1330 [16:14:07<5:10:10, 31.02s/it] 55%|█████▍    | 731/1330 [16:14:33<4:53:54, 29.44s/it] 55%|█████▌    | 732/1330 [16:15:01<4:48:48, 28.98s/it] 55%|█████▌    | 733/1330 [16:15:26<4:35:19, 27.67s/it] 55%|█████▌    | 734/1330 [16:15:46<4:14:19, 25.60s/it] 55%|█████▌    | 735/1330 [16:16:06<3:56:28, 23.85s/it] 55%|█████▌    | 736/1330 [16:16:43<4:35:52, 27.87s/it] 55%|█████▌    | 737/1330 [16:17:22<5:06:17, 30.99s/it] 55%|█████▌    | 738/1330 [16:17:54<5:10:49, 31.50s/it] 56%|█████▌    | 739/1330 [16:18:16<4:40:56, 28.52s/it] 56%|█████▌    | 740/1330 [16:18:43<4:36:06, 28.08s/it] 56%|█████▌    | 741/1330 [16:19:03<4:12:10, 25.69s/it] 56%|█████▌    | 742/1330 [16:19:47<5:04:28, 31.07s/it] 56%|█████▌    | 743/1330 [16:20:13<4:48:18, 29.47s/it] 56%|█████▌    | 744/1330 [16:20:34<4:25:00, 27.13s/it] 56%|█████▌    | 745/1330 [16:21:15<5:03:37, 31.14s/it] 56%|█████▌    | 746/1330 [16:21:53<5:23:50, 33.27s/it] 56%|█████▌    | 747/1330 [16:22:26<5:22:54, 33.23s/it] 56%|█████▌    | 748/1330 [16:22:49<4:51:01, 30.00s/it] 56%|█████▋    | 749/1330 [16:23:26<5:10:50, 32.10s/it] 56%|█████▋    | 750/1330 [16:23:57<5:07:47, 31.84s/it] 56%|█████▋    | 751/1330 [16:24:23<4:51:29, 30.21s/it] 57%|█████▋    | 752/1330 [16:24:49<4:38:00, 28.86s/it] 57%|█████▋    | 753/1330 [16:25:12<4:20:14, 27.06s/it] 57%|█████▋    | 754/1330 [16:25:31<3:56:35, 24.65s/it] 57%|█████▋    | 755/1330 [16:27:11<7:33:35, 47.33s/it] 57%|█████▋    | 756/1330 [16:27:22<5:49:12, 36.50s/it] 57%|█████▋    | 757/1330 [16:28:00<5:53:26, 37.01s/it] 57%|█████▋    | 758/1330 [16:28:20<5:03:17, 31.81s/it] 57%|█████▋    | 759/1330 [16:28:47<4:49:49, 30.45s/it] 57%|█████▋    | 760/1330 [16:29:23<5:04:08, 32.02s/it] 57%|█████▋    | 761/1330 [16:29:59<5:13:41, 33.08s/it] 57%|█████▋    | 762/1330 [16:30:39<5:34:37, 35.35s/it] 57%|█████▋    | 763/1330 [16:30:59<4:49:04, 30.59s/it] 57%|█████▋    | 764/1330 [16:31:14<4:04:39, 25.94s/it] 58%|█████▊    | 765/1330 [16:31:45<4:19:16, 27.53s/it] 58%|█████▊    | 766/1330 [16:32:08<4:04:33, 26.02s/it] 58%|█████▊    | 767/1330 [16:35:37<12:41:33, 81.16s/it] 58%|█████▊    | 768/1330 [16:35:59<9:53:48, 63.40s/it]  58%|█████▊    | 769/1330 [16:36:29<8:18:13, 53.29s/it] 58%|█████▊    | 770/1330 [16:36:53<6:54:25, 44.40s/it] 58%|█████▊    | 771/1330 [16:37:14<5:48:51, 37.44s/it] 58%|█████▊    | 772/1330 [16:37:49<5:40:59, 36.67s/it] 58%|█████▊    | 773/1330 [16:39:02<7:23:01, 47.72s/it] 58%|█████▊    | 774/1330 [16:39:22<6:03:11, 39.19s/it] 58%|█████▊    | 775/1330 [16:39:38<4:58:33, 32.28s/it] 58%|█████▊    | 776/1330 [16:39:56<4:18:47, 28.03s/it] 58%|█████▊    | 777/1330 [16:40:22<4:13:52, 27.54s/it] 58%|█████▊    | 778/1330 [16:40:42<3:53:09, 25.34s/it] 59%|█████▊    | 779/1330 [16:41:13<4:07:34, 26.96s/it] 59%|█████▊    | 780/1330 [16:41:58<4:56:06, 32.30s/it] 59%|█████▊    | 781/1330 [16:42:14<4:10:39, 27.39s/it] 59%|█████▉    | 782/1330 [16:42:43<4:14:10, 27.83s/it] 59%|█████▉    | 783/1330 [16:43:17<4:31:13, 29.75s/it] 59%|█████▉    | 784/1330 [16:43:35<3:58:24, 26.20s/it] 59%|█████▉    | 785/1330 [16:44:07<4:12:47, 27.83s/it] 59%|█████▉    | 786/1330 [16:44:21<3:36:51, 23.92s/it] 59%|█████▉    | 787/1330 [16:44:39<3:20:32, 22.16s/it] 59%|█████▉    | 788/1330 [16:45:01<3:17:24, 21.85s/it] 59%|█████▉    | 789/1330 [16:45:15<2:55:41, 19.49s/it] 59%|█████▉    | 790/1330 [16:47:18<7:36:53, 50.77s/it] 59%|█████▉    | 791/1330 [16:47:36<6:07:23, 40.90s/it] 60%|█████▉    | 792/1330 [16:48:03<5:28:29, 36.63s/it] 60%|█████▉    | 793/1330 [16:48:17<4:28:42, 30.02s/it] 60%|█████▉    | 794/1330 [16:48:33<3:50:07, 25.76s/it] 60%|█████▉    | 795/1330 [16:49:04<4:04:15, 27.39s/it] 60%|█████▉    | 796/1330 [16:49:21<3:34:30, 24.10s/it] 60%|█████▉    | 797/1330 [16:49:49<3:45:21, 25.37s/it] 60%|██████    | 798/1330 [16:50:15<3:46:00, 25.49s/it] 60%|██████    | 799/1330 [16:51:06<4:53:49, 33.20s/it] 60%|██████    | 800/1330 [16:51:48<5:16:56, 35.88s/it] 60%|██████    | 801/1330 [16:52:27<5:23:19, 36.67s/it] 60%|██████    | 802/1330 [16:58:56<20:54:35, 142.57s/it] 60%|██████    | 803/1330 [17:00:25<18:29:07, 126.28s/it] 60%|██████    | 804/1330 [17:01:18<15:15:23, 104.42s/it] 61%|██████    | 805/1330 [17:03:32<16:30:22, 113.19s/it] 61%|██████    | 806/1330 [17:05:17<16:07:39, 110.80s/it] 61%|██████    | 807/1330 [17:06:21<14:02:19, 96.63s/it]  61%|██████    | 808/1330 [17:07:14<12:08:18, 83.71s/it] 61%|██████    | 809/1330 [17:08:09<10:52:40, 75.16s/it] 61%|██████    | 810/1330 [17:09:17<10:31:04, 72.82s/it] 61%|██████    | 811/1330 [17:10:52<11:28:48, 79.63s/it] 61%|██████    | 812/1330 [17:12:10<11:23:25, 79.16s/it] 61%|██████    | 813/1330 [17:13:46<12:05:40, 84.22s/it] 61%|██████    | 814/1330 [17:15:04<11:46:49, 82.19s/it] 61%|██████▏   | 815/1330 [17:16:18<11:24:03, 79.70s/it] 61%|██████▏   | 816/1330 [17:18:02<12:24:53, 86.95s/it] 61%|██████▏   | 817/1330 [17:19:00<11:09:36, 78.32s/it] 62%|██████▏   | 818/1330 [17:20:30<11:38:53, 81.90s/it] 62%|██████▏   | 819/1330 [17:21:17<10:09:25, 71.56s/it] 62%|██████▏   | 820/1330 [17:22:03<9:03:10, 63.90s/it]  62%|██████▏   | 821/1330 [17:22:43<7:59:08, 56.48s/it] 62%|██████▏   | 822/1330 [17:24:32<10:12:45, 72.37s/it] 62%|██████▏   | 823/1330 [17:25:53<10:33:43, 75.00s/it] 62%|██████▏   | 824/1330 [17:29:42<17:01:40, 121.15s/it] 62%|██████▏   | 825/1330 [17:31:10<15:36:48, 111.30s/it] 62%|██████▏   | 826/1330 [17:32:09<13:23:17, 95.63s/it]  62%|██████▏   | 827/1330 [17:33:30<12:43:03, 91.02s/it] 62%|██████▏   | 828/1330 [17:34:52<12:20:31, 88.51s/it] 62%|██████▏   | 829/1330 [17:38:14<17:02:28, 122.45s/it] 62%|██████▏   | 830/1330 [17:39:17<14:31:15, 104.55s/it] 62%|██████▏   | 831/1330 [17:40:14<12:31:22, 90.35s/it]  63%|██████▎   | 832/1330 [17:41:31<11:56:01, 86.27s/it] 63%|██████▎   | 833/1330 [17:42:33<10:54:23, 79.00s/it] 63%|██████▎   | 834/1330 [17:43:32<10:03:27, 73.00s/it] 63%|██████▎   | 835/1330 [17:44:31<9:28:15, 68.88s/it]  63%|██████▎   | 836/1330 [17:45:14<8:22:54, 61.08s/it] 63%|██████▎   | 837/1330 [17:46:10<8:10:23, 59.68s/it] 63%|██████▎   | 838/1330 [17:47:09<8:07:58, 59.51s/it] 63%|██████▎   | 839/1330 [17:50:17<13:22:17, 98.04s/it] 63%|██████▎   | 840/1330 [17:51:22<11:58:26, 87.97s/it] 63%|██████▎   | 841/1330 [17:52:47<11:50:23, 87.16s/it] 63%|██████▎   | 842/1330 [17:53:30<10:00:46, 73.87s/it] 63%|██████▎   | 843/1330 [17:55:15<11:15:29, 83.22s/it] 63%|██████▎   | 844/1330 [17:58:42<16:15:41, 120.46s/it] 64%|██████▎   | 845/1330 [18:00:44<16:16:29, 120.80s/it] 64%|██████▎   | 846/1330 [18:01:38<13:31:54, 100.65s/it] 64%|██████▎   | 847/1330 [18:02:36<11:47:30, 87.89s/it]  64%|██████▍   | 848/1330 [18:03:32<10:29:13, 78.33s/it] 64%|██████▍   | 849/1330 [18:05:04<11:01:06, 82.47s/it] 64%|██████▍   | 850/1330 [18:06:10<10:20:46, 77.60s/it] 64%|██████▍   | 851/1330 [18:08:38<13:08:20, 98.75s/it] 64%|██████▍   | 852/1330 [18:09:41<11:40:44, 87.96s/it] 64%|██████▍   | 853/1330 [18:12:30<14:51:31, 112.14s/it] 64%|██████▍   | 854/1330 [18:13:43<13:18:03, 100.60s/it] 64%|██████▍   | 855/1330 [18:14:47<11:48:15, 89.47s/it]  64%|██████▍   | 856/1330 [18:15:38<10:16:37, 78.05s/it] 64%|██████▍   | 857/1330 [18:16:37<9:29:14, 72.21s/it]  65%|██████▍   | 858/1330 [18:22:00<19:20:32, 147.53s/it] 65%|██████▍   | 859/1330 [18:23:09<16:13:29, 124.01s/it] 65%|██████▍   | 860/1330 [18:24:00<13:18:50, 101.98s/it] 65%|██████▍   | 861/1330 [18:25:04<11:49:31, 90.77s/it]  65%|██████▍   | 862/1330 [18:25:54<10:12:25, 78.52s/it] 65%|██████▍   | 863/1330 [18:26:50<9:17:33, 71.63s/it]  65%|██████▍   | 864/1330 [18:27:31<8:05:15, 62.48s/it] 65%|██████▌   | 865/1330 [18:29:12<9:32:49, 73.91s/it] 65%|██████▌   | 866/1330 [18:30:02<8:37:32, 66.92s/it] 65%|██████▌   | 867/1330 [18:31:43<9:55:09, 77.13s/it] 65%|██████▌   | 868/1330 [18:32:44<9:16:19, 72.25s/it] 65%|██████▌   | 869/1330 [18:34:02<9:29:33, 74.13s/it] 65%|██████▌   | 870/1330 [18:35:11<9:14:33, 72.33s/it] 65%|██████▌   | 871/1330 [18:36:05<8:33:08, 67.08s/it] 66%|██████▌   | 872/1330 [18:37:38<9:30:16, 74.71s/it] 66%|██████▌   | 873/1330 [18:38:35<8:48:11, 69.35s/it] 66%|██████▌   | 874/1330 [18:42:25<14:54:41, 117.72s/it] 66%|██████▌   | 875/1330 [18:43:21<12:32:24, 99.22s/it]  66%|██████▌   | 876/1330 [18:44:13<10:42:21, 84.89s/it] 66%|██████▌   | 877/1330 [18:46:11<11:56:28, 94.90s/it] 66%|██████▌   | 878/1330 [18:47:23<11:02:29, 87.94s/it] 66%|██████▌   | 879/1330 [18:48:57<11:14:19, 89.71s/it] 66%|██████▌   | 880/1330 [18:50:33<11:26:44, 91.57s/it] 66%|██████▌   | 881/1330 [18:51:49<10:50:48, 86.97s/it] 66%|██████▋   | 882/1330 [18:52:29<9:04:12, 72.88s/it]  66%|██████▋   | 883/1330 [18:58:16<19:16:48, 155.28s/it] 66%|██████▋   | 884/1330 [19:02:33<23:00:43, 185.75s/it] 67%|██████▋   | 885/1330 [19:03:46<18:45:52, 151.80s/it] 67%|██████▋   | 886/1330 [19:04:56<15:41:27, 127.22s/it] 67%|██████▋   | 887/1330 [19:05:43<12:43:29, 103.41s/it] 67%|██████▋   | 888/1330 [19:06:37<10:50:51, 88.35s/it]  67%|██████▋   | 889/1330 [19:07:15<8:59:14, 73.37s/it]  67%|██████▋   | 890/1330 [19:08:13<8:24:36, 68.81s/it] 67%|██████▋   | 891/1330 [19:09:48<9:19:35, 76.48s/it] 67%|██████▋   | 892/1330 [19:11:27<10:08:25, 83.35s/it] 67%|██████▋   | 893/1330 [19:13:23<11:18:50, 93.20s/it] 67%|██████▋   | 894/1330 [19:14:43<10:48:01, 89.18s/it] 67%|██████▋   | 895/1330 [19:15:38<9:32:05, 78.91s/it]  67%|██████▋   | 896/1330 [19:16:17<8:04:29, 66.98s/it] 67%|██████▋   | 897/1330 [19:16:58<7:07:08, 59.19s/it] 68%|██████▊   | 898/1330 [19:17:39<6:27:39, 53.84s/it] 68%|██████▊   | 899/1330 [19:23:19<16:42:53, 139.61s/it] 68%|██████▊   | 900/1330 [19:24:09<13:26:56, 112.60s/it] 68%|██████▊   | 901/1330 [19:25:43<12:46:13, 107.16s/it] 68%|██████▊   | 902/1330 [19:26:24<10:21:58, 87.19s/it]  68%|██████▊   | 903/1330 [19:28:34<11:52:22, 100.10s/it] 68%|██████▊   | 904/1330 [19:29:57<11:14:30, 95.00s/it]  68%|██████▊   | 905/1330 [19:30:47<9:36:13, 81.35s/it]  68%|██████▊   | 906/1330 [19:32:08<9:34:57, 81.36s/it] 68%|██████▊   | 907/1330 [19:33:22<9:18:28, 79.22s/it] 68%|██████▊   | 908/1330 [19:34:02<7:52:54, 67.24s/it] 68%|██████▊   | 909/1330 [19:34:38<6:47:24, 58.06s/it] 68%|██████▊   | 910/1330 [19:35:17<6:05:40, 52.24s/it] 68%|██████▊   | 911/1330 [19:36:00<5:45:22, 49.46s/it] 69%|██████▊   | 912/1330 [19:36:41<5:27:23, 46.99s/it] 69%|██████▊   | 913/1330 [19:38:00<6:32:10, 56.43s/it] 69%|██████▊   | 914/1330 [19:38:51<6:19:55, 54.80s/it] 69%|██████▉   | 915/1330 [19:39:50<6:29:25, 56.30s/it] 69%|██████▉   | 916/1330 [19:41:17<7:30:23, 65.27s/it] 69%|██████▉   | 917/1330 [19:42:21<7:27:22, 64.99s/it] 69%|██████▉   | 918/1330 [19:43:55<8:26:21, 73.74s/it] 69%|██████▉   | 919/1330 [19:45:06<8:18:47, 72.82s/it] 69%|██████▉   | 920/1330 [19:45:48<7:14:22, 63.57s/it] 69%|██████▉   | 921/1330 [19:47:37<8:46:05, 77.18s/it] 69%|██████▉   | 922/1330 [19:48:18<7:30:57, 66.32s/it] 69%|██████▉   | 923/1330 [19:49:27<7:35:24, 67.14s/it] 69%|██████▉   | 924/1330 [19:50:35<7:36:35, 67.48s/it] 70%|██████▉   | 925/1330 [19:51:14<6:37:53, 58.95s/it] 70%|██████▉   | 926/1330 [19:52:00<6:10:31, 55.03s/it] 70%|██████▉   | 927/1330 [19:53:59<8:18:10, 74.17s/it] 70%|██████▉   | 928/1330 [19:55:03<7:58:03, 71.35s/it] 70%|██████▉   | 929/1330 [19:56:07<7:40:39, 68.93s/it] 70%|██████▉   | 930/1330 [19:56:54<6:55:18, 62.30s/it] 70%|███████   | 931/1330 [19:57:41<6:24:09, 57.77s/it] 70%|███████   | 932/1330 [19:58:29<6:03:34, 54.81s/it] 70%|███████   | 933/1330 [19:59:50<6:55:23, 62.78s/it] 70%|███████   | 934/1330 [20:01:29<8:06:20, 73.69s/it] 70%|███████   | 935/1330 [20:04:41<11:58:04, 109.07s/it] 70%|███████   | 936/1330 [20:11:13<21:13:50, 193.99s/it] 70%|███████   | 937/1330 [20:12:17<16:55:58, 155.11s/it] 71%|███████   | 938/1330 [20:13:05<13:22:31, 122.84s/it] 71%|███████   | 939/1330 [20:14:25<11:57:38, 110.12s/it] 71%|███████   | 940/1330 [20:15:36<10:39:48, 98.43s/it]  71%|███████   | 941/1330 [20:16:58<10:04:46, 93.28s/it] 71%|███████   | 942/1330 [20:17:43<8:31:02, 79.03s/it]  71%|███████   | 943/1330 [20:19:35<9:32:14, 88.72s/it] 71%|███████   | 944/1330 [20:20:43<8:50:46, 82.50s/it] 71%|███████   | 945/1330 [20:21:25<7:32:10, 70.47s/it] 71%|███████   | 946/1330 [20:21:56<6:15:05, 58.61s/it] 71%|███████   | 947/1330 [20:22:33<5:33:01, 52.17s/it] 71%|███████▏  | 948/1330 [20:30:33<19:08:00, 180.32s/it] 71%|███████▏  | 949/1330 [20:31:25<15:01:33, 141.98s/it] 71%|███████▏  | 950/1330 [20:32:42<12:55:41, 122.48s/it] 72%|███████▏  | 951/1330 [20:33:45<11:00:01, 104.49s/it] 72%|███████▏  | 952/1330 [20:35:09<10:19:46, 98.38s/it]  72%|███████▏  | 953/1330 [20:36:28<9:42:48, 92.75s/it]  72%|███████▏  | 954/1330 [20:37:13<8:10:07, 78.21s/it] 72%|███████▏  | 955/1330 [20:38:10<7:29:38, 71.94s/it] 72%|███████▏  | 956/1330 [20:38:57<6:42:26, 64.56s/it] 72%|███████▏  | 957/1330 [20:40:58<8:26:08, 81.42s/it] 72%|███████▏  | 958/1330 [20:42:17<8:19:51, 80.62s/it] 72%|███████▏  | 959/1330 [20:43:35<8:14:49, 80.02s/it] 72%|███████▏  | 960/1330 [20:44:36<7:37:09, 74.13s/it] 72%|███████▏  | 961/1330 [20:46:02<7:57:54, 77.71s/it] 72%|███████▏  | 962/1330 [20:46:53<7:08:01, 69.79s/it] 72%|███████▏  | 963/1330 [20:47:41<6:26:14, 63.15s/it] 72%|███████▏  | 964/1330 [20:48:25<5:51:02, 57.55s/it] 73%|███████▎  | 965/1330 [20:49:03<5:13:14, 51.49s/it] 73%|███████▎  | 966/1330 [20:50:11<5:42:25, 56.44s/it] 73%|███████▎  | 967/1330 [20:51:28<6:18:38, 62.59s/it] 73%|███████▎  | 968/1330 [20:52:01<5:24:16, 53.75s/it] 73%|███████▎  | 969/1330 [20:52:42<5:01:19, 50.08s/it] 73%|███████▎  | 970/1330 [20:53:14<4:27:12, 44.53s/it] 73%|███████▎  | 971/1330 [20:54:02<4:32:14, 45.50s/it] 73%|███████▎  | 972/1330 [20:54:34<4:08:44, 41.69s/it] 73%|███████▎  | 973/1330 [20:55:02<3:42:15, 37.35s/it] 73%|███████▎  | 974/1330 [20:55:52<4:04:33, 41.22s/it] 73%|███████▎  | 975/1330 [20:56:30<3:58:44, 40.35s/it] 73%|███████▎  | 976/1330 [21:01:46<12:05:16, 122.93s/it] 73%|███████▎  | 977/1330 [21:03:19<11:11:26, 114.13s/it] 74%|███████▎  | 978/1330 [21:03:54<8:49:43, 90.29s/it]   74%|███████▎  | 979/1330 [21:04:30<7:12:59, 74.02s/it] 74%|███████▎  | 980/1330 [21:05:29<6:45:24, 69.50s/it] 74%|███████▍  | 981/1330 [21:06:14<6:01:04, 62.08s/it] 74%|███████▍  | 982/1330 [21:07:26<6:17:44, 65.13s/it] 74%|███████▍  | 983/1330 [21:08:03<5:27:23, 56.61s/it] 74%|███████▍  | 984/1330 [21:08:37<4:47:59, 49.94s/it] 74%|███████▍  | 985/1330 [21:08:59<3:58:15, 41.44s/it] 74%|███████▍  | 986/1330 [21:09:36<3:50:31, 40.21s/it] 74%|███████▍  | 987/1330 [21:10:10<3:38:40, 38.25s/it] 74%|███████▍  | 988/1330 [21:11:59<5:39:02, 59.48s/it] 74%|███████▍  | 989/1330 [21:12:41<5:08:29, 54.28s/it] 74%|███████▍  | 990/1330 [21:13:25<4:50:33, 51.28s/it] 75%|███████▍  | 991/1330 [21:13:59<4:20:09, 46.04s/it] 75%|███████▍  | 992/1330 [21:15:03<4:49:33, 51.40s/it] 75%|███████▍  | 993/1330 [21:15:29<4:05:30, 43.71s/it] 75%|███████▍  | 994/1330 [21:16:18<4:14:06, 45.38s/it] 75%|███████▍  | 995/1330 [21:16:48<3:47:33, 40.76s/it] 75%|███████▍  | 996/1330 [21:17:18<3:28:41, 37.49s/it] 75%|███████▍  | 997/1330 [21:17:55<3:26:50, 37.27s/it] 75%|███████▌  | 998/1330 [21:18:27<3:18:15, 35.83s/it] 75%|███████▌  | 999/1330 [21:19:09<3:28:12, 37.74s/it] 75%|███████▌  | 1000/1330 [21:19:48<3:29:05, 38.02s/it] 75%|███████▌  | 1001/1330 [21:20:20<3:19:09, 36.32s/it] 75%|███████▌  | 1002/1330 [21:20:58<3:21:12, 36.81s/it] 75%|███████▌  | 1003/1330 [21:21:51<3:45:52, 41.44s/it] 75%|███████▌  | 1004/1330 [21:23:08<4:44:42, 52.40s/it] 76%|███████▌  | 1005/1330 [21:23:46<4:18:53, 47.79s/it] 76%|███████▌  | 1006/1330 [21:24:43<4:33:12, 50.59s/it] 76%|███████▌  | 1007/1330 [21:28:06<8:38:21, 96.29s/it] 76%|███████▌  | 1008/1330 [21:29:12<7:48:27, 87.29s/it] 76%|███████▌  | 1009/1330 [21:29:54<6:34:52, 73.81s/it] 76%|███████▌  | 1010/1330 [21:30:39<5:47:41, 65.19s/it] 76%|███████▌  | 1011/1330 [21:31:29<5:22:02, 60.57s/it] 76%|███████▌  | 1012/1330 [21:32:25<5:13:48, 59.21s/it] 76%|███████▌  | 1013/1330 [21:33:48<5:50:27, 66.33s/it] 76%|███████▌  | 1014/1330 [21:34:25<5:02:17, 57.40s/it] 76%|███████▋  | 1015/1330 [21:34:55<4:18:29, 49.24s/it] 76%|███████▋  | 1016/1330 [21:35:20<3:39:12, 41.89s/it] 76%|███████▋  | 1017/1330 [21:37:20<5:41:06, 65.39s/it] 77%|███████▋  | 1018/1330 [21:38:45<6:10:37, 71.28s/it] 77%|███████▋  | 1019/1330 [21:42:43<10:29:12, 121.39s/it] 77%|███████▋  | 1020/1330 [21:43:26<8:26:14, 97.98s/it]   77%|███████▋  | 1021/1330 [21:44:11<7:02:46, 82.09s/it] 77%|███████▋  | 1022/1330 [21:46:21<8:15:04, 96.44s/it] 77%|███████▋  | 1023/1330 [21:47:13<7:04:28, 82.96s/it] 77%|███████▋  | 1024/1330 [21:47:52<5:55:52, 69.78s/it] 77%|███████▋  | 1025/1330 [21:48:30<5:06:25, 60.28s/it] 77%|███████▋  | 1026/1330 [21:49:06<4:28:24, 52.98s/it] 77%|███████▋  | 1027/1330 [21:50:34<5:20:26, 63.45s/it] 77%|███████▋  | 1028/1330 [21:56:38<12:53:39, 153.71s/it] 77%|███████▋  | 1029/1330 [21:57:20<10:02:39, 120.13s/it] 77%|███████▋  | 1030/1330 [21:58:58<9:28:06, 113.62s/it]  78%|███████▊  | 1031/1330 [22:00:29<8:51:38, 106.68s/it] 78%|███████▊  | 1032/1330 [22:01:16<7:21:30, 88.89s/it]  78%|███████▊  | 1033/1330 [22:02:35<7:04:24, 85.74s/it] 78%|███████▊  | 1034/1330 [22:03:28<6:15:01, 76.02s/it] 78%|███████▊  | 1035/1330 [22:04:08<5:21:08, 65.32s/it] 78%|███████▊  | 1036/1330 [22:04:50<4:44:54, 58.14s/it] 78%|███████▊  | 1037/1330 [22:05:35<4:25:09, 54.30s/it] 78%|███████▊  | 1038/1330 [22:06:24<4:16:38, 52.74s/it] 78%|███████▊  | 1039/1330 [22:07:34<4:40:42, 57.88s/it] 78%|███████▊  | 1040/1330 [22:08:44<4:57:33, 61.56s/it] 78%|███████▊  | 1041/1330 [22:09:42<4:50:22, 60.29s/it] 78%|███████▊  | 1042/1330 [22:10:49<5:00:25, 62.59s/it] 78%|███████▊  | 1043/1330 [22:12:14<5:31:16, 69.26s/it] 78%|███████▊  | 1044/1330 [22:14:20<6:50:34, 86.14s/it] 79%|███████▊  | 1045/1330 [22:15:59<7:08:19, 90.17s/it] 79%|███████▊  | 1046/1330 [22:17:58<7:47:11, 98.70s/it] 79%|███████▊  | 1047/1330 [22:22:17<11:31:59, 146.71s/it] 79%|███████▉  | 1048/1330 [22:22:56<8:57:31, 114.37s/it]  79%|███████▉  | 1049/1330 [22:23:25<6:56:17, 88.89s/it]  79%|███████▉  | 1050/1330 [22:24:01<5:40:30, 72.97s/it] 79%|███████▉  | 1051/1330 [22:24:38<4:49:20, 62.22s/it] 79%|███████▉  | 1052/1330 [22:25:16<4:14:48, 55.00s/it] 79%|███████▉  | 1053/1330 [22:32:07<12:27:19, 161.88s/it] 79%|███████▉  | 1054/1330 [22:32:45<9:33:24, 124.65s/it]  79%|███████▉  | 1055/1330 [22:33:49<8:07:15, 106.31s/it] 79%|███████▉  | 1056/1330 [22:34:15<6:16:06, 82.36s/it]  79%|███████▉  | 1057/1330 [22:35:07<5:32:52, 73.16s/it] 80%|███████▉  | 1058/1330 [22:35:41<4:38:33, 61.44s/it] 80%|███████▉  | 1059/1330 [22:36:47<4:43:17, 62.72s/it] 80%|███████▉  | 1060/1330 [22:38:03<5:00:35, 66.80s/it] 80%|███████▉  | 1061/1330 [22:39:06<4:53:49, 65.54s/it] 80%|███████▉  | 1062/1330 [22:39:45<4:18:12, 57.81s/it] 80%|███████▉  | 1063/1330 [22:40:20<3:46:35, 50.92s/it] 80%|████████  | 1064/1330 [22:41:21<3:58:13, 53.74s/it] 80%|████████  | 1065/1330 [22:41:58<3:35:13, 48.73s/it] 80%|████████  | 1066/1330 [22:42:42<3:29:06, 47.52s/it] 80%|████████  | 1067/1330 [22:44:18<4:31:21, 61.91s/it] 80%|████████  | 1068/1330 [22:45:01<4:06:25, 56.43s/it] 80%|████████  | 1069/1330 [22:45:45<3:48:25, 52.51s/it] 80%|████████  | 1070/1330 [22:46:36<3:46:10, 52.20s/it] 81%|████████  | 1071/1330 [22:48:40<5:17:41, 73.60s/it] 81%|████████  | 1072/1330 [22:49:47<5:07:39, 71.55s/it] 81%|████████  | 1073/1330 [22:50:51<4:57:20, 69.42s/it] 81%|████████  | 1074/1330 [22:51:33<4:21:30, 61.29s/it] 81%|████████  | 1075/1330 [22:52:09<3:48:02, 53.66s/it] 81%|████████  | 1076/1330 [22:53:23<4:12:55, 59.75s/it] 81%|████████  | 1077/1330 [22:54:26<4:15:54, 60.69s/it] 81%|████████  | 1078/1330 [22:55:18<4:03:40, 58.02s/it] 81%|████████  | 1079/1330 [22:56:00<3:42:33, 53.20s/it] 81%|████████  | 1080/1330 [22:56:37<3:22:00, 48.48s/it] 81%|████████▏ | 1081/1330 [22:57:10<3:01:44, 43.79s/it] 81%|████████▏ | 1082/1330 [22:57:43<2:47:19, 40.48s/it] 81%|████████▏ | 1083/1330 [22:58:17<2:38:31, 38.51s/it] 82%|████████▏ | 1084/1330 [22:59:56<3:52:45, 56.77s/it] 82%|████████▏ | 1085/1330 [23:00:59<3:59:42, 58.70s/it] 82%|████████▏ | 1086/1330 [23:01:36<3:32:22, 52.22s/it] 82%|████████▏ | 1087/1330 [23:02:28<3:30:54, 52.08s/it] 82%|████████▏ | 1088/1330 [23:04:52<5:20:53, 79.56s/it] 82%|████████▏ | 1089/1330 [23:05:36<4:36:23, 68.81s/it] 82%|████████▏ | 1090/1330 [23:06:06<3:49:10, 57.29s/it] 82%|████████▏ | 1091/1330 [23:07:48<4:41:53, 70.77s/it] 82%|████████▏ | 1092/1330 [23:08:34<4:10:47, 63.22s/it] 82%|████████▏ | 1093/1330 [23:10:11<4:49:23, 73.26s/it] 82%|████████▏ | 1094/1330 [23:11:34<5:00:11, 76.32s/it] 82%|████████▏ | 1095/1330 [23:12:25<4:28:59, 68.68s/it] 82%|████████▏ | 1096/1330 [23:13:18<4:09:21, 63.94s/it] 82%|████████▏ | 1097/1330 [23:14:17<4:03:13, 62.63s/it] 83%|████████▎ | 1098/1330 [23:15:12<3:52:27, 60.12s/it] 83%|████████▎ | 1099/1330 [23:16:41<4:25:44, 69.02s/it] 83%|████████▎ | 1100/1330 [23:17:36<4:08:23, 64.80s/it] 83%|████████▎ | 1101/1330 [23:18:13<3:35:11, 56.38s/it] 83%|████████▎ | 1102/1330 [23:19:14<3:38:55, 57.61s/it] 83%|████████▎ | 1103/1330 [23:22:40<6:27:13, 102.35s/it] 83%|████████▎ | 1104/1330 [23:23:35<5:31:45, 88.08s/it]  83%|████████▎ | 1105/1330 [23:24:28<4:50:28, 77.46s/it] 83%|████████▎ | 1106/1330 [23:25:54<4:58:36, 79.99s/it] 83%|████████▎ | 1107/1330 [23:26:53<4:33:54, 73.70s/it] 83%|████████▎ | 1108/1330 [23:27:48<4:12:10, 68.16s/it] 83%|████████▎ | 1109/1330 [23:28:28<3:40:24, 59.84s/it] 83%|████████▎ | 1110/1330 [23:31:10<5:31:33, 90.42s/it] 84%|████████▎ | 1111/1330 [23:32:01<4:46:58, 78.62s/it] 84%|████████▎ | 1112/1330 [23:33:05<4:29:49, 74.26s/it] 84%|████████▎ | 1113/1330 [23:34:01<4:08:58, 68.84s/it] 84%|████████▍ | 1114/1330 [23:35:30<4:28:45, 74.65s/it] 84%|████████▍ | 1115/1330 [23:36:25<4:06:34, 68.81s/it] 84%|████████▍ | 1116/1330 [23:37:15<3:44:57, 63.07s/it] 84%|████████▍ | 1117/1330 [23:37:59<3:24:20, 57.56s/it] 84%|████████▍ | 1118/1330 [23:38:35<3:00:25, 51.06s/it] 84%|████████▍ | 1119/1330 [23:39:15<2:47:56, 47.75s/it] 84%|████████▍ | 1120/1330 [23:39:55<2:39:16, 45.51s/it] 84%|████████▍ | 1121/1330 [23:40:32<2:29:22, 42.88s/it] 84%|████████▍ | 1122/1330 [23:42:28<3:44:06, 64.65s/it] 84%|████████▍ | 1123/1330 [23:43:37<3:48:14, 66.16s/it] 85%|████████▍ | 1124/1330 [23:44:24<3:26:57, 60.28s/it] 85%|████████▍ | 1125/1330 [23:49:17<7:24:10, 130.00s/it] 85%|████████▍ | 1126/1330 [23:50:03<5:57:13, 105.07s/it] 85%|████████▍ | 1127/1330 [23:50:39<4:44:39, 84.14s/it]  85%|████████▍ | 1128/1330 [23:51:24<4:04:06, 72.51s/it] 85%|████████▍ | 1129/1330 [23:52:01<3:27:05, 61.82s/it] 85%|████████▍ | 1130/1330 [23:53:22<3:45:17, 67.59s/it] 85%|████████▌ | 1131/1330 [23:54:16<3:30:14, 63.39s/it] 85%|████████▌ | 1132/1330 [23:55:04<3:14:20, 58.89s/it] 85%|████████▌ | 1133/1330 [23:56:45<3:55:08, 71.62s/it] 85%|████████▌ | 1134/1330 [23:57:25<3:22:48, 62.08s/it] 85%|████████▌ | 1135/1330 [23:58:19<3:13:18, 59.48s/it] 85%|████████▌ | 1136/1330 [24:01:14<5:05:04, 94.35s/it] 85%|████████▌ | 1137/1330 [24:01:54<4:10:47, 77.97s/it] 86%|████████▌ | 1138/1330 [24:03:57<4:52:12, 91.31s/it] 86%|████████▌ | 1139/1330 [24:05:03<4:27:04, 83.90s/it] 86%|████████▌ | 1140/1330 [24:06:15<4:14:28, 80.36s/it] 86%|████████▌ | 1141/1330 [24:07:14<3:53:12, 74.04s/it] 86%|████████▌ | 1142/1330 [24:08:23<3:46:25, 72.26s/it] 86%|████████▌ | 1143/1330 [24:09:18<3:29:03, 67.08s/it] 86%|████████▌ | 1144/1330 [24:09:48<2:53:27, 55.95s/it] 86%|████████▌ | 1145/1330 [24:10:33<2:42:22, 52.66s/it] 86%|████████▌ | 1146/1330 [24:13:02<4:10:26, 81.67s/it] 86%|████████▌ | 1147/1330 [24:16:48<6:21:07, 124.96s/it] 86%|████████▋ | 1148/1330 [24:23:52<10:51:19, 214.72s/it] 86%|████████▋ | 1149/1330 [24:25:14<8:47:54, 175.00s/it]  86%|████████▋ | 1150/1330 [24:25:39<6:29:36, 129.87s/it] 87%|████████▋ | 1151/1330 [24:26:07<4:56:02, 99.23s/it]  87%|████████▋ | 1152/1330 [24:27:11<4:23:02, 88.66s/it] 87%|████████▋ | 1153/1330 [24:27:50<3:38:15, 73.98s/it] 87%|████████▋ | 1154/1330 [24:28:14<2:52:28, 58.80s/it] 87%|████████▋ | 1155/1330 [24:30:24<3:53:39, 80.11s/it] 87%|████████▋ | 1156/1330 [24:30:50<3:05:43, 64.04s/it] 87%|████████▋ | 1157/1330 [24:31:23<2:37:19, 54.56s/it] 87%|████████▋ | 1158/1330 [24:31:54<2:16:17, 47.54s/it] 87%|████████▋ | 1159/1330 [24:32:28<2:03:44, 43.42s/it] 87%|████████▋ | 1160/1330 [24:33:08<2:00:14, 42.44s/it] 87%|████████▋ | 1161/1330 [24:33:29<1:41:46, 36.13s/it] 87%|████████▋ | 1162/1330 [24:33:53<1:30:36, 32.36s/it] 87%|████████▋ | 1163/1330 [24:34:33<1:37:01, 34.86s/it] 88%|████████▊ | 1164/1330 [24:35:28<1:52:33, 40.68s/it] 88%|████████▊ | 1165/1330 [24:35:59<1:43:49, 37.75s/it] 88%|████████▊ | 1166/1330 [24:36:23<1:31:57, 33.65s/it] 88%|████████▊ | 1167/1330 [24:36:39<1:17:11, 28.42s/it] 88%|████████▊ | 1168/1330 [24:36:59<1:10:14, 26.01s/it] 88%|████████▊ | 1169/1330 [24:37:25<1:09:38, 25.95s/it] 88%|████████▊ | 1170/1330 [24:37:45<1:04:19, 24.12s/it] 88%|████████▊ | 1171/1330 [24:38:09<1:04:00, 24.16s/it] 88%|████████▊ | 1172/1330 [24:38:34<1:04:05, 24.34s/it] 88%|████████▊ | 1173/1330 [24:39:05<1:09:00, 26.37s/it] 88%|████████▊ | 1174/1330 [24:39:24<1:03:03, 24.25s/it] 88%|████████▊ | 1175/1330 [24:39:49<1:02:56, 24.37s/it] 88%|████████▊ | 1176/1330 [24:40:08<58:44, 22.89s/it]   88%|████████▊ | 1177/1330 [24:40:37<1:02:26, 24.49s/it] 89%|████████▊ | 1178/1330 [24:41:00<1:01:06, 24.12s/it] 89%|████████▊ | 1179/1330 [24:41:26<1:02:33, 24.86s/it] 89%|████████▊ | 1180/1330 [24:42:55<1:49:38, 43.86s/it] 89%|████████▉ | 1181/1330 [24:43:13<1:29:47, 36.16s/it] 89%|████████▉ | 1182/1330 [24:43:39<1:21:30, 33.04s/it] 89%|████████▉ | 1183/1330 [24:43:59<1:11:36, 29.23s/it] 89%|████████▉ | 1184/1330 [24:44:20<1:05:20, 26.85s/it] 89%|████████▉ | 1185/1330 [24:44:35<56:22, 23.33s/it]   89%|████████▉ | 1186/1330 [24:45:15<1:07:52, 28.28s/it] 89%|████████▉ | 1187/1330 [24:45:37<1:02:44, 26.32s/it] 89%|████████▉ | 1188/1330 [24:45:54<55:51, 23.61s/it]   89%|████████▉ | 1189/1330 [24:46:38<1:09:32, 29.60s/it] 89%|████████▉ | 1190/1330 [24:47:01<1:04:25, 27.61s/it] 90%|████████▉ | 1191/1330 [24:47:25<1:01:55, 26.73s/it] 90%|████████▉ | 1192/1330 [24:47:52<1:01:23, 26.69s/it] 90%|████████▉ | 1193/1330 [24:48:08<53:43, 23.53s/it]   90%|████████▉ | 1194/1330 [24:49:56<1:50:56, 48.94s/it] 90%|████████▉ | 1195/1330 [24:50:20<1:33:01, 41.34s/it] 90%|████████▉ | 1196/1330 [24:50:43<1:20:09, 35.89s/it] 90%|█████████ | 1197/1330 [24:51:17<1:18:01, 35.20s/it] 90%|█████████ | 1198/1330 [24:51:35<1:05:54, 29.96s/it] 90%|█████████ | 1199/1330 [24:51:56<59:51, 27.42s/it]   90%|█████████ | 1200/1330 [24:52:19<56:47, 26.21s/it] 90%|█████████ | 1201/1330 [24:52:37<50:28, 23.47s/it] 90%|█████████ | 1202/1330 [24:54:11<1:35:19, 44.69s/it] 90%|█████████ | 1203/1330 [24:54:28<1:17:12, 36.48s/it] 91%|█████████ | 1204/1330 [24:54:44<1:03:23, 30.19s/it] 91%|█████████ | 1205/1330 [24:55:04<57:03, 27.39s/it]   91%|█████████ | 1206/1330 [24:55:26<52:43, 25.51s/it] 91%|█████████ | 1207/1330 [24:55:48<50:42, 24.74s/it] 91%|█████████ | 1208/1330 [24:56:31<1:01:16, 30.14s/it] 91%|█████████ | 1209/1330 [24:56:51<54:15, 26.91s/it]   91%|█████████ | 1210/1330 [24:57:23<57:06, 28.55s/it] 91%|█████████ | 1211/1330 [24:57:49<54:54, 27.68s/it] 91%|█████████ | 1212/1330 [24:58:15<53:38, 27.28s/it] 91%|█████████ | 1213/1330 [24:58:40<51:39, 26.49s/it] 91%|█████████▏| 1214/1330 [24:58:59<47:05, 24.36s/it] 91%|█████████▏| 1215/1330 [24:59:24<47:21, 24.71s/it] 91%|█████████▏| 1216/1330 [24:59:45<44:36, 23.48s/it] 92%|█████████▏| 1217/1330 [25:01:54<1:43:32, 54.98s/it] 92%|█████████▏| 1218/1330 [25:02:29<1:31:29, 49.01s/it] 92%|█████████▏| 1219/1330 [25:02:55<1:18:07, 42.23s/it] 92%|█████████▏| 1220/1330 [25:03:09<1:01:43, 33.67s/it] 92%|█████████▏| 1221/1330 [25:03:31<54:50, 30.19s/it]   92%|█████████▏| 1222/1330 [25:03:42<44:09, 24.53s/it] 92%|█████████▏| 1223/1330 [25:04:08<44:19, 24.86s/it] 92%|█████████▏| 1224/1330 [25:04:40<47:47, 27.06s/it] 92%|█████████▏| 1225/1330 [25:08:45<2:41:36, 92.35s/it] 92%|█████████▏| 1226/1330 [25:09:07<2:03:28, 71.23s/it] 92%|█████████▏| 1227/1330 [25:09:23<1:34:08, 54.84s/it] 92%|█████████▏| 1228/1330 [25:09:38<1:12:39, 42.74s/it] 92%|█████████▏| 1229/1330 [25:09:55<58:55, 35.00s/it]   92%|█████████▏| 1230/1330 [25:10:20<53:19, 31.99s/it] 93%|█████████▎| 1231/1330 [25:10:49<51:27, 31.19s/it] 93%|█████████▎| 1232/1330 [25:10:58<40:13, 24.63s/it] 93%|█████████▎| 1233/1330 [25:12:36<1:15:08, 46.48s/it] 93%|█████████▎| 1234/1330 [25:12:52<59:57, 37.47s/it]   93%|█████████▎| 1235/1330 [25:13:11<50:32, 31.92s/it] 93%|█████████▎| 1236/1330 [25:14:32<1:13:02, 46.62s/it] 93%|█████████▎| 1237/1330 [25:14:52<59:52, 38.63s/it]   93%|█████████▎| 1238/1330 [25:15:08<48:40, 31.75s/it] 93%|█████████▎| 1239/1330 [25:15:24<41:11, 27.15s/it] 93%|█████████▎| 1240/1330 [25:15:49<39:39, 26.44s/it] 93%|█████████▎| 1241/1330 [25:16:24<43:10, 29.11s/it] 93%|█████████▎| 1242/1330 [25:16:41<37:06, 25.30s/it] 93%|█████████▎| 1243/1330 [25:17:01<34:35, 23.86s/it] 94%|█████████▎| 1244/1330 [25:17:42<41:21, 28.85s/it] 94%|█████████▎| 1245/1330 [25:18:02<37:23, 26.40s/it] 94%|█████████▎| 1246/1330 [25:18:18<32:38, 23.31s/it] 94%|█████████▍| 1247/1330 [25:18:32<28:17, 20.45s/it] 94%|█████████▍| 1248/1330 [25:18:47<25:26, 18.61s/it] 94%|█████████▍| 1249/1330 [25:19:01<23:28, 17.38s/it] 94%|█████████▍| 1250/1330 [25:19:25<25:46, 19.33s/it] 94%|█████████▍| 1251/1330 [25:20:18<38:45, 29.44s/it] 94%|█████████▍| 1252/1330 [25:20:38<34:33, 26.58s/it] 94%|█████████▍| 1253/1330 [25:20:46<26:57, 21.01s/it] 94%|█████████▍| 1254/1330 [25:21:05<25:48, 20.38s/it] 94%|█████████▍| 1255/1330 [25:21:26<25:46, 20.62s/it] 94%|█████████▍| 1256/1330 [25:21:46<25:11, 20.43s/it] 95%|█████████▍| 1257/1330 [25:22:12<26:51, 22.08s/it] 95%|█████████▍| 1258/1330 [25:22:29<24:34, 20.47s/it] 95%|█████████▍| 1259/1330 [25:22:51<24:58, 21.11s/it] 95%|█████████▍| 1260/1330 [25:23:08<23:09, 19.85s/it] 95%|█████████▍| 1261/1330 [25:23:21<20:23, 17.74s/it] 95%|█████████▍| 1262/1330 [25:24:07<29:52, 26.37s/it] 95%|█████████▍| 1263/1330 [25:24:20<24:52, 22.27s/it] 95%|█████████▌| 1264/1330 [25:24:36<22:18, 20.27s/it] 95%|█████████▌| 1265/1330 [25:24:57<22:18, 20.60s/it] 95%|█████████▌| 1266/1330 [25:25:15<21:08, 19.82s/it] 95%|█████████▌| 1267/1330 [25:25:29<19:00, 18.11s/it] 95%|█████████▌| 1268/1330 [25:25:58<22:06, 21.39s/it] 95%|█████████▌| 1269/1330 [25:26:13<19:47, 19.47s/it] 95%|█████████▌| 1270/1330 [25:26:35<20:04, 20.07s/it] 96%|█████████▌| 1271/1330 [25:26:46<17:14, 17.54s/it] 96%|█████████▌| 1272/1330 [25:27:00<15:41, 16.23s/it] 96%|█████████▌| 1273/1330 [25:28:20<33:40, 35.44s/it] 96%|█████████▌| 1274/1330 [25:28:34<27:00, 28.94s/it] 96%|█████████▌| 1275/1330 [25:28:48<22:27, 24.50s/it] 96%|█████████▌| 1276/1330 [25:29:05<20:04, 22.31s/it] 96%|█████████▌| 1277/1330 [25:29:42<23:34, 26.69s/it] 96%|█████████▌| 1278/1330 [25:29:54<19:18, 22.29s/it] 96%|█████████▌| 1279/1330 [25:30:07<16:40, 19.61s/it] 96%|█████████▌| 1280/1330 [25:30:25<15:44, 18.90s/it] 96%|█████████▋| 1281/1330 [25:30:38<14:01, 17.17s/it] 96%|█████████▋| 1282/1330 [25:30:54<13:36, 17.02s/it] 96%|█████████▋| 1283/1330 [25:33:37<47:30, 60.64s/it] 97%|█████████▋| 1284/1330 [25:35:38<1:00:28, 78.87s/it] 97%|█████████▋| 1285/1330 [25:35:56<45:31, 60.71s/it]   97%|█████████▋| 1286/1330 [25:36:20<36:15, 49.44s/it] 97%|█████████▋| 1287/1330 [25:36:30<27:01, 37.71s/it] 97%|█████████▋| 1288/1330 [25:36:48<22:13, 31.74s/it] 97%|█████████▋| 1289/1330 [25:37:21<21:53, 32.04s/it] 97%|█████████▋| 1290/1330 [25:38:17<26:19, 39.50s/it] 97%|█████████▋| 1291/1330 [25:38:52<24:45, 38.09s/it] 97%|█████████▋| 1292/1330 [25:39:37<25:19, 39.98s/it] 97%|█████████▋| 1293/1330 [25:39:56<20:52, 33.84s/it] 97%|█████████▋| 1294/1330 [25:40:14<17:24, 29.02s/it] 97%|█████████▋| 1295/1330 [25:40:34<15:19, 26.28s/it] 97%|█████████▋| 1296/1330 [25:40:50<13:08, 23.18s/it] 98%|█████████▊| 1297/1330 [25:41:08<12:00, 21.82s/it] 98%|█████████▊| 1298/1330 [25:41:25<10:43, 20.11s/it] 98%|█████████▊| 1299/1330 [25:41:45<10:31, 20.37s/it] 98%|█████████▊| 1300/1330 [25:42:15<11:31, 23.04s/it] 98%|█████████▊| 1300/1330 [25:43:04<35:36, 71.22s/it]╭───────────────────── Traceback (most recent call last) ──────────────────────╮│ /rds/homes/g/gaddcz/Projects/CPRD/examples/data/study_data/build_dataset.py: ││ 37 in <module>                                                               ││                                                                              ││   34 │   print(OmegaConf.to_yaml(cfg))                                       ││   35 │                                                                       ││   36 │   # Build                                                             ││ ❱ 37 │   dm = FoundationalDataModule(path_to_db=cfg.data.path_to_db,         ││   38 │   │   │   │   │   │   │   │   path_to_ds=cfg.data.path_to_ds,         ││   39 │   │   │   │   │   │   │   │   load=False,                             ││   40 │   │   │   │   │   │   │   │   include_diagnoses=True,                 ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/foundational_loader.py:116 in         ││ __init__                                                                     ││                                                                              ││   113 │   │   # Get the DL friendly representation, either by loading or bui ││   114 │   │   if load is False:                                              ││   115 │   │   │   polars_dataset = PolarsDataset(path_to_db=path_to_db)      ││ ❱ 116 │   │   │   polars_dataset.fit(path=path_to_ds,                        ││   117 │   │   │   │   │   │   │      overwrite_practice_ids=overwrite_practi ││   118 │   │   │   │   │   │   │      overwrite_meta_information=overwrite_me ││   119 │   │   │   │   │   │   │      **kwargs)                               ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:132 in fit  ││                                                                              ││   129 │   │   │   assert not any(path.iterdir()), [_ for _ in path.iterdir() ││   130 │   │   │                                                              ││   131 │   │   │   logging.info(f"Writing {split_name} split into a DL friend ││ ❱ 132 │   │   │   self._write_parquet_dl_dataset(save_path=path,             ││   133 │   │   │   │   │   │   │   │   │   │      split_ids=split_ids,        ││   134 │   │   │   │   │   │   │   │   │   │      include_diagnoses = include ││   135 │   │   │   │   │   │   │   │   │   │      include_measurements = incl ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:187 in      ││ _write_parquet_dl_dataset                                                    ││                                                                              ││   184 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │      ││   185 │   │                                                                  ││   186 │   │   total_samples = 0                                              ││ ❱ 187 │   │   for _idx, (chunk_name, lazy_table_frames_dict) in enumerate(tq ││   188 │   │   │                                                              ││   189 │   │   │   # Merge the lazy polars tables provided by the generator i ││   190 │   │   │   lazy_batch = self.collector._collate_lazy_tables(lazy_tabl ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/tqdm/4.64.0-GCCcore-11.3.0/lib/python3 ││ .10/site-packages/tqdm/std.py:1195 in __iter__                               ││                                                                              ││   1192 │   │   time = self._time                                             ││   1193 │   │                                                                 ││   1194 │   │   try:                                                          ││ ❱ 1195 │   │   │   for obj in iterable:                                      ││   1196 │   │   │   │   yield obj                                             ││   1197 │   │   │   │   # Update and possibly print the progressbar.          ││   1198 │   │   │   │   # Note: does not call self.update(1) for speed optimi ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/collector.py:194 in           ││ _generate_lazy_by_distinct                                                   ││                                                                              ││   191 │   │   │   │   │   │   query += f"AND {conditions[idx_table]}"        ││   192 │   │   │   │                                                          ││   193 │   │   │   │   logging.debug(f"Query: {query[:120] if len(query) > 12 ││ ❱ 194 │   │   │   │   df = pl.read_database(query=query, connection_uri=self ││   195 │   │   │   │                                                          ││   196 │   │   │   │   if len(df) > 0:                                        ││   197 │   │   │   │   │   rows_by_table["lazy_" + table] = df.lazy()         ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:95 in read_database                   ││                                                                              ││    92 │                                                                      ││    93 │   """                                                                ││    94 │   if engine == "connectorx":                                         ││ ❱  95 │   │   return _read_sql_connectorx(                                   ││    96 │   │   │   query,                                                     ││    97 │   │   │   connection_uri,                                            ││    98 │   │   │   partition_on=partition_on,                                 ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:222 in _read_sql_connectorx           ││                                                                              ││   219 │   │   │   "connectorx is not installed. Please run `pip install conn ││   220 │   │   ) from None                                                    ││   221 │                                                                      ││ ❱ 222 │   tbl = cx.read_sql(                                                 ││   223 │   │   conn=connection_uri,                                           ││   224 │   │   query=query,                                                   ││   225 │   │   return_type="arrow2",                                          ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/connectorx/__init__.py:257 in read_sql                      ││                                                                              ││   254 │   │   except ModuleNotFoundError:                                    ││   255 │   │   │   raise ValueError("You need to install pyarrow first")      ││   256 │   │                                                                  ││ ❱ 257 │   │   result = _read_sql(                                            ││   258 │   │   │   conn,                                                      ││   259 │   │   │   "arrow" if return_type in {"arrow", "polars"} else "arrow2 ││   260 │   │   │   queries=queries,                                           │╰──────────────────────────────────────────────────────────────────────────────╯RuntimeError: timed out waiting for connectionGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.is_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: Noneoptim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [00:49<18:19:37, 49.64s/it]  0%|          | 2/1330 [02:13<25:42:34, 69.70s/it]  0%|          | 3/1330 [02:49<20:07:08, 54.58s/it]  0%|          | 4/1330 [03:28<17:46:58, 48.28s/it]  0%|          | 5/1330 [04:05<16:12:06, 44.02s/it]  0%|          | 6/1330 [04:30<13:52:40, 37.73s/it]  1%|          | 7/1330 [04:56<12:24:58, 33.79s/it]  1%|          | 8/1330 [05:18<11:04:03, 30.14s/it]  1%|          | 9/1330 [05:49<11:10:46, 30.47s/it]  1%|          | 10/1330 [06:24<11:39:02, 31.77s/it]  1%|          | 11/1330 [06:54<11:23:29, 31.09s/it]  1%|          | 12/1330 [07:15<10:20:10, 28.23s/it]  1%|          | 13/1330 [07:42<10:08:27, 27.72s/it]  1%|          | 14/1330 [08:09<10:04:49, 27.58s/it]  1%|          | 15/1330 [08:34<9:47:55, 26.83s/it]   1%|          | 16/1330 [09:32<13:11:59, 36.16s/it]  1%|▏         | 17/1330 [10:02<12:28:33, 34.21s/it]  1%|▏         | 18/1330 [10:39<12:48:28, 35.14s/it]  1%|▏         | 19/1330 [11:06<11:54:38, 32.71s/it]  2%|▏         | 20/1330 [11:42<12:15:53, 33.71s/it]  2%|▏         | 21/1330 [12:20<12:44:55, 35.06s/it]  2%|▏         | 22/1330 [13:57<19:31:11, 53.72s/it]  2%|▏         | 23/1330 [14:15<15:32:15, 42.80s/it]  2%|▏         | 24/1330 [14:26<12:06:50, 33.39s/it]  2%|▏         | 25/1330 [14:38<9:43:47, 26.84s/it]   2%|▏         | 26/1330 [14:55<8:42:05, 24.02s/it]  2%|▏         | 27/1330 [15:15<8:11:55, 22.65s/it]  2%|▏         | 28/1330 [15:34<7:49:30, 21.64s/it]  2%|▏         | 29/1330 [15:57<7:58:54, 22.09s/it]  2%|▏         | 30/1330 [16:21<8:07:25, 22.50s/it]  2%|▏         | 31/1330 [16:49<8:47:50, 24.38s/it]  2%|▏         | 32/1330 [17:00<7:21:04, 20.39s/it]  2%|▏         | 33/1330 [17:15<6:41:43, 18.58s/it]  3%|▎         | 34/1330 [17:25<5:48:05, 16.12s/it]  3%|▎         | 35/1330 [17:49<6:40:57, 18.58s/it]  3%|▎         | 36/1330 [18:07<6:35:13, 18.33s/it]  3%|▎         | 37/1330 [18:25<6:30:21, 18.11s/it]  3%|▎         | 38/1330 [18:45<6:45:35, 18.84s/it]  3%|▎         | 39/1330 [18:57<5:58:05, 16.64s/it]  3%|▎         | 40/1330 [19:17<6:23:36, 17.84s/it]  3%|▎         | 41/1330 [19:34<6:14:23, 17.43s/it]  3%|▎         | 42/1330 [20:51<12:41:24, 35.47s/it]  3%|▎         | 43/1330 [21:05<10:21:37, 28.98s/it]  3%|▎         | 44/1330 [21:31<10:02:41, 28.12s/it]  3%|▎         | 45/1330 [21:54<9:24:04, 26.34s/it]   3%|▎         | 46/1330 [22:04<7:40:25, 21.52s/it]  4%|▎         | 47/1330 [25:22<26:33:44, 74.53s/it]  4%|▎         | 48/1330 [26:08<23:31:22, 66.05s/it]  4%|▎         | 49/1330 [26:35<19:20:29, 54.36s/it]  4%|▍         | 50/1330 [27:00<16:06:05, 45.29s/it]  4%|▍         | 51/1330 [27:17<13:06:13, 36.88s/it]  4%|▍         | 52/1330 [27:47<12:23:34, 34.91s/it]  4%|▍         | 53/1330 [28:05<10:35:34, 29.86s/it]  4%|▍         | 54/1330 [29:01<13:22:34, 37.74s/it]  4%|▍         | 55/1330 [29:12<10:30:25, 29.67s/it]  4%|▍         | 56/1330 [29:35<9:43:28, 27.48s/it]   4%|▍         | 57/1330 [30:04<9:56:00, 28.09s/it]  4%|▍         | 58/1330 [30:28<9:25:49, 26.69s/it]  4%|▍         | 59/1330 [30:42<8:08:57, 23.08s/it]  5%|▍         | 60/1330 [31:07<8:20:17, 23.64s/it]  5%|▍         | 61/1330 [31:21<7:16:26, 20.64s/it]  5%|▍         | 62/1330 [31:43<7:25:46, 21.09s/it]  5%|▍         | 63/1330 [32:33<10:29:02, 29.79s/it]  5%|▍         | 64/1330 [32:56<9:47:18, 27.83s/it]   5%|▍         | 65/1330 [33:06<7:52:58, 22.43s/it]  5%|▍         | 66/1330 [33:32<8:16:30, 23.57s/it]  5%|▌         | 67/1330 [34:03<8:58:57, 25.60s/it]  5%|▌         | 68/1330 [34:26<8:41:19, 24.79s/it]  5%|▌         | 69/1330 [34:43<7:52:37, 22.49s/it]  5%|▌         | 70/1330 [35:03<7:37:45, 21.80s/it]  5%|▌         | 71/1330 [35:16<6:44:14, 19.26s/it]  5%|▌         | 72/1330 [35:47<7:54:33, 22.63s/it]  5%|▌         | 73/1330 [36:10<7:55:44, 22.71s/it]  6%|▌         | 74/1330 [36:37<8:22:22, 24.00s/it]  6%|▌         | 75/1330 [36:57<7:57:59, 22.85s/it]  6%|▌         | 76/1330 [37:18<7:45:22, 22.27s/it]  6%|▌         | 77/1330 [37:50<8:46:07, 25.19s/it]  6%|▌         | 78/1330 [38:06<7:50:18, 22.54s/it]  6%|▌         | 79/1330 [38:26<7:32:05, 21.68s/it]  6%|▌         | 80/1330 [38:48<7:34:30, 21.82s/it]  6%|▌         | 81/1330 [39:09<7:29:08, 21.58s/it]  6%|▌         | 82/1330 [39:26<7:02:21, 20.31s/it]  6%|▌         | 83/1330 [40:26<11:06:51, 32.09s/it]  6%|▋         | 84/1330 [40:37<8:57:00, 25.86s/it]   6%|▋         | 85/1330 [40:46<7:11:01, 20.77s/it]  6%|▋         | 86/1330 [40:58<6:13:28, 18.01s/it]  7%|▋         | 87/1330 [41:22<6:50:28, 19.81s/it]  7%|▋         | 88/1330 [41:51<7:49:04, 22.66s/it]  7%|▋         | 89/1330 [42:06<6:59:31, 20.28s/it]  7%|▋         | 90/1330 [44:46<21:30:44, 62.45s/it]  7%|▋         | 91/1330 [45:26<19:05:13, 55.46s/it]  7%|▋         | 92/1330 [45:35<14:20:33, 41.71s/it]  7%|▋         | 93/1330 [45:55<12:04:48, 35.16s/it]  7%|▋         | 94/1330 [46:12<10:13:53, 29.80s/it]  7%|▋         | 95/1330 [46:32<9:10:21, 26.74s/it]   7%|▋         | 96/1330 [46:52<8:26:54, 24.65s/it]  7%|▋         | 97/1330 [47:21<8:54:21, 26.00s/it]  7%|▋         | 98/1330 [48:03<10:31:29, 30.75s/it]  7%|▋         | 99/1330 [48:24<9:30:30, 27.81s/it]   8%|▊         | 100/1330 [48:43<8:37:45, 25.26s/it]  8%|▊         | 101/1330 [49:31<10:56:14, 32.04s/it]  8%|▊         | 102/1330 [49:51<9:42:18, 28.45s/it]   8%|▊         | 103/1330 [51:23<16:12:24, 47.55s/it]  8%|▊         | 104/1330 [51:39<12:56:49, 38.02s/it]  8%|▊         | 105/1330 [52:02<11:23:35, 33.48s/it]  8%|▊         | 106/1330 [52:16<9:25:39, 27.73s/it]   8%|▊         | 107/1330 [53:29<13:59:53, 41.21s/it]  8%|▊         | 108/1330 [53:50<11:58:20, 35.27s/it]  8%|▊         | 109/1330 [54:14<10:45:40, 31.73s/it]  8%|▊         | 110/1330 [54:29<9:06:06, 26.86s/it]   8%|▊         | 111/1330 [55:02<9:41:31, 28.62s/it]  8%|▊         | 112/1330 [56:34<16:08:42, 47.72s/it]  8%|▊         | 113/1330 [56:49<12:48:59, 37.91s/it]  9%|▊         | 114/1330 [57:21<12:12:40, 36.15s/it]  9%|▊         | 115/1330 [57:38<10:15:46, 30.41s/it]  9%|▊         | 116/1330 [58:19<11:17:16, 33.47s/it]  9%|▉         | 117/1330 [58:42<10:17:14, 30.53s/it]  9%|▉         | 118/1330 [59:04<9:19:36, 27.70s/it]   9%|▉         | 119/1330 [59:25<8:38:07, 25.67s/it]  9%|▉         | 120/1330 [1:01:06<16:16:03, 48.40s/it]  9%|▉         | 121/1330 [1:01:25<13:17:04, 39.56s/it]  9%|▉         | 122/1330 [1:01:44<11:14:57, 33.52s/it]  9%|▉         | 123/1330 [1:02:06<10:02:35, 29.95s/it]  9%|▉         | 124/1330 [1:03:19<14:23:13, 42.95s/it]  9%|▉         | 125/1330 [1:03:57<13:51:46, 41.42s/it]  9%|▉         | 126/1330 [1:04:11<11:07:28, 33.26s/it] 10%|▉         | 127/1330 [1:04:29<9:33:04, 28.58s/it]  10%|▉         | 128/1330 [1:05:23<12:07:22, 36.31s/it] 10%|▉         | 129/1330 [1:05:40<10:07:06, 30.33s/it] 10%|▉         | 130/1330 [1:06:03<9:22:23, 28.12s/it]  10%|▉         | 131/1330 [1:06:23<8:33:54, 25.72s/it] 10%|▉         | 132/1330 [1:07:23<11:59:28, 36.03s/it] 10%|█         | 133/1330 [1:09:38<21:50:08, 65.67s/it] 10%|█         | 134/1330 [1:10:00<17:29:08, 52.63s/it] 10%|█         | 135/1330 [1:10:25<14:41:55, 44.28s/it] 10%|█         | 136/1330 [1:10:43<12:04:21, 36.40s/it] 10%|█         | 137/1330 [1:11:09<11:03:14, 33.36s/it] 10%|█         | 138/1330 [1:11:32<10:00:30, 30.23s/it] 10%|█         | 139/1330 [1:12:00<9:47:26, 29.59s/it]  11%|█         | 140/1330 [1:12:23<9:10:16, 27.74s/it] 11%|█         | 141/1330 [1:12:39<7:56:05, 24.03s/it] 11%|█         | 142/1330 [1:13:08<8:26:54, 25.60s/it] 11%|█         | 143/1330 [1:13:41<9:10:06, 27.81s/it] 11%|█         | 144/1330 [1:14:16<9:54:38, 30.08s/it] 11%|█         | 145/1330 [1:16:09<18:02:16, 54.80s/it] 11%|█         | 146/1330 [1:16:50<16:40:27, 50.70s/it] 11%|█         | 147/1330 [1:17:47<17:17:53, 52.64s/it] 11%|█         | 148/1330 [1:18:33<16:36:41, 50.59s/it] 11%|█         | 149/1330 [1:19:29<17:09:43, 52.31s/it] 11%|█▏        | 150/1330 [1:20:07<15:44:38, 48.03s/it] 11%|█▏        | 151/1330 [1:20:28<13:03:15, 39.86s/it] 11%|█▏        | 152/1330 [1:20:49<11:09:16, 34.09s/it] 12%|█▏        | 153/1330 [1:21:09<9:46:52, 29.92s/it]  12%|█▏        | 154/1330 [1:21:28<8:41:13, 26.59s/it] 12%|█▏        | 155/1330 [1:21:57<8:58:25, 27.49s/it] 12%|█▏        | 156/1330 [1:22:34<9:48:58, 30.10s/it] 12%|█▏        | 157/1330 [1:22:58<9:16:06, 28.45s/it] 12%|█▏        | 158/1330 [1:23:29<9:27:37, 29.06s/it] 12%|█▏        | 159/1330 [1:23:53<9:02:34, 27.80s/it] 12%|█▏        | 160/1330 [1:24:11<8:03:17, 24.78s/it] 12%|█▏        | 161/1330 [1:24:25<6:59:50, 21.55s/it] 12%|█▏        | 162/1330 [1:24:44<6:41:42, 20.64s/it] 12%|█▏        | 163/1330 [1:28:16<25:17:17, 78.01s/it] 12%|█▏        | 164/1330 [1:28:43<20:20:48, 62.82s/it] 12%|█▏        | 165/1330 [1:29:15<17:22:46, 53.71s/it] 12%|█▏        | 166/1330 [1:29:51<15:34:51, 48.19s/it] 13%|█▎        | 167/1330 [1:30:13<13:04:56, 40.50s/it] 13%|█▎        | 168/1330 [1:30:38<11:32:53, 35.78s/it] 13%|█▎        | 169/1330 [1:31:04<10:36:02, 32.87s/it] 13%|█▎        | 170/1330 [1:31:35<10:21:33, 32.15s/it] 13%|█▎        | 171/1330 [1:32:02<9:52:24, 30.67s/it]  13%|█▎        | 172/1330 [1:32:40<10:33:26, 32.82s/it] 13%|█▎        | 173/1330 [1:33:03<9:39:37, 30.06s/it]  13%|█▎        | 174/1330 [1:33:33<9:37:57, 30.00s/it] 13%|█▎        | 175/1330 [1:33:53<8:36:31, 26.83s/it] 13%|█▎        | 176/1330 [1:34:19<8:36:09, 26.84s/it] 13%|█▎        | 177/1330 [1:34:39<7:55:41, 24.75s/it] 13%|█▎        | 178/1330 [1:34:53<6:52:54, 21.51s/it] 13%|█▎        | 179/1330 [1:35:25<7:53:26, 24.68s/it] 14%|█▎        | 180/1330 [1:35:43<7:13:22, 22.61s/it] 14%|█▎        | 181/1330 [1:36:05<7:09:50, 22.45s/it] 14%|█▎        | 182/1330 [1:36:36<7:59:56, 25.08s/it] 14%|█▍        | 183/1330 [1:38:57<19:03:46, 59.83s/it] 14%|█▍        | 184/1330 [1:40:01<19:25:08, 61.00s/it] 14%|█▍        | 185/1330 [1:40:50<18:13:52, 57.32s/it] 14%|█▍        | 186/1330 [1:41:53<18:44:40, 58.99s/it] 14%|█▍        | 187/1330 [1:42:55<19:00:15, 59.86s/it] 14%|█▍        | 188/1330 [1:43:42<17:46:20, 56.02s/it] 14%|█▍        | 189/1330 [1:44:36<17:38:25, 55.66s/it] 14%|█▍        | 190/1330 [1:45:42<18:32:41, 58.56s/it] 14%|█▍        | 191/1330 [1:47:18<22:05:35, 69.83s/it] 14%|█▍        | 192/1330 [1:48:19<21:14:40, 67.21s/it] 15%|█▍        | 193/1330 [1:51:02<30:17:52, 95.93s/it] 15%|█▍        | 194/1330 [1:52:08<27:28:34, 87.07s/it] 15%|█▍        | 195/1330 [1:53:08<24:50:58, 78.82s/it] 15%|█▍        | 196/1330 [1:54:04<22:38:59, 71.90s/it] 15%|█▍        | 197/1330 [1:56:08<27:33:45, 87.58s/it] 15%|█▍        | 198/1330 [1:57:08<24:57:55, 79.40s/it] 15%|█▍        | 199/1330 [2:05:44<66:02:56, 210.24s/it] 15%|█▌        | 200/1330 [2:09:28<67:21:36, 214.60s/it] 15%|█▌        | 201/1330 [2:11:39<59:26:24, 189.53s/it] 15%|█▌        | 202/1330 [2:13:56<54:26:17, 173.74s/it] 15%|█▌        | 203/1330 [2:15:07<44:44:14, 142.91s/it] 15%|█▌        | 204/1330 [2:16:08<36:57:43, 118.17s/it] 15%|█▌        | 205/1330 [2:16:58<30:32:09, 97.71s/it]  15%|█▌        | 206/1330 [2:17:44<25:40:53, 82.25s/it] 16%|█▌        | 207/1330 [2:24:06<53:40:37, 172.07s/it] 16%|█▌        | 208/1330 [2:25:22<44:38:58, 143.26s/it] 16%|█▌        | 209/1330 [2:26:08<35:32:22, 114.13s/it] 16%|█▌        | 210/1330 [2:26:53<29:06:27, 93.56s/it]  16%|█▌        | 211/1330 [2:28:08<27:18:24, 87.85s/it] 16%|█▌        | 212/1330 [2:28:58<23:47:57, 76.63s/it] 16%|█▌        | 213/1330 [2:29:50<21:25:33, 69.05s/it] 16%|█▌        | 214/1330 [2:30:43<19:57:55, 64.40s/it] 16%|█▌        | 215/1330 [2:31:33<18:36:33, 60.08s/it] 16%|█▌        | 216/1330 [2:32:49<20:03:37, 64.83s/it] 16%|█▋        | 217/1330 [2:33:54<20:01:25, 64.77s/it] 16%|█▋        | 218/1330 [2:35:01<20:13:23, 65.47s/it] 16%|█▋        | 219/1330 [2:42:24<55:09:16, 178.72s/it] 17%|█▋        | 220/1330 [2:43:20<43:46:17, 141.96s/it] 17%|█▋        | 221/1330 [2:45:56<44:59:18, 146.04s/it] 17%|█▋        | 222/1330 [2:46:57<37:08:04, 120.65s/it] 17%|█▋        | 223/1330 [2:50:48<47:16:57, 153.77s/it] 17%|█▋        | 224/1330 [2:51:38<37:38:39, 122.53s/it] 17%|█▋        | 225/1330 [2:52:21<30:18:24, 98.74s/it]  17%|█▋        | 226/1330 [2:55:46<40:01:00, 130.49s/it] 17%|█▋        | 227/1330 [2:57:00<34:47:42, 113.57s/it] 17%|█▋        | 228/1330 [2:58:24<32:04:55, 104.81s/it] 17%|█▋        | 229/1330 [2:59:31<28:34:00, 93.41s/it]  17%|█▋        | 230/1330 [3:00:24<24:49:30, 81.25s/it] 17%|█▋        | 231/1330 [3:01:15<22:01:35, 72.15s/it] 17%|█▋        | 232/1330 [3:02:03<19:48:08, 64.93s/it] 18%|█▊        | 233/1330 [3:07:59<46:25:53, 152.37s/it] 18%|█▊        | 234/1330 [3:08:42<36:22:12, 119.46s/it] 18%|█▊        | 235/1330 [3:09:27<29:34:20, 97.22s/it]  18%|█▊        | 236/1330 [3:10:20<25:29:41, 83.90s/it] 18%|█▊        | 237/1330 [3:10:57<21:15:07, 70.00s/it] 18%|█▊        | 238/1330 [3:12:46<24:44:35, 81.57s/it] 18%|█▊        | 239/1330 [3:13:52<23:15:46, 76.76s/it] 18%|█▊        | 240/1330 [3:14:46<21:11:25, 69.99s/it] 18%|█▊        | 241/1330 [3:15:26<18:27:59, 61.05s/it] 18%|█▊        | 242/1330 [3:16:40<19:35:17, 64.81s/it] 18%|█▊        | 243/1330 [3:17:15<16:56:13, 56.09s/it] 18%|█▊        | 244/1330 [3:17:48<14:50:03, 49.17s/it] 18%|█▊        | 245/1330 [3:18:33<14:27:21, 47.96s/it] 18%|█▊        | 246/1330 [3:19:50<17:03:09, 56.63s/it] 19%|█▊        | 247/1330 [3:20:48<17:09:11, 57.02s/it] 19%|█▊        | 248/1330 [3:21:39<16:34:51, 55.17s/it] 19%|█▊        | 249/1330 [3:22:29<16:06:59, 53.67s/it] 19%|█▉        | 250/1330 [3:23:19<15:46:09, 52.56s/it] 19%|█▉        | 251/1330 [3:25:14<21:20:38, 71.21s/it] 19%|█▉        | 252/1330 [3:31:55<50:54:55, 170.03s/it] 19%|█▉        | 253/1330 [3:33:21<43:21:38, 144.94s/it] 19%|█▉        | 254/1330 [3:35:50<43:43:34, 146.30s/it] 19%|█▉        | 255/1330 [3:36:43<35:14:59, 118.05s/it] 19%|█▉        | 256/1330 [3:37:33<29:11:55, 97.87s/it]  19%|█▉        | 257/1330 [3:43:08<50:20:03, 168.88s/it] 19%|█▉        | 258/1330 [3:44:05<40:16:42, 135.26s/it] 19%|█▉        | 259/1330 [3:44:39<31:13:58, 104.98s/it] 20%|█▉        | 260/1330 [3:45:12<24:44:15, 83.23s/it]  20%|█▉        | 261/1330 [3:45:43<20:08:34, 67.83s/it] 20%|█▉        | 262/1330 [3:46:20<17:19:49, 58.42s/it] 20%|█▉        | 263/1330 [3:47:38<19:06:26, 64.47s/it] 20%|█▉        | 264/1330 [3:48:30<17:57:06, 60.63s/it] 20%|█▉        | 265/1330 [3:49:17<16:40:17, 56.35s/it] 20%|██        | 266/1330 [3:49:52<14:47:19, 50.04s/it] 20%|██        | 267/1330 [3:50:28<13:33:52, 45.94s/it] 20%|██        | 268/1330 [3:53:48<27:11:36, 92.18s/it] 20%|██        | 269/1330 [3:54:43<23:50:31, 80.90s/it] 20%|██        | 270/1330 [3:55:15<19:29:00, 66.17s/it] 20%|██        | 271/1330 [3:56:16<19:04:38, 64.85s/it] 20%|██        | 272/1330 [3:57:01<17:14:51, 58.69s/it] 21%|██        | 273/1330 [3:58:46<21:20:22, 72.68s/it] 21%|██        | 274/1330 [3:59:36<19:20:52, 65.96s/it] 21%|██        | 275/1330 [4:00:19<17:16:28, 58.95s/it] 21%|██        | 276/1330 [4:02:07<21:34:28, 73.69s/it] 21%|██        | 277/1330 [4:03:43<23:33:03, 80.52s/it] 21%|██        | 278/1330 [4:04:29<20:29:21, 70.12s/it] 21%|██        | 279/1330 [4:05:17<18:30:37, 63.40s/it] 21%|██        | 280/1330 [4:06:28<19:09:26, 65.68s/it] 21%|██        | 281/1330 [4:07:18<17:44:29, 60.89s/it] 21%|██        | 282/1330 [4:08:09<16:51:27, 57.91s/it] 21%|██▏       | 283/1330 [4:09:02<16:25:10, 56.46s/it] 21%|██▏       | 284/1330 [4:09:52<15:51:37, 54.59s/it] 21%|██▏       | 285/1330 [4:10:59<16:57:54, 58.44s/it] 22%|██▏       | 286/1330 [4:12:10<17:59:19, 62.03s/it] 22%|██▏       | 287/1330 [4:13:10<17:47:37, 61.42s/it] 22%|██▏       | 288/1330 [4:13:50<15:57:27, 55.13s/it] 22%|██▏       | 289/1330 [4:14:36<15:05:17, 52.18s/it] 22%|██▏       | 290/1330 [4:17:31<25:46:09, 89.20s/it] 22%|██▏       | 291/1330 [4:18:49<24:43:06, 85.65s/it] 22%|██▏       | 292/1330 [4:19:47<22:21:11, 77.53s/it] 22%|██▏       | 293/1330 [4:21:18<23:30:49, 81.63s/it] 22%|██▏       | 294/1330 [4:22:54<24:42:06, 85.84s/it] 22%|██▏       | 295/1330 [4:23:45<21:39:29, 75.33s/it] 22%|██▏       | 296/1330 [4:24:28<18:52:23, 65.71s/it] 22%|██▏       | 297/1330 [4:25:10<16:47:36, 58.53s/it] 22%|██▏       | 298/1330 [4:25:49<15:08:09, 52.80s/it] 22%|██▏       | 299/1330 [4:26:51<15:53:34, 55.49s/it] 23%|██▎       | 300/1330 [4:27:59<16:54:38, 59.11s/it] 23%|██▎       | 301/1330 [4:28:53<16:30:06, 57.73s/it] 23%|██▎       | 302/1330 [4:30:19<18:54:44, 66.23s/it] 23%|██▎       | 303/1330 [4:31:38<19:59:46, 70.09s/it] 23%|██▎       | 304/1330 [4:32:29<18:19:57, 64.32s/it] 23%|██▎       | 305/1330 [4:33:19<17:03:53, 59.93s/it] 23%|██▎       | 306/1330 [4:35:07<21:09:07, 74.36s/it] 23%|██▎       | 307/1330 [4:36:01<19:26:33, 68.42s/it] 23%|██▎       | 308/1330 [4:37:12<19:35:33, 69.02s/it] 23%|██▎       | 309/1330 [4:39:49<27:07:10, 95.62s/it] 23%|██▎       | 310/1330 [4:40:59<24:52:56, 87.82s/it] 23%|██▎       | 311/1330 [4:42:09<23:17:47, 82.30s/it] 23%|██▎       | 312/1330 [4:43:55<25:20:20, 89.61s/it] 24%|██▎       | 313/1330 [4:44:44<21:50:20, 77.31s/it] 24%|██▎       | 314/1330 [4:45:53<21:09:09, 74.95s/it] 24%|██▎       | 315/1330 [4:48:07<26:04:12, 92.47s/it] 24%|██▍       | 316/1330 [4:49:17<24:11:43, 85.90s/it] 24%|██▍       | 317/1330 [4:50:11<21:28:15, 76.30s/it] 24%|██▍       | 318/1330 [4:52:47<28:12:14, 100.33s/it] 24%|██▍       | 319/1330 [4:54:07<26:23:14, 93.96s/it]  24%|██▍       | 320/1330 [4:56:26<30:11:24, 107.61s/it] 24%|██▍       | 321/1330 [4:57:18<25:26:35, 90.78s/it]  24%|██▍       | 322/1330 [4:58:52<25:46:09, 92.03s/it] 24%|██▍       | 323/1330 [4:59:53<23:07:00, 82.64s/it] 24%|██▍       | 324/1330 [5:01:12<22:45:50, 81.46s/it] 24%|██▍       | 325/1330 [5:02:58<24:48:50, 88.89s/it] 25%|██▍       | 326/1330 [5:05:03<27:48:26, 99.71s/it] 25%|██▍       | 327/1330 [5:06:01<24:15:50, 87.09s/it] 25%|██▍       | 328/1330 [5:06:52<21:16:56, 76.46s/it] 25%|██▍       | 329/1330 [5:07:37<18:38:01, 67.01s/it] 25%|██▍       | 330/1330 [5:09:13<20:59:52, 75.59s/it] 25%|██▍       | 331/1330 [5:10:19<20:09:17, 72.63s/it] 25%|██▍       | 332/1330 [5:12:30<24:58:36, 90.10s/it] 25%|██▌       | 333/1330 [5:20:38<58:03:33, 209.64s/it] 25%|██▌       | 334/1330 [5:21:34<45:16:25, 163.64s/it] 25%|██▌       | 335/1330 [5:22:29<36:11:51, 130.97s/it] 25%|██▌       | 336/1330 [5:23:29<30:17:27, 109.71s/it] 25%|██▌       | 337/1330 [5:24:09<24:28:20, 88.72s/it]  25%|██▌       | 338/1330 [5:24:38<19:28:26, 70.67s/it] 25%|██▌       | 339/1330 [5:25:19<17:04:00, 62.00s/it] 26%|██▌       | 340/1330 [5:26:12<16:16:33, 59.19s/it] 26%|██▌       | 341/1330 [5:26:52<14:43:01, 53.57s/it] 26%|██▌       | 342/1330 [5:27:56<15:32:27, 56.63s/it] 26%|██▌       | 343/1330 [5:28:37<14:15:40, 52.02s/it] 26%|██▌       | 344/1330 [5:29:37<14:54:21, 54.42s/it] 26%|██▌       | 345/1330 [5:30:29<14:40:06, 53.61s/it] 26%|██▌       | 346/1330 [5:31:18<14:14:14, 52.09s/it] 26%|██▌       | 347/1330 [5:32:16<14:44:27, 53.99s/it] 26%|██▌       | 348/1330 [5:34:03<19:01:55, 69.77s/it] 26%|██▌       | 349/1330 [5:34:59<17:55:07, 65.76s/it] 26%|██▋       | 350/1330 [5:36:02<17:39:43, 64.88s/it] 26%|██▋       | 351/1330 [5:36:43<15:43:16, 57.81s/it] 26%|██▋       | 352/1330 [5:37:32<14:56:37, 55.01s/it] 27%|██▋       | 353/1330 [5:38:33<15:26:11, 56.88s/it] 27%|██▋       | 354/1330 [5:39:25<15:00:15, 55.34s/it] 27%|██▋       | 355/1330 [5:46:39<45:48:08, 169.12s/it] 27%|██▋       | 356/1330 [5:47:25<35:43:47, 132.06s/it] 27%|██▋       | 357/1330 [5:48:56<32:23:20, 119.84s/it] 27%|██▋       | 358/1330 [5:49:36<25:52:50, 95.85s/it]  27%|██▋       | 359/1330 [5:51:09<25:37:08, 94.98s/it] 27%|██▋       | 360/1330 [5:51:53<21:27:16, 79.63s/it] 27%|██▋       | 361/1330 [5:52:43<19:05:15, 70.91s/it] 27%|██▋       | 362/1330 [5:54:18<20:59:50, 78.09s/it] 27%|██▋       | 363/1330 [5:55:27<20:12:10, 75.21s/it] 27%|██▋       | 364/1330 [5:56:24<18:42:21, 69.71s/it] 27%|██▋       | 365/1330 [5:58:28<23:03:35, 86.03s/it] 28%|██▊       | 366/1330 [6:00:20<25:07:50, 93.85s/it] 28%|██▊       | 367/1330 [6:00:59<20:40:48, 77.31s/it] 28%|██▊       | 368/1330 [6:01:46<18:16:24, 68.38s/it] 28%|██▊       | 369/1330 [6:02:19<15:22:48, 57.62s/it] 28%|██▊       | 370/1330 [6:02:50<13:16:20, 49.77s/it] 28%|██▊       | 371/1330 [6:06:04<24:47:06, 93.04s/it] 28%|██▊       | 372/1330 [6:07:34<24:30:54, 92.12s/it] 28%|██▊       | 373/1330 [6:08:33<21:49:48, 82.12s/it] 28%|██▊       | 374/1330 [6:09:20<19:03:16, 71.75s/it] 28%|██▊       | 375/1330 [6:09:57<16:14:05, 61.20s/it] 28%|██▊       | 376/1330 [6:10:40<14:45:26, 55.69s/it] 28%|██▊       | 377/1330 [6:11:30<14:18:52, 54.07s/it] 28%|██▊       | 378/1330 [6:12:23<14:13:15, 53.78s/it] 28%|██▊       | 379/1330 [6:13:35<15:37:54, 59.17s/it] 29%|██▊       | 380/1330 [6:14:40<16:05:54, 61.00s/it] 29%|██▊       | 381/1330 [6:15:25<14:48:29, 56.17s/it] 29%|██▊       | 382/1330 [6:19:12<28:14:21, 107.24s/it] 29%|██▉       | 383/1330 [6:19:59<23:30:37, 89.37s/it]  29%|██▉       | 384/1330 [6:21:06<21:41:28, 82.55s/it] 29%|██▉       | 385/1330 [6:28:42<51:04:56, 194.60s/it] 29%|██▉       | 386/1330 [6:33:29<58:17:05, 222.27s/it] 29%|██▉       | 387/1330 [6:34:07<43:45:25, 167.05s/it] 29%|██▉       | 388/1330 [6:34:48<33:49:01, 129.24s/it] 29%|██▉       | 389/1330 [6:35:23<26:24:29, 101.03s/it] 29%|██▉       | 390/1330 [6:37:55<30:22:27, 116.33s/it] 29%|██▉       | 391/1330 [6:39:04<26:35:16, 101.93s/it] 29%|██▉       | 392/1330 [6:40:24<24:54:27, 95.59s/it]  30%|██▉       | 393/1330 [6:41:03<20:27:09, 78.58s/it] 30%|██▉       | 394/1330 [6:41:47<17:43:34, 68.18s/it] 30%|██▉       | 395/1330 [6:42:30<15:46:02, 60.71s/it] 30%|██▉       | 396/1330 [6:43:36<16:06:01, 62.06s/it] 30%|██▉       | 397/1330 [6:44:39<16:12:18, 62.53s/it] 30%|██▉       | 398/1330 [6:45:30<15:18:23, 59.12s/it] 30%|███       | 399/1330 [6:47:31<20:04:28, 77.62s/it] 30%|███       | 400/1330 [6:48:14<17:18:52, 67.02s/it] 30%|███       | 401/1330 [6:49:01<15:44:50, 61.02s/it] 30%|███       | 402/1330 [6:49:39<14:00:52, 54.37s/it] 30%|███       | 403/1330 [6:50:32<13:53:02, 53.92s/it] 30%|███       | 404/1330 [6:51:24<13:42:06, 53.27s/it] 30%|███       | 405/1330 [6:53:32<19:27:11, 75.71s/it] 31%|███       | 406/1330 [6:54:06<16:13:33, 63.22s/it] 31%|███       | 406/1330 [6:54:48<15:44:02, 61.30s/it]╭───────────────────── Traceback (most recent call last) ──────────────────────╮│ /rds/homes/g/gaddcz/Projects/CPRD/examples/data/study_data/build_dataset.py: ││ 37 in <module>                                                               ││                                                                              ││   34 │   print(OmegaConf.to_yaml(cfg))                                       ││   35 │                                                                       ││   36 │   # Build                                                             ││ ❱ 37 │   dm = FoundationalDataModule(path_to_db=cfg.data.path_to_db,         ││   38 │   │   │   │   │   │   │   │   path_to_ds=cfg.data.path_to_ds,         ││   39 │   │   │   │   │   │   │   │   load=False,                             ││   40 │   │   │   │   │   │   │   │   include_diagnoses=True,                 ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/foundational_loader.py:116 in         ││ __init__                                                                     ││                                                                              ││   113 │   │   # Get the DL friendly representation, either by loading or bui ││   114 │   │   if load is False:                                              ││   115 │   │   │   polars_dataset = PolarsDataset(path_to_db=path_to_db)      ││ ❱ 116 │   │   │   polars_dataset.fit(path=path_to_ds,                        ││   117 │   │   │   │   │   │   │      overwrite_practice_ids=overwrite_practi ││   118 │   │   │   │   │   │   │      overwrite_meta_information=overwrite_me ││   119 │   │   │   │   │   │   │      **kwargs)                               ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:132 in fit  ││                                                                              ││   129 │   │   │   assert not any(path.iterdir()), [_ for _ in path.iterdir() ││   130 │   │   │                                                              ││   131 │   │   │   logging.info(f"Writing {split_name} split into a DL friend ││ ❱ 132 │   │   │   self._write_parquet_dl_dataset(save_path=path,             ││   133 │   │   │   │   │   │   │   │   │   │      split_ids=split_ids,        ││   134 │   │   │   │   │   │   │   │   │   │      include_diagnoses = include ││   135 │   │   │   │   │   │   │   │   │   │      include_measurements = incl ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:187 in      ││ _write_parquet_dl_dataset                                                    ││                                                                              ││   184 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │      ││   185 │   │                                                                  ││   186 │   │   total_samples = 0                                              ││ ❱ 187 │   │   for _idx, (chunk_name, lazy_table_frames_dict) in enumerate(tq ││   188 │   │   │                                                              ││   189 │   │   │   # Merge the lazy polars tables provided by the generator i ││   190 │   │   │   lazy_batch = self.collector._collate_lazy_tables(lazy_tabl ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/tqdm/4.64.0-GCCcore-11.3.0/lib/python3 ││ .10/site-packages/tqdm/std.py:1195 in __iter__                               ││                                                                              ││   1192 │   │   time = self._time                                             ││   1193 │   │                                                                 ││   1194 │   │   try:                                                          ││ ❱ 1195 │   │   │   for obj in iterable:                                      ││   1196 │   │   │   │   yield obj                                             ││   1197 │   │   │   │   # Update and possibly print the progressbar.          ││   1198 │   │   │   │   # Note: does not call self.update(1) for speed optimi ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/collector.py:194 in           ││ _generate_lazy_by_distinct                                                   ││                                                                              ││   191 │   │   │   │   │   │   query += f"AND {conditions[idx_table]}"        ││   192 │   │   │   │                                                          ││   193 │   │   │   │   logging.debug(f"Query: {query[:120] if len(query) > 12 ││ ❱ 194 │   │   │   │   df = pl.read_database(query=query, connection_uri=self ││   195 │   │   │   │                                                          ││   196 │   │   │   │   if len(df) > 0:                                        ││   197 │   │   │   │   │   rows_by_table["lazy_" + table] = df.lazy()         ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:95 in read_database                   ││                                                                              ││    92 │                                                                      ││    93 │   """                                                                ││    94 │   if engine == "connectorx":                                         ││ ❱  95 │   │   return _read_sql_connectorx(                                   ││    96 │   │   │   query,                                                     ││    97 │   │   │   connection_uri,                                            ││    98 │   │   │   partition_on=partition_on,                                 ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:222 in _read_sql_connectorx           ││                                                                              ││   219 │   │   │   "connectorx is not installed. Please run `pip install conn ││   220 │   │   ) from None                                                    ││   221 │                                                                      ││ ❱ 222 │   tbl = cx.read_sql(                                                 ││   223 │   │   conn=connection_uri,                                           ││   224 │   │   query=query,                                                   ││   225 │   │   return_type="arrow2",                                          ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/connectorx/__init__.py:257 in read_sql                      ││                                                                              ││   254 │   │   except ModuleNotFoundError:                                    ││   255 │   │   │   raise ValueError("You need to install pyarrow first")      ││   256 │   │                                                                  ││ ❱ 257 │   │   result = _read_sql(                                            ││   258 │   │   │   conn,                                                      ││   259 │   │   │   "arrow" if return_type in {"arrow", "polars"} else "arrow2 ││   260 │   │   │   queries=queries,                                           │╰──────────────────────────────────────────────────────────────────────────────╯RuntimeError: timed out waiting for connectionGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.slurmstepd: error: *** JOB 12401089 ON bear-pg0208u31a CANCELLED AT 2024-08-14T11:07:49 ***GCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.[Parallel(n_jobs=3)]: Done   2 tasks      | elapsed:  1.4min[Parallel(n_jobs=3)]: Done   7 tasks      | elapsed:  1.8min[Parallel(n_jobs=3)]: Done  12 tasks      | elapsed:  2.5min[Parallel(n_jobs=3)]: Done  19 tasks      | elapsed:  3.4min[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed:  4.1min[Parallel(n_jobs=3)]: Done  35 tasks      | elapsed:  6.3min[Parallel(n_jobs=3)]: Done  44 tasks      | elapsed: 12.0min[Parallel(n_jobs=3)]: Done  55 tasks      | elapsed: 14.3min[Parallel(n_jobs=3)]: Done  66 tasks      | elapsed: 17.5min[Parallel(n_jobs=3)]: Done  79 tasks      | elapsed: 20.4min[Parallel(n_jobs=3)]: Done  92 tasks      | elapsed: 25.1min[Parallel(n_jobs=3)]: Done 107 tasks      | elapsed: 30.0min[Parallel(n_jobs=3)]: Done 122 tasks      | elapsed: 34.8min[Parallel(n_jobs=3)]: Done 139 tasks      | elapsed: 39.8min[Parallel(n_jobs=3)]: Done 156 tasks      | elapsed: 45.3min[Parallel(n_jobs=3)]: Done 175 tasks      | elapsed: 51.6min[Parallel(n_jobs=3)]: Done 194 tasks      | elapsed: 58.7min[Parallel(n_jobs=3)]: Done 215 tasks      | elapsed: 65.4min[Parallel(n_jobs=3)]: Done 236 tasks      | elapsed: 71.3min[Parallel(n_jobs=3)]: Done 259 tasks      | elapsed: 77.9min[Parallel(n_jobs=3)]: Done 282 tasks      | elapsed: 82.9min[Parallel(n_jobs=3)]: Done 307 tasks      | elapsed: 87.8min[Parallel(n_jobs=3)]: Done 332 tasks      | elapsed: 94.0min[Parallel(n_jobs=3)]: Done 359 tasks      | elapsed: 100.6min[Parallel(n_jobs=3)]: Done 386 tasks      | elapsed: 108.3min[Parallel(n_jobs=3)]: Done 415 tasks      | elapsed: 113.6min[Parallel(n_jobs=3)]: Done 444 tasks      | elapsed: 120.7min[Parallel(n_jobs=3)]: Done 475 tasks      | elapsed: 128.1min[Parallel(n_jobs=3)]: Done 506 tasks      | elapsed: 136.8min[Parallel(n_jobs=3)]: Done 539 tasks      | elapsed: 144.1min[Parallel(n_jobs=3)]: Done 572 tasks      | elapsed: 150.5min[Parallel(n_jobs=3)]: Done 607 tasks      | elapsed: 157.1min[Parallel(n_jobs=3)]: Done 642 tasks      | elapsed: 165.1min[Parallel(n_jobs=3)]: Done 679 tasks      | elapsed: 174.2min[Parallel(n_jobs=3)]: Done 716 tasks      | elapsed: 187.4min[Parallel(n_jobs=3)]: Done 755 tasks      | elapsed: 198.9min[Parallel(n_jobs=3)]: Done 794 tasks      | elapsed: 211.9min[Parallel(n_jobs=3)]: Done 835 tasks      | elapsed: 223.3min[Parallel(n_jobs=3)]: Done 876 tasks      | elapsed: 236.3min[Parallel(n_jobs=3)]: Done 919 tasks      | elapsed: 252.7min[Parallel(n_jobs=3)]: Done 962 tasks      | elapsed: 269.1min[Parallel(n_jobs=3)]: Done 1007 tasks      | elapsed: 280.8min[Parallel(n_jobs=3)]: Done 1052 tasks      | elapsed: 301.5min[Parallel(n_jobs=3)]: Done 1099 tasks      | elapsed: 313.8min[Parallel(n_jobs=3)]: Done 1146 tasks      | elapsed: 330.1min[Parallel(n_jobs=3)]: Done 1195 tasks      | elapsed: 340.4min[Parallel(n_jobs=3)]: Done 1244 tasks      | elapsed: 353.8min[Parallel(n_jobs=3)]: Done 1295 tasks      | elapsed: 365.0min[Parallel(n_jobs=3)]: Done 1330 out of 1330 | elapsed: 371.2min finishedINFO:root:Creating file_row_count_dicts for file-index look-upsAdded path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.Fitting dataset over 3 threadsis_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 20  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvStreamGPT_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: Noneoptim:  num_epochs: 1  learning_rate: 0.0001  scheduler: CAWarmRestarts  scheduler_periods: 5000  scheduler_warmup: true  lr_cosine_decay_period: 10000000.0  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 1024  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.2  attention_dropout: 0.2  resid_dropout: 0.2head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1it [00:00,  4.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 6it [00:00, 15.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 12it [00:00, 27.54it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 16it [00:00, 30.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 20it [00:00, 32.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 26it [00:00, 36.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 30it [00:01, 34.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 38it [00:01, 41.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 43it [00:01, 40.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 48it [00:01, 39.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 52it [00:01, 39.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 58it [00:01, 41.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 63it [00:01, 42.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 68it [00:01, 43.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 73it [00:02, 38.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 78it [00:02, 37.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 82it [00:02, 36.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 87it [00:02, 37.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 92it [00:02, 37.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 96it [00:02, 37.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 102it [00:02, 36.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 106it [00:02, 36.16it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 110it [00:03, 35.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 116it [00:03, 41.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 121it [00:03, 40.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 131it [00:03, 55.31it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 137it [00:03, 50.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 143it [00:03, 48.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 149it [00:03, 48.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 155it [00:03, 51.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 161it [00:04, 52.73it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 167it [00:04, 54.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 173it [00:04, 52.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 179it [00:04, 49.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 191it [00:04, 65.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 198it [00:04, 62.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 207it [00:04, 61.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 214it [00:04, 51.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 220it [00:05, 52.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 226it [00:05, 53.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 236it [00:05, 64.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 247it [00:05, 73.43it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 255it [00:05, 63.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 264it [00:05, 67.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 272it [00:05, 63.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 279it [00:05, 61.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 286it [00:06, 60.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 294it [00:06, 62.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 302it [00:06, 59.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 309it [00:06, 57.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 315it [00:06, 55.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 321it [00:06, 52.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 327it [00:06, 48.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 333it [00:06, 50.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 339it [00:07, 47.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 345it [00:07, 49.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 351it [00:07, 49.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 358it [00:07, 51.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 365it [00:07, 56.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 371it [00:07, 56.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 377it [00:07, 56.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 383it [00:07, 51.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 390it [00:08, 55.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 396it [00:08, 47.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 402it [00:08, 49.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 410it [00:08, 55.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 416it [00:08, 56.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 422it [00:08, 56.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 428it [00:08, 56.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 434it [00:08, 53.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 443it [00:09, 56.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 450it [00:09, 58.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 456it [00:09, 56.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 467it [00:09, 67.84it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 479it [00:09, 77.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 487it [00:09, 71.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 495it [00:09, 70.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 503it [00:09, 66.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 510it [00:10, 63.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 517it [00:10, 65.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 525it [00:10, 67.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 532it [00:10, 61.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 541it [00:10, 65.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 548it [00:10, 57.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 555it [00:10, 57.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 564it [00:10, 65.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 571it [00:11, 57.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 580it [00:11, 64.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 593it [00:11, 80.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 602it [00:11, 75.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 610it [00:11, 73.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 618it [00:11, 72.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 627it [00:11, 76.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 635it [00:11, 69.02it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 643it [00:11, 67.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 650it [00:12, 60.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 657it [00:12, 59.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 664it [00:12, 53.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 674it [00:12, 64.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 685it [00:12, 72.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 693it [00:12, 65.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 700it [00:12, 63.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 711it [00:13, 71.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 719it [00:13, 71.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 727it [00:13, 61.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 735it [00:13, 62.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 742it [00:13, 62.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 749it [00:13, 56.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 755it [00:13, 55.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 761it [00:13, 53.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 768it [00:14, 57.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 777it [00:14, 65.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 785it [00:14, 66.00it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 792it [00:14, 65.24it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 802it [00:14, 73.12it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 810it [00:14, 69.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 818it [00:14, 64.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 825it [00:14, 64.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 832it [00:15, 55.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 838it [00:15, 53.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 845it [00:15, 55.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 853it [00:15, 60.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 860it [00:15, 62.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 867it [00:15, 62.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 875it [00:15, 67.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 884it [00:15, 73.47it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 892it [00:15, 72.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 902it [00:16, 79.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 914it [00:16, 90.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 924it [00:16, 80.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 933it [00:16, 71.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 941it [00:16, 62.06it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 948it [00:16, 62.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 955it [00:16, 64.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 964it [00:16, 67.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 971it [00:17, 66.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 978it [00:17, 63.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 990it [00:17, 77.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 999it [00:17, 71.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1007it [00:17, 72.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1018it [00:17, 80.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1027it [00:17, 65.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1038it [00:17, 68.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1046it [00:18, 64.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1053it [00:18, 62.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1062it [00:18, 66.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1075it [00:18, 80.75it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1084it [00:18, 62.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1094it [00:18, 70.22it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1102it [00:18, 66.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1110it [00:19, 69.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1119it [00:19, 72.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1130it [00:19, 80.36it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1139it [00:19, 70.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1147it [00:19, 64.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1159it [00:19, 75.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1167it [00:19, 74.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1179it [00:19, 85.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1198it [00:20, 112.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1210it [00:20, 105.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1221it [00:20, 85.14it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1231it [00:20, 81.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1240it [00:20, 69.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1248it [00:20, 69.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1260it [00:20, 80.59it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1269it [00:20, 80.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1278it [00:21, 78.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1290it [00:21, 87.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1301it [00:21, 91.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1311it [00:21, 78.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1320it [00:21, 74.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1328it [00:21, 70.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1336it [00:21, 69.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1344it [00:22, 62.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1352it [00:22, 66.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1364it [00:22, 77.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1374it [00:22, 81.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1386it [00:22, 87.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1395it [00:22, 85.55it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1408it [00:22, 93.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1418it [00:22, 80.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1429it [00:22, 86.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1439it [00:23, 82.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1448it [00:23, 78.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1457it [00:23, 78.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1471it [00:23, 93.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1483it [00:23, 98.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1494it [00:23, 85.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1509it [00:23, 97.13it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1520it [00:24, 82.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1529it [00:24, 74.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1538it [00:24, 75.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1548it [00:24, 80.63it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1557it [00:24, 78.50it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1571it [00:24, 90.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1581it [00:24, 92.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1591it [00:24, 82.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1600it [00:25, 82.20it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1609it [00:25, 78.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1618it [00:25, 76.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1626it [00:25, 70.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1639it [00:25, 84.27it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1648it [00:25, 77.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1662it [00:25, 92.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1672it [00:25, 91.97it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1682it [00:26, 83.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1695it [00:26, 85.79it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1710it [00:26, 100.29it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1721it [00:26, 102.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1732it [00:26, 95.12it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1743it [00:26, 93.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1753it [00:26, 93.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1763it [00:26, 86.35it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1772it [00:26, 85.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1781it [00:27, 72.39it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1791it [00:27, 78.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1800it [00:27, 77.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1809it [00:27, 77.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1817it [00:27, 69.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1826it [00:27, 73.57it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1834it [00:27, 70.09it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1843it [00:27, 73.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1851it [00:28, 73.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1863it [00:28, 85.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1872it [00:28, 85.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1881it [00:28, 86.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1893it [00:28, 78.32it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1903it [00:28, 79.68it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1912it [00:28, 81.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1923it [00:28, 88.19it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1933it [00:29, 88.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1947it [00:29, 101.42it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1958it [00:29, 91.61it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1970it [00:29, 97.52it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1981it [00:29, 95.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 1991it [00:29, 90.94it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2001it [00:29, 86.64it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2016it [00:29, 100.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2030it [00:29, 107.28it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2041it [00:30, 102.98it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2052it [00:30, 96.83it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2062it [00:30, 93.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2072it [00:30, 90.65it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2082it [00:30, 83.85it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2094it [00:30, 92.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2107it [00:30, 102.41it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2123it [00:30, 117.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2136it [00:31, 99.02it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2150it [00:31, 105.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2162it [00:31, 100.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2173it [00:31, 100.86it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2186it [00:31, 105.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2197it [00:31, 104.17it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2209it [00:31, 103.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2220it [00:31, 92.77it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2232it [00:32, 97.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2244it [00:32, 101.89it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2257it [00:32, 107.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2268it [00:32, 99.47it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2279it [00:32, 97.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2289it [00:32, 95.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2302it [00:32, 99.95it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2313it [00:32, 90.72it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2323it [00:32, 92.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2333it [00:33, 88.21it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2345it [00:33, 93.69it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2355it [00:33, 91.56it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2365it [00:33, 87.51it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2374it [00:33, 84.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2384it [00:33, 87.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2394it [00:33, 89.77it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2407it [00:33, 97.34it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2425it [00:34, 114.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2444it [00:34, 128.26it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2461it [00:34, 136.40it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2477it [00:34, 136.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2491it [00:34, 119.91it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2504it [00:34, 120.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2519it [00:34, 126.87it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2532it [00:34, 107.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2544it [00:35, 100.62it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2559it [00:35, 112.30it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2571it [00:35, 106.82it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2583it [00:35, 88.75it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2593it [00:35, 66.66it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2606it [00:35, 77.88it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2627it [00:35, 103.05it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2639it [00:36, 100.46it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2661it [00:36, 124.99it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2675it [00:36, 116.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2688it [00:36, 109.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2703it [00:36, 117.23it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2716it [00:36, 113.15it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2732it [00:36, 124.60it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2749it [00:36, 134.93it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2771it [00:37, 158.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2788it [00:37, 131.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2805it [00:37, 139.71it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2820it [00:37, 135.96it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2835it [00:37, 124.10it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2848it [00:37, 113.38it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2860it [00:37, 109.74it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2875it [00:37, 116.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2887it [00:38, 114.53it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2903it [00:38, 125.80it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2920it [00:38, 137.25it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2935it [00:38, 112.92it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2948it [00:38, 116.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 2956it [00:38, 76.64it/s] INFO:root:	 Obtained with a total of 572096 samplesINFO:root:Writing test split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.[Parallel(n_jobs=3)]: Done   2 tasks      | elapsed:  2.6min[Parallel(n_jobs=3)]: Done   7 tasks      | elapsed:  2.9min[Parallel(n_jobs=3)]: Done  12 tasks      | elapsed:  3.9min[Parallel(n_jobs=3)]: Done  19 tasks      | elapsed:  5.2min[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed:  7.2min[Parallel(n_jobs=3)]: Done  35 tasks      | elapsed:  8.4min[Parallel(n_jobs=3)]: Done  44 tasks      | elapsed: 10.4min[Parallel(n_jobs=3)]: Done  55 tasks      | elapsed: 13.8min[Parallel(n_jobs=3)]: Done  66 tasks      | elapsed: 16.0min[Parallel(n_jobs=3)]: Done  74 out of  74 | elapsed: 16.4min finishedINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 14it [00:00, 109.49it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 27it [00:00, 105.48it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 38it [00:00, 92.47it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 50it [00:00, 100.11it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 62it [00:00, 104.33it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 73it [00:00, 95.06it/s] Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 83it [00:00, 94.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 95it [00:00, 99.90it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 116it [00:01, 128.07it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 129it [00:01, 114.04it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 151it [00:01, 137.78it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 177it [00:01, 166.08it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 180it [00:01, 125.41it/s]INFO:root:	 Obtained with a total of 35758 samplesINFO:root:Writing val split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.[Parallel(n_jobs=3)]: Done   2 tasks      | elapsed:  1.8min[Parallel(n_jobs=3)]: Done   7 tasks      | elapsed:  3.0min[Parallel(n_jobs=3)]: Done  12 tasks      | elapsed:  3.9min[Parallel(n_jobs=3)]: Done  19 tasks      | elapsed:  5.5min[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed:  7.2min[Parallel(n_jobs=3)]: Done  35 tasks      | elapsed:  8.5min[Parallel(n_jobs=3)]: Done  44 tasks      | elapsed:  9.6min[Parallel(n_jobs=3)]: Done  55 tasks      | elapsed: 11.4min[Parallel(n_jobs=3)]: Done  66 tasks      | elapsed: 13.7min[Parallel(n_jobs=3)]: Done  74 out of  74 | elapsed: 14.2min finishedINFO:root:Creating file_row_count_dicts for file-index look-upsGetting file row counts. This allows the creation of an index to file map, increasing read efficiency: 0it [00:00, ?it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 5it [00:00, 42.61it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 21it [00:00, 99.81it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 36it [00:00, 120.83it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 49it [00:00, 110.58it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 71it [00:00, 137.18it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 89it [00:00, 149.67it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 105it [00:00, 125.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 125it [00:00, 140.45it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 140it [00:01, 134.03it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 163it [00:01, 157.76it/s]Getting file row counts. This allows the creation of an index to file map, increasing read efficiency: 170it [00:01, 134.93it/s]INFO:root:	 Obtained with a total of 33280 samplesGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Creating unsupervised collator for DataModuleINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.[Parallel(n_jobs=3)]: Done   2 tasks      | elapsed:  4.7min[Parallel(n_jobs=3)]: Done   7 tasks      | elapsed:  6.5min[Parallel(n_jobs=3)]: Done  12 tasks      | elapsed: 10.3min[Parallel(n_jobs=3)]: Done  19 tasks      | elapsed: 15.3min[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed: 18.6min[Parallel(n_jobs=3)]: Done  35 tasks      | elapsed: 23.0min[Parallel(n_jobs=3)]: Done  44 tasks      | elapsed: 31.0min[Parallel(n_jobs=3)]: Done  55 tasks      | elapsed: 34.4min[Parallel(n_jobs=3)]: Done  66 tasks      | elapsed: 39.2min[Parallel(n_jobs=3)]: Done  79 tasks      | elapsed: 43.2min[Parallel(n_jobs=3)]: Done  92 tasks      | elapsed: 49.1min[Parallel(n_jobs=3)]: Done 107 tasks      | elapsed: 54.5min[Parallel(n_jobs=3)]: Done 122 tasks      | elapsed: 58.9min[Parallel(n_jobs=3)]: Done 139 tasks      | elapsed: 63.6min[Parallel(n_jobs=3)]: Done 156 tasks      | elapsed: 69.0min[Parallel(n_jobs=3)]: Done 175 tasks      | elapsed: 75.4min[Parallel(n_jobs=3)]: Done 194 tasks      | elapsed: 82.6min[Parallel(n_jobs=3)]: Done 215 tasks      | elapsed: 89.4min[Parallel(n_jobs=3)]: Done 236 tasks      | elapsed: 95.4min[Parallel(n_jobs=3)]: Done 259 tasks      | elapsed: 103.0min[Parallel(n_jobs=3)]: Done 282 tasks      | elapsed: 108.5min[Parallel(n_jobs=3)]: Done 307 tasks      | elapsed: 113.8min[Parallel(n_jobs=3)]: Done 332 tasks      | elapsed: 122.1min[Parallel(n_jobs=3)]: Done 359 tasks      | elapsed: 134.6min[Parallel(n_jobs=3)]: Done 386 tasks      | elapsed: 146.0min[Parallel(n_jobs=3)]: Done 415 tasks      | elapsed: 151.9min[Parallel(n_jobs=3)]: Done 444 tasks      | elapsed: 158.8min[Parallel(n_jobs=3)]: Done 475 tasks      | elapsed: 165.9min[Parallel(n_jobs=3)]: Done 506 tasks      | elapsed: 175.3min[Parallel(n_jobs=3)]: Done 539 tasks      | elapsed: 184.3min[Parallel(n_jobs=3)]: Done 572 tasks      | elapsed: 191.7min[Parallel(n_jobs=3)]: Done 607 tasks      | elapsed: 198.5min[Parallel(n_jobs=3)]: Done 642 tasks      | elapsed: 207.5min[Parallel(n_jobs=3)]: Done 679 tasks      | elapsed: 217.8min[Parallel(n_jobs=3)]: Done 716 tasks      | elapsed: 228.4min[Parallel(n_jobs=3)]: Done 755 tasks      | elapsed: 236.8min[Parallel(n_jobs=3)]: Done 794 tasks      | elapsed: 244.6min[Parallel(n_jobs=3)]: Done 835 tasks      | elapsed: 253.5min[Parallel(n_jobs=3)]: Done 876 tasks      | elapsed: 264.0min[Parallel(n_jobs=3)]: Done 919 tasks      | elapsed: 275.9min[Parallel(n_jobs=3)]: Done 962 tasks      | elapsed: 288.6min[Parallel(n_jobs=3)]: Done 1007 tasks      | elapsed: 299.0min[Parallel(n_jobs=3)]: Done 1052 tasks      | elapsed: 310.9min[Parallel(n_jobs=3)]: Done 1099 tasks      | elapsed: 319.3min[Parallel(n_jobs=3)]: Done 1146 tasks      | elapsed: 330.9min[Parallel(n_jobs=3)]: Done 1195 tasks      | elapsed: 339.6min[Parallel(n_jobs=3)]: Done 1244 tasks      | elapsed: 350.0min[Parallel(n_jobs=3)]: Done 1295 tasks      | elapsed: 358.8minException in thread Thread-6 (_handle_results):Traceback (most recent call last):  File "/rds/bear-apps/2022a/EL8-ice/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/threading.py", line 1009, in _bootstrap_inner    self.run()  File "/rds/bear-apps/2022a/EL8-ice/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/threading.py", line 946, in run    self._target(*self._args, **self._kwargs)  File "/rds/bear-apps/2022a/EL8-ice/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/multiprocessing/pool.py", line 592, in _handle_results    cache[job]._set(i, obj)  File "/rds/bear-apps/2022a/EL8-ice/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/multiprocessing/pool.py", line 776, in _set    self._callback(self._value)  File "/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages/joblib/parallel.py", line 814, in __call__    self._dispatch_new()  File "/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages/joblib/parallel.py", line 829, in _dispatch_new    self.parallel.dispatch_next()  File "/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages/joblib/parallel.py", line 1395, in dispatch_next    if not self.dispatch_one_batch(self._original_iterator):  File "/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages/joblib/parallel.py", line 1434, in dispatch_one_batch    islice = list(itertools.islice(iterator, big_batch_size))  File "/rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py", line 226, in <genexpr>    Parallel(n_jobs=num_threads, prefer="threads", verbose=10)(delayed(self._write_lazy_to_parquet_dl)(lazy_table_frames_dict,  File "/rds/homes/g/gaddcz/Projects/CPRD/data/dataset/collector.py", line 194, in _generate_lazy_by_distinct    df = pl.read_database(query=query, connection_uri=self.connection_token)  File "/rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3.10/site-packages/polars/io/database.py", line 95, in read_database    return _read_sql_connectorx(  File "/rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3.10/site-packages/polars/io/database.py", line 222, in _read_sql_connectorx    tbl = cx.read_sql(  File "/rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3.10/site-packages/connectorx/__init__.py", line 257, in read_sql    result = _read_sql(RuntimeError: timed out waiting for connectionslurmstepd: error: *** JOB 13608730 ON bear-pg0208u04a CANCELLED AT 2024-09-30T19:09:38 ***GCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building study dataset on 72 CPUs and 1 GPUsINFO:root:Creating unsupervised collator for DataModuleINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.Fitting dataset over 3 threadsis_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 12  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvEHR_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  fine_tune_id: null  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: nulloptim:  num_epochs: 1  learning_rate: 0.0003  scheduler_warmup: true  scheduler: CAWarmRestarts  scheduler_periods: 10000  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 512  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.0  attention_dropout: 0.0  resid_dropout: 0.0head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5╭───────────────────── Traceback (most recent call last) ──────────────────────╮│ /rds/homes/g/gaddcz/Projects/CPRD/examples/data/study_data/build_dataset.py: ││ 40 in <module>                                                               ││                                                                              ││   37 │   print(OmegaConf.to_yaml(cfg))                                       ││   38 │                                                                       ││   39 │   # Build                                                             ││ ❱ 40 │   dm = FoundationalDataModule(path_to_db=cfg.data.path_to_db,         ││   41 │   │   │   │   │   │   │   │   path_to_ds=cfg.data.path_to_ds,         ││   42 │   │   │   │   │   │   │   │   load=False,                             ││   43 │   │   │   │   │   │   │   │   include_diagnoses=True,                 ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/foundational_loader.py:123 in         ││ __init__                                                                     ││                                                                              ││   120 │   │   # Get the DL friendly representation, either by loading or bui ││   121 │   │   if load is False:                                              ││   122 │   │   │   polars_dataset = PolarsDataset(path_to_db=path_to_db)      ││ ❱ 123 │   │   │   polars_dataset.fit(path=path_to_ds,                        ││   124 │   │   │   │   │   │   │      overwrite_practice_ids=overwrite_practi ││   125 │   │   │   │   │   │   │      overwrite_meta_information=overwrite_me ││   126 │   │   │   │   │   │   │      **kwargs)                               ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:134 in fit  ││                                                                              ││   131 │   │   │   assert not any(path.iterdir()), [_ for _ in path.iterdir() ││   132 │   │   │                                                              ││   133 │   │   │   logging.info(f"Writing {split_name} split into a DL friend ││ ❱ 134 │   │   │   self._write_parquet_dl_dataset(save_path=path,             ││   135 │   │   │   │   │   │   │   │   │   │      split_ids=split_ids,        ││   136 │   │   │   │   │   │   │   │   │   │      include_diagnoses = include ││   137 │   │   │   │   │   │   │   │   │   │      include_measurements = incl ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:226 in      ││ _write_parquet_dl_dataset                                                    ││                                                                              ││   223 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │      ││   224 │   │                                                                  ││   225 │   │   if num_threads > 1:                                            ││ ❱ 226 │   │   │   Parallel(n_jobs=num_threads, prefer="threads", verbose=10) ││   227 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││   228 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││   229 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-pa ││ ckages/joblib/parallel.py:1950 in __call__                                   ││                                                                              ││   1947 │   │   # progress until it enters the Try/Except block of the genera ││   1948 │   │   # reach the first `yield` statement. This starts the aynchron ││   1949 │   │   # dispatch of the tasks to the workers.                       ││ ❱ 1950 │   │   next(output)                                                  ││   1951 │   │                                                                 ││   1952 │   │   return output if self.return_generator else list(output)      ││   1953                                                                       ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-pa ││ ckages/joblib/parallel.py:1588 in _get_outputs                               ││                                                                              ││   1585 │   │   dispatch_thread_id = threading.get_ident()                    ││   1586 │   │   detach_generator_exit = False                                 ││   1587 │   │   try:                                                          ││ ❱ 1588 │   │   │   self._start(iterator, pre_dispatch)                       ││   1589 │   │   │   # first yield returns None, for internal use only. This e ││   1590 │   │   │   # that we enter the try/except block and start dispatchin ││   1591 │   │   │   # tasks.                                                  ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-pa ││ ckages/joblib/parallel.py:1571 in _start                                     ││                                                                              ││   1568 │   │   # was very quick and its callback already dispatched all the  ││   1569 │   │   # remaining jobs.                                             ││   1570 │   │   self._iterating = False                                       ││ ❱ 1571 │   │   if self.dispatch_one_batch(iterator):                         ││   1572 │   │   │   self._iterating = self._original_iterator is not None     ││   1573 │   │                                                                 ││   1574 │   │   while self.dispatch_one_batch(iterator):                      ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-pa ││ ckages/joblib/parallel.py:1434 in dispatch_one_batch                         ││                                                                              ││   1431 │   │   │   │   n_jobs = self._cached_effective_n_jobs                ││   1432 │   │   │   │   big_batch_size = batch_size * n_jobs                  ││   1433 │   │   │   │                                                         ││ ❱ 1434 │   │   │   │   islice = list(itertools.islice(iterator, big_batch_si ││   1435 │   │   │   │   if len(islice) == 0:                                  ││   1436 │   │   │   │   │   return False                                      ││   1437 │   │   │   │   elif (iterator is self._original_iterator and         ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:226 in      ││ <genexpr>                                                                    ││                                                                              ││   223 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │      ││   224 │   │                                                                  ││   225 │   │   if num_threads > 1:                                            ││ ❱ 226 │   │   │   Parallel(n_jobs=num_threads, prefer="threads", verbose=10) ││   227 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││   228 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││   229 │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │   │  ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/collector.py:194 in           ││ _generate_lazy_by_distinct                                                   ││                                                                              ││   191 │   │   │   │   │   │   query += f"AND {conditions[idx_table]}"        ││   192 │   │   │   │                                                          ││   193 │   │   │   │   logging.debug(f"Query: {query[:120] if len(query) > 12 ││ ❱ 194 │   │   │   │   df = pl.read_database(query=query, connection_uri=self ││   195 │   │   │   │                                                          ││   196 │   │   │   │   if len(df) > 0:                                        ││   197 │   │   │   │   │   rows_by_table["lazy_" + table] = df.lazy()         ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:95 in read_database                   ││                                                                              ││    92 │                                                                      ││    93 │   """                                                                ││    94 │   if engine == "connectorx":                                         ││ ❱  95 │   │   return _read_sql_connectorx(                                   ││    96 │   │   │   query,                                                     ││    97 │   │   │   connection_uri,                                            ││    98 │   │   │   partition_on=partition_on,                                 ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/polars/io/database.py:222 in _read_sql_connectorx           ││                                                                              ││   219 │   │   │   "connectorx is not installed. Please run `pip install conn ││   220 │   │   ) from None                                                    ││   221 │                                                                      ││ ❱ 222 │   tbl = cx.read_sql(                                                 ││   223 │   │   conn=connection_uri,                                           ││   224 │   │   query=query,                                                   ││   225 │   │   return_type="arrow2",                                          ││                                                                              ││ /rds/bear-apps/2022a/EL8-ice/software/polars/0.17.12-foss-2022a/lib/python3. ││ 10/site-packages/connectorx/__init__.py:257 in read_sql                      ││                                                                              ││   254 │   │   except ModuleNotFoundError:                                    ││   255 │   │   │   raise ValueError("You need to install pyarrow first")      ││   256 │   │                                                                  ││ ❱ 257 │   │   result = _read_sql(                                            ││   258 │   │   │   conn,                                                      ││   259 │   │   │   "arrow" if return_type in {"arrow", "polars"} else "arrow2 ││   260 │   │   │   queries=queries,                                           │╰──────────────────────────────────────────────────────────────────────────────╯RuntimeError: no such table: static_tableGCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building study dataset on 72 CPUs and 1 GPUsINFO:root:Creating unsupervised collator for DataModuleINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.Added path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.Fitting dataset over 1 threadsis_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 12  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvEHR_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  fine_tune_id: null  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: nulloptim:  num_epochs: 1  learning_rate: 0.0003  scheduler_warmup: true  scheduler: CAWarmRestarts  scheduler_periods: 10000  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 512  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.0  attention_dropout: 0.0  resid_dropout: 0.0head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5  0%|          | 0/1330 [00:00<?, ?it/s]  0%|          | 1/1330 [00:49<18:15:40, 49.47s/it]  0%|          | 2/1330 [02:16<26:27:46, 71.74s/it]  0%|          | 3/1330 [02:54<20:44:32, 56.27s/it]slurmstepd: error: *** JOB 13623585 ON bear-pg0208u04a CANCELLED AT 2024-09-30T19:31:56 ***GCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building study dataset on 72 CPUs and 1 GPUsINFO:root:Creating unsupervised collator for DataModuleINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleAdded path '/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelake/lib/python3.10/site-packages' at start of search paths.Using device: cuda.Fitting dataset over 3 threadsis_decoder: truedata:  batch_size: 64  unk_freq_threshold: 0.0  min_workers: 12  global_diagnoses: false  path_to_db: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/  path_to_ds: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/  meta_information_path: /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/meta_information.pickleexperiment:  type: pre-train  project_name: SurvEHR_${head.SurvLayer}  run_id: PreTrain_${head.SurvLayer}_129M_${experiment.seed}  fine_tune_id: null  train: true  test: true  verbose: true  seed: 1337  log: true  log_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/  ckpt_dir: /rds/projects/s/subramaa-mum-predict/CharlesGadd_Oxford/FoundationModelOutput/checkpoints/  fine_tune_outcomes: nulloptim:  num_epochs: 1  learning_rate: 0.0003  scheduler_warmup: true  scheduler: CAWarmRestarts  scheduler_periods: 10000  val_check_interval: 1000  early_stop: false  early_stop_patience: 5  log_every_n_steps: 20  limit_val_batches: 0.05  limit_test_batches: 0.05transformer:  block_type: Neo  block_size: 128  n_layer: 10  n_head: 8  n_embd: 512  layer_norm_bias: false  attention_type: global  bias: true  dropout: 0.0  attention_dropout: 0.0  resid_dropout: 0.0head:  SurvLayer: cr  surv_weight: 0.5  tokens_for_univariate_regression: None  value_weight: 0.5╭───────────────────── Traceback (most recent call last) ──────────────────────╮│ /rds/homes/g/gaddcz/Projects/CPRD/examples/data/study_data/build_dataset.py: ││ 40 in <module>                                                               ││                                                                              ││   37 │   print(OmegaConf.to_yaml(cfg))                                       ││   38 │                                                                       ││   39 │   # Build                                                             ││ ❱ 40 │   dm = FoundationalDataModule(path_to_db=cfg.data.path_to_db,         ││   41 │   │   │   │   │   │   │   │   path_to_ds=cfg.data.path_to_ds,         ││   42 │   │   │   │   │   │   │   │   load=False,                             ││   43 │   │   │   │   │   │   │   │   include_diagnoses=True,                 ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/foundational_loader.py:123 in         ││ __init__                                                                     ││                                                                              ││   120 │   │   # Get the DL friendly representation, either by loading or bui ││   121 │   │   if load is False:                                              ││   122 │   │   │   polars_dataset = PolarsDataset(path_to_db=path_to_db)      ││ ❱ 123 │   │   │   polars_dataset.fit(path=path_to_ds,                        ││   124 │   │   │   │   │   │   │      overwrite_practice_ids=overwrite_practi ││   125 │   │   │   │   │   │   │      overwrite_meta_information=overwrite_me ││   126 │   │   │   │   │   │   │      **kwargs)                               ││                                                                              ││ /rds/homes/g/gaddcz/Projects/CPRD/data/dataset/dataset_polars.py:131 in fit  ││                                                                              ││   128 │   │   │   path = pathlib.Path(self.save_path + f"split={split_name}" ││   129 │   │   │                                                              ││   130 │   │   │   # Check directory is currently empty                       ││ ❱ 131 │   │   │   assert not any(path.iterdir()), [_ for _ in path.iterdir() ││   132 │   │   │                                                              ││   133 │   │   │   logging.info(f"Writing {split_name} split into a DL friend ││   134 │   │   │   self._write_parquet_dl_dataset(save_path=path,             │╰──────────────────────────────────────────────────────────────────────────────╯AssertionError: [PosixPath('/rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/split=train/COUNTRY=E')]GCCcore/11.3.0zlib/1.2.12-GCCcore-11.3.0binutils/2.38-GCCcore-11.3.0GCC/11.3.0numactl/2.0.14-GCCcore-11.3.0XZ/5.2.5-GCCcore-11.3.0libxml2/2.9.13-GCCcore-11.3.0libpciaccess/0.16-GCCcore-11.3.0hwloc/2.7.1-GCCcore-11.3.0OpenSSL/1.1libevent/2.1.12-GCCcore-11.3.0UCX/1.12.1-GCCcore-11.3.0libfabric/1.15.1-GCCcore-11.3.0PMIx/4.1.2-GCCcore-11.3.0UCC/1.0.0-GCCcore-11.3.0OpenMPI/4.1.4-GCC-11.3.0OpenBLAS/0.3.20-GCC-11.3.0FlexiBLAS/3.2.0-GCC-11.3.0FFTW/3.3.10-GCC-11.3.0gompi/2022aFFTW.MPI/3.3.10-gompi-2022aScaLAPACK/2.2.0-gompi-2022a-fbfoss/2022aCUDA/11.7.0bzip2/1.0.8-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0libreadline/8.1.2-GCCcore-11.3.0ncurses/6.3-GCCcore-11.3.0Tcl/8.6.12-GCCcore-11.3.0SQLite/3.38.3-GCCcore-11.3.0GMP/6.2.1-GCCcore-11.3.0libffi/3.4.2-GCCcore-11.3.0Python/3.10.4-GCCcore-11.3.0pybind11/2.9.2-GCCcore-11.3.0SciPy-bundle/2022.05-foss-2022alibyaml/0.2.5-GCCcore-11.3.0PyYAML/6.0-GCCcore-11.3.0Ninja/1.10.2-GCCcore-11.3.0protobuf/3.19.4-GCCcore-11.3.0protobuf-python/3.19.4-GCCcore-11.3.0MPFR/4.1.0-GCCcore-11.3.0NASM/2.15.05-GCCcore-11.3.0x264/20220620-GCCcore-11.3.0LAME/3.100-GCCcore-11.3.0x265/3.5-GCCcore-11.3.0expat/2.4.8-GCCcore-11.3.0libpng/1.6.37-GCCcore-11.3.0Brotli/1.0.9-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0util-linux/2.38-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0xorg-macros/1.19.3-GCCcore-11.3.0X11/20220504-GCCcore-11.3.0freetype/2.12.1-GCCcore-11.3.0fontconfig/2.14.0-GCCcore-11.3.0FriBidi/1.0.12-GCCcore-11.3.0FFmpeg/4.4.2-GCCcore-11.3.0libjpeg-turbo/2.1.3-GCCcore-11.3.0jbigkit/2.1-GCCcore-11.3.0gzip/1.12-GCCcore-11.3.0lz4/1.9.3-GCCcore-11.3.0zstd/1.5.2-GCCcore-11.3.0libdeflate/1.10-GCCcore-11.3.0LibTIFF/4.3.0-GCCcore-11.3.0Pillow/9.1.1-GCCcore-11.3.0cuDNN/8.4.1.50-CUDA-11.7.0GDRCopy/2.3-GCCcore-11.3.0UCX-CUDA/1.12.1-GCCcore-11.3.0-CUDA-11.7.0magma/2.6.2-foss-2022a-CUDA-11.7.0NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.7.0expecttest/0.1.3-GCCcore-11.3.0PyTorch/1.12.1-foss-2022a-CUDA-11.7.0tqdm/4.64.0-GCCcore-11.3.0Transformers/4.24.0-foss-2022a-CUDA-11.7.0ICU/71.1-GCCcore-11.3.0Boost/1.79.0-GCC-11.3.0snappy/1.1.9-GCCcore-11.3.0RapidJSON/1.1.0-GCCcore-11.3.0RE2/2022-06-01-GCCcore-11.3.0utf8proc/2.7.0-GCCcore-11.3.0Arrow/8.0.0-foss-2022aTk/8.6.12-GCCcore-11.3.0Tkinter/3.10.4-GCCcore-11.3.0Qhull/2020.2-GCCcore-11.3.0matplotlib/3.5.2-foss-2022apolars/0.17.12-foss-2022apoetry/1.2.2-GCCcore-11.3.0aiohttp/3.8.3-GCCcore-11.3.0BeautifulSoup/4.10.0-GCCcore-11.3.0deepdiff/5.8.1-GCCcore-11.3.0tensorboardX/2.5.1-foss-2022aPyTorch-Lightning/1.9.3-foss-2022a-CUDA-11.7.0Hydra/1.3.2-GCCcore-11.3.0scikit-learn/1.1.2-foss-2022asklearn-pandas/2.2.0-foss-2022a/rds/projects/g/gokhalkm-optimal/DataforCharles/rds/projects/g/gokhalkm-optimal/DataforCharlesdumbicelake/rds/homes/g/gaddcz/Projects/CPRD/virtual-env-icelakeBuild CVD fine-tuning dataset from CPRD.db database from Version 3 of DeXTER outputINFO:root:Building study dataset on 56 CPUs and 1 GPUsINFO:root:Creating unsupervised collator for DataModuleINFO:root:Building Polars datasets and saving to /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/FineTune_CVD20+/INFO:root:Using train/test/val splits from /rds/projects/g/gokhalkm-optimal/OPTIMAL_MASTER_DATASET/data/FoundationalModel/PreTrain/practice_id_splits.pickleINFO:root:Writing train split into a DL friendly .parquet dataset.[Parallel(n_jobs=3)]: Using backend ThreadingBackend with 3 concurrent workers.[Parallel(n_jobs=3)]: Done   2 tasks      | elapsed:  5.7min[Parallel(n_jobs=3)]: Done   7 tasks      | elapsed:  7.2min[Parallel(n_jobs=3)]: Done  12 tasks      | elapsed: 10.9min[Parallel(n_jobs=3)]: Done  19 tasks      | elapsed: 15.4min[Parallel(n_jobs=3)]: Done  26 tasks      | elapsed: 18.5min[Parallel(n_jobs=3)]: Done  35 tasks      | elapsed: 22.9min[Parallel(n_jobs=3)]: Done  44 tasks      | elapsed: 31.6min[Parallel(n_jobs=3)]: Done  55 tasks      | elapsed: 35.8min[Parallel(n_jobs=3)]: Done  66 tasks      | elapsed: 42.6min[Parallel(n_jobs=3)]: Done  79 tasks      | elapsed: 48.2min[Parallel(n_jobs=3)]: Done  92 tasks      | elapsed: 55.7min[Parallel(n_jobs=3)]: Done 107 tasks      | elapsed: 62.9min[Parallel(n_jobs=3)]: Done 122 tasks      | elapsed: 69.1min[Parallel(n_jobs=3)]: Done 139 tasks      | elapsed: 74.5min[Parallel(n_jobs=3)]: Done 156 tasks      | elapsed: 80.6min[Parallel(n_jobs=3)]: Done 175 tasks      | elapsed: 88.1min[Parallel(n_jobs=3)]: Done 194 tasks      | elapsed: 98.4min[Parallel(n_jobs=3)]: Done 215 tasks      | elapsed: 109.4min[Parallel(n_jobs=3)]: Done 236 tasks      | elapsed: 120.0min[Parallel(n_jobs=3)]: Done 259 tasks      | elapsed: 132.5min[Parallel(n_jobs=3)]: Done 282 tasks      | elapsed: 140.2min[Parallel(n_jobs=3)]: Done 307 tasks      | elapsed: 147.2min[Parallel(n_jobs=3)]: Done 332 tasks      | elapsed: 156.4min[Parallel(n_jobs=3)]: Done 359 tasks      | elapsed: 168.7min[Parallel(n_jobs=3)]: Done 386 tasks      | elapsed: 186.6min[Parallel(n_jobs=3)]: Done 415 tasks      | elapsed: 196.0min[Parallel(n_jobs=3)]: Done 444 tasks      | elapsed: 208.7min[Parallel(n_jobs=3)]: Done 475 tasks      | elapsed: 220.7min[Parallel(n_jobs=3)]: Done 506 tasks      | elapsed: 236.4min[Parallel(n_jobs=3)]: Done 539 tasks      | elapsed: 250.2min[Parallel(n_jobs=3)]: Done 572 tasks      | elapsed: 267.5min[Parallel(n_jobs=3)]: Done 607 tasks      | elapsed: 281.2minslurmstepd: error: *** JOB 13630092 ON bear-pg0103u11a CANCELLED AT 2024-10-01T14:54:09 ***